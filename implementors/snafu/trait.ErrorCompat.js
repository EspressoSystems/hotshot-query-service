(function() {var implementors = {
"hotshot_query_service":[["impl ErrorCompat for <a class=\"enum\" href=\"hotshot_query_service/enum.Error.html\" title=\"enum hotshot_query_service::Error\">Error</a>"],["impl ErrorCompat for <a class=\"struct\" href=\"hotshot_query_service/data_source/struct.StreamError.html\" title=\"struct hotshot_query_service::data_source::StreamError\">StreamError</a>"],["impl ErrorCompat for <a class=\"enum\" href=\"hotshot_query_service/status/enum.Error.html\" title=\"enum hotshot_query_service::status::Error\">Error</a>"],["impl&lt;Types: NodeType, I: NodeImplementation&lt;Types&gt;&gt; ErrorCompat for <a class=\"struct\" href=\"hotshot_query_service/availability/struct.InconsistentLeafError.html\" title=\"struct hotshot_query_service::availability::InconsistentLeafError\">InconsistentLeafError</a>&lt;Types, I&gt;"],["impl ErrorCompat for <a class=\"enum\" href=\"hotshot_query_service/availability/enum.Error.html\" title=\"enum hotshot_query_service::availability::Error\">Error</a>"],["impl&lt;Types: NodeType, I: NodeImplementation&lt;Types&gt;&gt; ErrorCompat for <a class=\"enum\" href=\"hotshot_query_service/availability/enum.InconsistentBlockError.html\" title=\"enum hotshot_query_service::availability::InconsistentBlockError\">InconsistentBlockError</a>&lt;Types, I&gt;<span class=\"where fmt-newline\">where\n    <a class=\"type\" href=\"hotshot_query_service/type.Deltas.html\" title=\"type hotshot_query_service::Deltas\">Deltas</a>&lt;Types, I&gt;: <a class=\"trait\" href=\"hotshot_query_service/trait.Resolvable.html\" title=\"trait hotshot_query_service::Resolvable\">Resolvable</a>&lt;<a class=\"type\" href=\"hotshot_query_service/type.Block.html\" title=\"type hotshot_query_service::Block\">Block</a>&lt;Types&gt;&gt;,\n    <a class=\"type\" href=\"hotshot_query_service/type.Block.html\" title=\"type hotshot_query_service::Block\">Block</a>&lt;Types&gt;: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()