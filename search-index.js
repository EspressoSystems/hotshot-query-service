var searchIndex = new Map(JSON.parse('[\
["hotshot_query_service",{"doc":"The HotShot Query Service is a minimal, generic query â€¦","t":"PPPGPIFIPFPPFPFIGIKIFPIIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNQQQQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCOOOOHNNNNNCNNOCNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNONNNNNNNOOOOOOKIGFRFPFGRGPFPFPFPPRFPFRIGFRPPFPFRPKPPFIIIIRFFKFRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNMMMMMMNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNOMNNONNNNNNNNNNNNNNNNNNNNNNNNONOOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOERFEIFEKKNNNNNNNNNNCNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNCNNNNNMNNCCCNNNNNNNNNMNNNHHKFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHIEFFEIENNNNNQENCNEHKEEECMMMMMMMMMMCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKFKEENNNNNNNNNNNNNNNNNNNCCMMNNNNNNNFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKRFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOEPFGPFEKFPPFFPFPFFNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONMONNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNOOOOOOOOGPFFPKKNNNNONNNNNNNNNNMNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNMNMNNNNNNNNNONNNNNNNNNNNNNNOOSCHCHHKIFSRKNNNNMMNNNNNNNNMNNNNNNNNMNNNNNNNNNIIIFIIIFNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONHNNOONNONNNONNNNNNOONN","n":["Availability","Custom","Err","Error","Error","Header","Leaf","Metadata","Missing","MissingSnafu","Node","NotFound","NotFoundSnafu","Ok","Options","Payload","QueryError","QueryResult","Resolvable","SignatureKey","Snafu","Status","Transaction","VidCommon","VidShare","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args_for_update","availability","availability","backtrace","backtrace","block_header","block_payload","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","catch_all","cause","cause","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commitment","commitment","create_random_transaction","data_source","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fail","fail","fail","fetching","fill_block_payload","fill_block_payload_unchecked","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_stored_view","genesis","get_block_header","get_block_payload","get_hash","get_height","get_justify_qc","get_parent_commitment","get_payload_commitment","get_proposer_id","get_view_number","group_id","hash","header","header","header","in_current_span","in_current_span","include_migrations","init","init","init","init","init","init","init","instantiate_availability_tests","instantiate_data_source_tests","instantiate_node_tests","instantiate_persistence_tests","instantiate_status_tests","internal","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","justify_qc","message","metrics","node","node","parent_commitment","port","proposer_id","run_standalone_service","serialize","serialize","serialize","source","source","status","status","status","status","testing","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","message","source","source","source","status","message","AvailabilityDataSource","BlockHash","BlockId","BlockQueryData","BlockRange","BlockSummaryQueryData","Custom","CustomSnafu","Error","Error","Fetch","FetchBlock","FetchBlockSnafu","FetchLeaf","FetchLeafSnafu","FetchTransaction","FetchTransactionSnafu","Hash","Hash","InclusionProof","InconsistentLeafError","InvalidTransactionIndex","InvalidTransactionIndexSnafu","Iter","LeafHash","LeafId","LeafQueryData","LeafRange","Number","Number","Options","PayloadHash","PayloadQueryData","PayloadRange","Pending","QueryablePayload","Ready","Request","RequestSnafu","Timestamp","TransactionHash","TransactionInclusionProof","TransactionIndex","TransactionIndex","TransactionQueryData","TransactionSummaryQueryData","UpdateAvailabilityData","VidCommonQueryData","VidCommonRange","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","backtrace","block_hash","block_hash","block_hash","block_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","by_hash","by_hash","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","common","compare","compare","context","data","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enumerate","enumerate","enumerate","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fail","fail","fail","fetch_timeout","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","genesis","genesis","get_block","get_block_range","get_block_with_transaction","get_hash","get_hash","get_leaf","get_leaf_range","get_payload","get_payload_range","get_vid_common","get_vid_common_range","group_id","hash","hash","hash","hash","hash","hash","hash","header","header","header","header","header","header","header","height","height","height","height","height","height","height","in_current_span","in_current_span","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_block","insert_leaf","insert_vid","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_future","is_empty","is_empty","is_empty","iter","leaf","leaf","len","len","map","message","metadata","new","new","new","nth","nth","nth_transaction","nth_transaction","nth_transaction_with_proof","nth_transaction_with_proof","num_transactions","num_transactions","partial_cmp","partial_cmp","payload","payload_hash","payload_hash","payload_hash","proof","proof","proposer","proposer","proposer","qc","qc_leaf","resolve","resource","resource","resource","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","size","size","source","source","status","status","subscribe_blocks","subscribe_blocks","subscribe_leaves","subscribe_leaves","subscribe_payloads","subscribe_payloads","subscribe_vid_common","subscribe_vid_common","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","transaction","transaction","transaction","transaction","transaction_by_hash","transaction_by_hash","transaction_by_hash","transaction_by_hash_with_proof","transaction_by_hash_with_proof","transaction_with_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_context","with_timeout","height","index","message","resource","resource","resource","source","status","AvailabilityProvider","Error","ExtensibleDataSource","FetchingDataSource","FileSystemDataSource","MetricsDataSource","SqlDataSource","UpdateDataSource","VersionedDataSource","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","as_mut","as_ref","availability_tests","block_height","block_height","block_height","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commit","connect","connect","connect","count_proposals","count_transactions","create","create","create","create","create_with_store","default","deref","deref","deref_mut","deref_mut","drop","drop","fetching","fmt","fmt","from","from","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_vid_common","get_vid_common_range","handle_event","handle_event","handle_event","init","init","inner","inner_mut","insert_block","insert_leaf","insert_vid","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","metrics","metrics","new","node_tests","open","open_with_store","payload_size","persistence_tests","populate_metrics","populate_metrics","reset","reset","reset","revert","revert","skip_version","sql","status_tests","storage","sync_status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update","vid_share","vzip","vzip","test_range","test_update","AvailabilityProvider","Builder","FetchingDataSource","StorageReadGuard","StorageWriteGuard","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_height","block_height","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone_into","commit","connect","count_proposals","count_transactions","create","create_with_store","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_proactive_fetching","drop","drop","drop","drop","fmt","from","from","from","from","from","from","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_vid_common","get_vid_common_range","init","init","init","init","insert_block","insert_leaf","insert_vid","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","metrics","new","open","open_with_store","payload_size","populate_metrics","revert","skip_version","storage","storage_mut","sync_status","to_owned","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vid_share","vzip","vzip","vzip","vzip","with_major_scan_interval","with_minor_scan_interval","with_proactive_range_chunk_size","with_range_chunk_size","with_retry_delay","test_counters","test_proposer_queries","test_sync_status","test_vid_monotonicity","test_vid_recovery","test_vid_shares","test_reset","test_revert","Builder","Config","Error","Migration","Query","SqlDataSource","Transaction","client","connect","connect","create","handle_event","include_migrations","postgres","reset","testing","transaction","TmpDb","test_metrics","AvailabilityStorage","FileSystemStorage","NoStorage","SqlStorage","fs","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_vid_common","get_vid_common_range","no_storage","sql","FileSystemStorage","as_any","as_any_mut","block_height","borrow","borrow_mut","commit","count_proposals","count_transactions","create","create_with_store","deref","deref_mut","drop","fmt","from","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_vid_common","get_vid_common_range","init","insert_block","insert_leaf","insert_vid","into","into_any","into_any_arc","into_any_rc","open","open_with_store","payload_size","revert","skip_version","sync_status","try_from","try_into","type_id","vid_share","vzip","NoStorage","__clone_box","__clone_box","as_any","as_any_mut","block_height","borrow","borrow_mut","clone","clone_into","commit","count_proposals","count_transactions","default","deref","deref_mut","drop","fmt","from","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_vid_common","get_vid_common_range","init","insert_block","insert_leaf","insert_vid","into","into_any","into_any_arc","into_any_rc","payload_size","revert","sync_status","testing","to_owned","try_from","try_into","type_id","vid_share","vzip","DataSource","NoStorage","NoStorage","Sql","Sql","Storage","as_any","as_any","as_any_mut","as_any_mut","block_height","block_height","borrow","borrow","borrow_mut","borrow_mut","commit","connect","count_proposals","count_transactions","create","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_vid_common","get_vid_common_range","handle_event","init","init","insert_block","insert_leaf","insert_vid","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","metrics","payload_size","populate_metrics","reset","revert","setup","sync_status","try_from","try_from","try_into","try_into","type_id","type_id","vid_share","vzip","vzip","fetch_from_port","Config","Error","Migration","Query","SqlStorage","Transaction","__clone_box","__clone_box","__clone_box","__clone_box","applied_on","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","backtrace","block_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","chain","checksum","client","client","client","clone","clone","clone_into","clone_into","cmp","commit","compare","connect","connect","context","count_proposals","count_transactions","database","default","default_migrations","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast_mut","downcast_ref","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","execute","execute_many","execute_many_with_retries","execute_one","execute_one_with_retries","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_vid_common","get_vid_common_range","header","header","host","include_dir","include_migrations","init","init","init","init","init","insert_block","insert_leaf","insert_vid","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","migrations","msg","name","new","no_migrations","partial_cmp","password","payload_size","port","postgres","prefix","query","query_one","query_one_static","query_opt","query_opt_static","query_static","reset_schema","revert","root_cause","schema","sql","sync_status","testing","tls","to_owned","to_owned","to_string","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unapplied","upsert","user","version","vid_share","vzip","vzip","vzip","vzip","vzip","TmpDb","as_any","as_any_mut","borrow","borrow_mut","config","deref","deref_mut","drop","drop","fmt","from","host","init","init","into","into_any","into_any_arc","into_any_rc","port","try_from","try_into","type_id","vzip","Callback","Fetcher","LocalCallback","Provider","Request","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","provider","request","run","run","spawn_fetch","to_owned","try_from","try_into","type_id","vzip","with_retry_delay","AnyProvider","NoFetching","Provider","QueryServiceProvider","TestProvider","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fail","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","new","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unblock","unfail","vzip","vzip","vzip","vzip","with_block_provider","with_leaf_provider","with_provider","with_vid_common_provider","LeafRequest","PayloadRequest","Request","Response","VidCommonRequest","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Counter","Gauge","Histogram","Label","MetricsError","NoSuchMetric","NoSuchSubgroup","Prometheus","PrometheusMetrics","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_point","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_counter","create_gauge","create_histogram","create_label","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","export","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get","get","get_counter","get_gauge","get_histogram","get_label","get_subgroup","header","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mean","sample_count","set","set","source","subgroup","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","vzip","vzip","label","namespace","path","source","BlockId","Custom","CustomSnafu","Error","InvalidSignatureKey","InvalidSignatureKeySnafu","LeafQueryData","NodeDataSource","Options","Query","QueryProposals","QueryProposalsSnafu","QuerySnafu","QueryVid","QueryVidSnafu","Request","RequestSnafu","SyncStatus","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","count_proposals","count_transactions","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","fully_synced","get_hash","get_proposals","group_id","hash","header","in_current_span","init","init","init","init","init","init","init","init","init","internal","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","is_fully_synced","message","missing_blocks","missing_leaves","missing_vid_common","missing_vid_shares","partial_cmp","payload_size","proposer","serialize","serialize","source","status","status","sync_status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vid_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","block","message","proposer","source","source","source","source","status","Error","Internal","MempoolQueryData","Options","Request","StatusDataSource","UpdateStatusData","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","cmp","compare","consensus_metrics","consensus_metrics","default","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","elapsed_time_since_last_decide","elapsed_time_since_last_decide","eq","equivalent","equivalent","equivalent","equivalent","extensions","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","group_id","hash","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","memory_footprint","mempool_info","mempool_info","metrics","partial_cmp","populate_metrics","serialize","serialize","source","status","success_rate","success_rate","to_owned","to_owned","to_string","transaction_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","reason","source","FIRST_VID_VIEW","consensus","has_vid","mocks","setup_test","sleep","DataSourceLifeCycle","MockDataSource","MockNetwork","NUM_NODES","Storage","TestableDataSource","as_any","as_any_mut","borrow","borrow_mut","connect","create","data_source","data_source_index","deref","deref_mut","drop","drop","from","handle","handle_event","init","init","into","into_any","into_any_arc","into_any_rc","num_nodes","proposer","reset","setup","shut_down","start","storage","submit_transaction","try_from","try_into","type_id","vzip","MockHeader","MockMembership","MockNetwork","MockNodeImpl","MockPayload","MockQuorumProposal","MockTransaction","MockTypes","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","block_header","block_number","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","get_hash","get_hash","hash","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","iter","justify_qc","len","mock_transaction","partial_cmp","partial_cmp","payload_commitment","proposer_id","serialize","serialize","timeout_certificate","to_owned","to_owned","transaction_with_proof","transactions","try_from","try_from","try_into","try_into","type_id","type_id","upgrade_certificate","view_number","vzip","vzip"],"q":[[0,"hotshot_query_service"],[282,"hotshot_query_service::Error"],[287,"hotshot_query_service::QueryError"],[288,"hotshot_query_service::availability"],[999,"hotshot_query_service::availability::Error"],[1007,"hotshot_query_service::data_source"],[1122,"hotshot_query_service::data_source::availability_tests"],[1124,"hotshot_query_service::data_source::fetching"],[1250,"hotshot_query_service::data_source::node_tests"],[1256,"hotshot_query_service::data_source::persistence_tests"],[1258,"hotshot_query_service::data_source::sql"],[1275,"hotshot_query_service::data_source::sql::testing"],[1276,"hotshot_query_service::data_source::status_tests"],[1277,"hotshot_query_service::data_source::storage"],[1294,"hotshot_query_service::data_source::storage::fs"],[1340,"hotshot_query_service::data_source::storage::no_storage"],[1388,"hotshot_query_service::data_source::storage::no_storage::testing"],[1457,"hotshot_query_service::data_source::storage::no_storage::testing::Storage"],[1458,"hotshot_query_service::data_source::storage::sql"],[1661,"hotshot_query_service::data_source::storage::sql::testing"],[1685,"hotshot_query_service::fetching"],[1720,"hotshot_query_service::fetching::provider"],[1838,"hotshot_query_service::fetching::request"],[1934,"hotshot_query_service::metrics"],[2109,"hotshot_query_service::metrics::MetricsError"],[2113,"hotshot_query_service::node"],[2398,"hotshot_query_service::node::Error"],[2406,"hotshot_query_service::status"],[2527,"hotshot_query_service::status::Error"],[2529,"hotshot_query_service::testing"],[2535,"hotshot_query_service::testing::consensus"],[2574,"hotshot_query_service::testing::mocks"],[2667,"dyn_clone::sealed"],[2668,"dyn_clone::sealed"],[2669,"core::error"],[2670,"clap_builder::builder::command"],[2671,"snafu::backtrace_shim"],[2672,"core::option"],[2673,"alloc::string"],[2674,"core::convert"],[2675,"tide_disco::status"],[2676,"core::clone"],[2677,"hotshot_types::traits::node_implementation"],[2678,"commit"],[2679,"commit"],[2680,"core::result"],[2681,"serde::de"],[2682,"hotshot_types::data"],[2683,"core::fmt"],[2684,"core::fmt"],[2685,"clap_builder"],[2686,"hotshot_types::traits::storage"],[2687,"core::hash"],[2688,"core::marker"],[2689,"core::hash"],[2690,"hotshot_types::simple_certificate"],[2691,"hotshot_types::simple_certificate"],[2692,"core::hash"],[2693,"core::fmt"],[2694,"alloc::sync"],[2695,"alloc::rc"],[2696,"hotshot::types::handle"],[2697,"hotshot_types::traits::node_implementation"],[2698,"serde::ser"],[2699,"core::cmp"],[2700,"core::cmp"],[2701,"snafu"],[2702,"tide_disco::api"],[2703,"tide_disco::request"],[2704,"core::future::future"],[2705,"core::pin"],[2706,"futures_core::stream"],[2707,"core::marker"],[2708,"hotshot_types::data"],[2709,"hotshot_types::simple_certificate"],[2710,"std::path"],[2711,"anyhow"],[2712,"atomic_store::atomic_store"],[2713,"hotshot_types::event"],[2714,"core::default"],[2715,"hotshot_types::traits::metrics"],[2716,"async_lock::rwlock"],[2717,"async_lock::rwlock"],[2718,"time::offset_date_time"],[2719,"std::backtrace"],[2720,"anyhow"],[2721,"tokio_postgres::to_statement"],[2722,"core::iter::traits::collect"],[2723,"tokio_postgres::config"],[2724,"refinery_core::runner"],[2725,"refinery_core::error"],[2726,"postgres_types"],[2727,"url"],[2728,"hotshot_types::traits::metrics"],[2729,"async_lock::rwlock"]],"d":["","","Contains the error value","","There was an error while trying to fetch the requested â€¦","","This is the consensus-internal analogous concept to a â€¦","","The requested resource exists but is not currently â€¦","SNAFU context selector for the <code>QueryError::Missing</code> variant","","The requested resource does not exist or is not known to â€¦","SNAFU context selector for the <code>QueryError::NotFound</code> variant","Contains the success value","","","","","A reference to a <code>T</code> which can be resolved into a whole <code>T</code>.","","SNAFU context selector for the <code>QueryError::Error</code> variant","","Item within a <code>Payload</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Queries for HotShot chain state.","","","","Block header.","Optional block payload.","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","Get a commitment to the underlying object.","","","Persistent storage and sources of data consumed by APIs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Fetching missing data from remote providers.","Fill this leaf with the block payload.","Fill this leaf with the block payload, without checking â€¦","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create a leaf from information stored about a view.","Create a new leaf from its components.","The block header contained in this leaf.","Optional block payload.","","Height of this leaf in the chain.","The QC linking this leaf to its parent in the chain.","Commitment to this leafâ€™s parent.","A commitment to the block payload contained in this leaf.","Identity of the network participant who proposed this leaf.","Time when this leaf was created.","","","","","","","","Embed migrations from the given directory into the current â€¦","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Per spec, justification","","","A nodeâ€™s view of a HotShot chain","","The hash of the parent <code>Leaf</code> So we can ask if it extends","","the proposer id of the leaf","Run an instance of the HotShot Query service with no â€¦","","","","","","Queries for node-specific state and uncommitted data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the underlying object if it is available without â€¦","","","","","","","","","","","CurView from leader when proposing leaf","","","","","","","","","","","","","","An interface for querying a HotShot blockchain.","A block hash is the hash of the block header.","","","","","","SNAFU context selector for the <code>Error::Custom</code> variant","","","An in-progress request to fetch some data.","","SNAFU context selector for the <code>Error::FetchBlock</code> variant","","SNAFU context selector for the <code>Error::FetchLeaf</code> variant","","SNAFU context selector for the <code>Error::FetchTransaction</code> â€¦","","","A proof that a certain transaction exists in the block.","","","SNAFU context selector for the â€¦","Enumerate the transactions in this block.","","","","","","","","","","","","A block payload whose contents (e.g. individual â€¦","","","SNAFU context selector for the <code>Error::Request</code> variant","","","","","An index which can be used to efficiently retrieve a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Get the index of the transaction with a given hash, if it â€¦","Get the index of the transaction with a given hash, if it â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>Fetch</code> to a <code>Result</code> with the provided error â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumerate the transactions in the block with their indices.","Enumerate the transactions in the block with their indices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Timeout for failing requests due to missing data.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the block containing a transaction with the given â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this block is empty of transactions.","Whether this block is empty of transactions.","","List the transaction indices in the block.","","","The number of transactions in the block.","","Transform the result of this fetch.","","","Collect information about a <code>Leaf</code>.","","","Get the index of the <code>nth</code> transaction.","Get the index of the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction, along with an inclusion proof.","Get the <code>nth</code> transaction, along with an inclusion proof.","","","","","","","","","Get an inclusion proof for a transaction with a given â€¦","Get an inclusion proof for a transaction with a given â€¦","","","","","","Wait for the data to become available, if it is not â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a transaction by its block-specific index.","Get a transaction by its block-specific index.","","","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get a transaction by its block-specific index, along with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the requested data if it is available immediately.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>Fetch</code> to a <code>Result</code> with the provided error â€¦","Wait for the requested data to become available, but only â€¦","","","","","","","","","","","Wrapper to add extensibility to an existing data source.","","A data source for the APIs provided in this crate, backed â€¦","A minimal data source for the status API provided in this â€¦","","An extension trait for types which implement the update â€¦","A data source with an atomic transaction-based â€¦","","","","","","","","","","","Generic tests we can instantiate for all the availability â€¦","","","","","","","","","","","","Atomically commit to all outstanding modifications to the â€¦","","","","","","","","Create a new FileSystemDataSource with storage at <code>path</code>.","","","Create a new FileSystemDataSource using a persistent â€¦","","","","","","","","Asynchronous retrieval of missing data.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Access the underlying data source.","Mutably access the underlying data source.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Generic tests we can instantiate for all the node data â€¦","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent â€¦","","Generic tests we can instantiate for any data source with â€¦","","","","","","Erase all oustanding modifications to the data.","","Advance the version of the persistent store without â€¦","","Generic tests we can instantiate for all the status data â€¦","Persistent storage for data sources.","","","","","","","","","","Update query state based on a new consensus event.","","","","","","A provider which can be used as a fetcher by the â€¦","Builder for <code>FetchingDataSource</code> with configuration.","The most basic kind of data source.","","","","","","","","","","","","","","","","","","","","","","","Build a <code>FetchingDataSource</code> with these options.","Build a <code>FetchingDataSource</code> with the given <code>storage</code> and â€¦","","","","Connect to a remote database.","","","Create a new FileSystemDataSource with storage at <code>path</code>.","Create a new FileSystemDataSource using a persistent â€¦","","","","","","","","","","","","Run without proactive fetching.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Construct a new builder with the given storage and fetcher â€¦","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent â€¦","","","","Advance the version of the persistent store without â€¦","Obtain direct, read-only access to the underlying local â€¦","Obtain direct, mutable access the underlying local storage.","","","Access the transaction which is accumulating all â€¦","","","","","","","","","","","","","","","","","","Set the interval (denominated in minor scans) between â€¦","Set the time interval between minor proactive fetching â€¦","Set the number of items to process at a time when scanning â€¦","Set the number of items to process at a time when loading â€¦","Set the maximum delay between retries of fetches.","","","","","","","","","","","The <code>Error</code> type, a wrapper around a dynamic error type.","Represents a schema migration to be run on the database, â€¦","","A data source for the APIs provided in this crate, backed â€¦","","","","Connect to a remote database.","","","Embed migrations from the given directory into the current â€¦","","","","Access the transaction which is accumulating all â€¦","","","Persistent storage for a HotShot blockchain.","","","","","","","","","","","","","","","","","Storage for the APIs provided in this crate, backed by a â€¦","","","","","","","","","Create a new FileSystemStorage with storage at <code>path</code>.","Create a new FileSystemStorage using a persistent storage â€¦","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","Open an existing FileSystemStorage from storage at <code>path</code>.","Open an existing FileSystemStorage using a persistent â€¦","","","Advance the version of the persistent store without â€¦","","","","","","","Mock storage implementation which doesnâ€™t actually store â€¦","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Either Postgres or no storage.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the block containing a transaction with the given â€¦","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Postgres client config.","The <code>Error</code> type, a wrapper around a dynamic error type.","Represents a schema migration to be run on the database, â€¦","","Storage for the APIs provided in this crate, backed by a â€¦","An atomic SQL transaction.","","","","","Get the timestamp from when the Migration was applied. <code>None</code>â€¦","","","","","","","","","","","","","Get the backtrace for this Error.","","","","","","","","","","","","Connect to the database, setting options on the underlying â€¦","An iterator of the chain of source errors contained by â€¦","Get the Migration checksum. Checksum is formed from the â€¦","","","","","","","","","","","Connect to the database with this config.","Connect to a remote database.","Wrap the error value with additional context.","","","Set the name of the database to connect to.","","The migrations requied to build the default schema for â€¦","","","","","","","","","","","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","","","","","","","","","","","","Execute a statement against the underlying database.","Execute a statement that is expected to modify at least â€¦","Execute a statement that is expected to modify at least â€¦","Execute a statement that is expected to modify exactly one â€¦","Execute a statement that is expected to modify exactly one â€¦","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","Set the hostname of the database server.","Embed the contents of a directory in your crate.","Embed migrations from the given directory into the current â€¦","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","Add custom migrations to run when connecting to the â€¦","Create a new error object from a printable error message.","Get the Migration Name","Create a new error object from any error type.","Skip all migrations when connecting to the database.","","Set a password for connecting to the database.","","Set the port on which to connect to the database.","","Get the Prefix","","Query the underlying SQL database, returning exactly one â€¦","Query the underlying SQL database with no parameters, â€¦","Query the underlying SQL database, returning zero or one â€¦","Query the underlying SQL database with no parameters, â€¦","Query the underlying SQL database with no parameters.","Reset the schema on connection.","","The lowest level cause of this error â€” this errorâ€™s â€¦","Set the name of the schema to use for queries.","","","","Use TLS for an encrypted connection to the database.","","","","","Access the transaction which is accumulating all â€¦","","","","","","","","","","","","","","","","Create an unapplied migration, name and version are parsed â€¦","","Set the DB user to connect as.","Get the Migration version","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","A callback to process the result of a request.","Management of concurrent requests to fetch resources.","A callback to process the result of a request.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Asynchronous fetching from external data availability â€¦","Requests for fetching resources.","","","Fetch a resource, if it is not already being fetched.","","","","","","","Adaptor combining multiple data availability providers.","Trivial <code>Provider</code> where fetching always fails.","A provider which is able to satisfy requests for data of â€¦","Data availability provider backed by another instance of â€¦","Adaptor to add test-only functionality to an existing â€¦","","","","","","","","","","","","","","","","","Delay fetch requests until <code>unblock</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cause subsequent requests to fail.","Fetch a resource.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow blocked fetch requests to proceed.","Stop requests from failing as a result of a previous call â€¦","","","","","Add a sub-provider which fetches blocks.","Add a sub-provider which fetches leaves.","Add a sub-provider which fetches both blocks and leaves.","Add a sub-provider which fetches VID common data.","A request for a leaf with a given height.","A request for a payload with a given commitment.","A request for a resource.","The type of resource that will be returned as a successful â€¦","A request for VID common data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","A Counter metric.","A Gauge metric.","A Histogram metric.","A Label metric.","","","","","A Prometheus-based implementation of a Metrics registry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a counter in this sub-group by name.","Get a gauge in this sub-group by name.","Get a histogram in this sub-group by name.","Get a label in this sub-group by name.","Get a (possibly nested) subgroup of this group by its path.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::Custom</code> variant","","","SNAFU context selector for the <code>Error::InvalidSignatureKey</code> â€¦","","","","","","SNAFU context selector for the <code>Error::QueryProposals</code> â€¦","SNAFU context selector for the <code>Error::Query</code> variant","","SNAFU context selector for the <code>Error::QueryVid</code> variant","","SNAFU context selector for the <code>Error::Request</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether VID is expected for the given block height.","","","","","","","","Backing storage for the data source.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","Setup runs after setting up the network but before â€¦","","","","","","","","","","","","","","","","","","","","","","","","","The block header to append","Block number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Per spec, justification","","","","","VID commitment to the payload.","the propser id","","","Possible timeout certificate.  Only present if the â€¦","","","","List of transactions.","","","","","","","Possible upgrade certificate, which the leader may â€¦","CurView from leader when proposing leaf","",""],"i":[7,7,157,0,10,0,0,0,10,0,7,10,0,157,0,0,0,0,0,0,0,7,0,0,0,17,17,7,7,11,11,12,12,13,13,10,10,17,7,11,12,13,10,25,17,7,11,12,13,10,25,7,10,25,25,0,25,7,10,17,17,17,7,11,12,13,10,25,17,7,11,12,13,10,25,11,12,13,7,7,10,17,7,11,12,13,10,17,7,11,12,13,10,17,21,17,17,0,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,7,10,17,7,10,17,7,11,12,13,10,25,17,17,17,17,17,11,12,13,0,17,17,17,17,7,7,11,12,13,10,10,17,7,7,7,7,7,11,12,13,10,25,25,25,17,17,17,17,17,17,17,17,17,17,17,25,17,17,7,10,7,10,0,17,7,11,12,13,10,25,0,0,0,0,0,7,17,7,11,12,13,10,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,11,12,13,17,13,0,0,25,17,25,17,0,17,7,10,7,10,0,7,10,25,0,17,7,11,12,13,10,17,7,10,17,7,11,12,13,10,25,17,7,11,12,13,10,25,21,17,17,7,11,12,13,10,25,25,25,17,17,7,11,12,13,10,25,223,224,225,226,223,227,0,0,0,0,58,0,37,0,0,123,0,37,0,37,0,37,0,88,89,81,0,37,0,81,0,0,0,58,88,89,0,89,0,58,96,0,96,37,0,0,0,0,0,81,0,0,0,0,58,88,88,89,89,68,68,67,67,90,90,70,70,71,71,72,72,91,91,92,92,93,93,73,73,74,74,75,75,76,76,77,77,37,37,102,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,67,37,102,102,67,37,68,70,71,72,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,73,74,75,76,77,81,81,67,37,88,89,68,67,90,70,71,72,91,92,93,73,74,75,76,77,37,88,89,68,67,90,70,71,72,91,92,93,73,74,75,76,77,37,88,89,71,88,89,96,70,102,0,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,67,37,68,90,70,71,72,91,92,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,81,81,90,88,89,68,90,70,71,72,91,92,88,88,88,88,89,89,89,89,68,68,68,68,90,90,90,90,70,70,70,70,71,71,71,71,72,72,72,72,91,91,91,91,92,92,92,92,102,73,74,75,76,77,102,88,88,89,89,68,67,67,90,70,71,72,91,92,93,73,74,75,76,77,37,37,96,88,88,88,89,89,89,68,67,90,70,70,71,72,91,91,92,102,93,73,74,75,76,77,37,37,37,102,102,68,90,58,58,58,88,89,58,58,58,58,58,58,102,88,89,68,90,70,72,91,88,89,68,67,90,91,37,68,90,70,71,72,91,76,67,37,76,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,123,123,123,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,93,73,74,75,76,77,96,81,81,90,81,68,67,81,90,96,77,90,68,90,71,81,81,81,81,81,81,90,91,88,89,90,68,90,71,81,81,68,90,91,68,67,96,73,74,75,68,90,70,71,72,91,92,37,90,70,91,67,37,37,77,58,58,58,58,58,58,58,58,88,89,68,67,90,70,71,72,91,92,93,73,74,75,76,77,37,88,89,67,37,81,81,90,72,81,81,90,81,81,81,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,102,102,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,96,228,228,229,230,231,232,233,229,0,62,0,0,0,0,0,0,0,131,131,132,132,131,132,131,132,131,131,0,131,131,132,131,132,131,132,131,132,131,132,62,131,134,131,132,131,131,134,134,131,132,134,132,131,132,131,132,131,132,0,131,132,131,132,131,131,131,131,131,131,131,131,131,131,134,131,132,131,132,131,131,131,131,131,131,132,131,132,131,132,131,132,131,132,131,0,134,134,131,0,131,132,134,131,132,62,131,134,0,0,0,131,131,132,131,132,131,132,131,132,61,131,131,132,0,0,0,0,0,0,0,144,144,145,144,151,152,145,144,151,152,144,144,145,144,151,152,145,144,151,152,145,144,144,144,144,144,144,144,144,144,145,144,151,151,152,152,145,144,151,152,152,145,145,144,151,152,144,145,144,151,151,152,152,144,144,144,144,144,144,144,144,144,144,145,144,151,152,144,144,144,145,144,151,152,145,144,151,152,145,144,151,152,145,144,151,152,144,145,144,144,144,144,144,144,144,144,144,144,144,145,144,151,152,145,144,151,152,145,144,151,152,144,145,144,151,152,145,145,145,145,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,158,158,158,158,158,0,0,158,0,158,0,0,0,0,0,0,0,146,146,146,146,146,146,146,146,146,146,0,0,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,0,160,160,160,160,160,160,0,234,161,234,161,0,234,161,234,161,161,161,234,161,234,161,161,161,161,161,161,234,161,234,161,234,161,234,161,161,161,161,161,161,161,161,161,161,161,161,234,161,161,161,161,234,161,234,161,234,161,234,161,161,161,161,161,161,161,161,234,161,234,161,234,161,161,234,161,235,0,0,0,0,0,0,163,163,147,147,163,149,163,156,147,155,149,163,156,147,155,149,149,149,155,149,163,156,147,155,149,163,156,147,155,147,149,163,167,156,155,163,147,163,147,163,155,163,147,155,149,155,155,147,147,0,149,149,163,156,147,155,149,149,163,156,147,155,149,149,149,149,149,163,156,147,155,155,163,163,163,163,163,156,156,156,156,156,149,149,163,163,147,155,149,149,149,163,156,147,147,155,147,155,155,155,155,155,155,155,155,155,155,155,149,163,147,0,0,149,163,156,147,155,155,155,155,149,163,156,147,155,149,163,156,147,155,149,163,156,147,155,149,163,156,147,155,149,147,149,163,149,147,163,147,155,147,0,163,167,167,167,167,167,167,147,155,149,147,163,155,0,147,163,147,149,163,155,149,163,156,147,155,149,163,156,147,155,149,163,156,147,155,163,156,147,163,155,149,163,156,147,155,0,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,0,0,0,0,0,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,0,0,181,182,180,180,180,180,180,180,180,0,0,0,0,0,186,186,187,187,185,185,188,188,186,187,185,188,186,187,185,188,185,186,187,185,188,186,187,185,188,186,187,185,188,186,187,185,188,186,188,186,187,185,188,186,187,185,188,186,187,185,188,185,184,186,186,186,187,187,187,185,188,186,187,185,188,186,187,185,188,186,187,185,188,186,187,185,188,186,187,185,188,186,187,185,188,186,187,185,188,187,185,186,187,185,188,186,187,185,188,186,187,185,188,186,187,185,188,185,185,186,187,185,188,186,186,186,186,0,0,0,183,0,191,191,190,190,189,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,191,191,191,190,190,190,190,189,189,189,189,191,190,189,191,190,189,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,191,190,189,0,0,0,0,0,196,196,196,0,142,142,193,193,197,197,194,194,198,198,193,194,196,142,193,197,194,198,196,142,193,197,194,198,196,196,196,142,193,197,194,198,196,142,193,197,194,198,196,142,193,197,194,198,142,193,197,194,198,142,142,142,142,142,196,142,193,197,194,198,196,142,193,197,194,198,196,196,142,193,197,194,198,142,196,196,142,193,197,194,198,196,196,142,193,197,194,198,193,197,198,142,142,142,142,142,196,196,196,142,193,197,194,198,196,142,193,197,194,198,196,142,193,197,194,198,196,142,193,197,194,198,196,142,193,197,194,198,194,194,197,198,196,142,194,142,193,197,194,198,196,196,142,193,197,194,198,196,142,193,197,194,198,196,142,193,197,194,198,197,196,142,193,197,194,198,236,236,237,238,0,36,0,0,36,0,0,0,0,36,36,0,0,36,0,36,0,0,207,207,208,208,209,209,210,210,211,211,205,205,206,206,36,36,212,207,212,208,209,210,211,205,206,36,207,212,208,209,210,211,205,206,36,36,212,212,36,211,59,207,212,208,209,210,211,205,206,36,207,212,208,209,210,211,205,206,36,205,206,36,207,208,209,210,211,205,206,36,207,208,209,210,211,205,206,36,207,207,59,59,212,0,207,212,208,209,210,211,205,206,36,207,212,208,209,210,211,205,206,36,36,207,36,207,212,208,209,210,211,205,206,36,207,207,207,207,207,212,205,206,207,208,209,210,211,205,206,36,36,207,212,208,209,210,211,205,206,36,36,36,36,212,212,207,207,59,212,207,36,36,207,212,208,209,210,211,205,206,36,36,207,212,208,209,210,211,205,206,36,207,212,208,209,210,211,205,206,36,207,212,208,209,210,211,205,206,36,207,212,208,209,210,211,205,206,36,208,209,210,211,205,206,207,206,207,207,207,207,207,59,210,207,36,36,36,206,59,207,208,209,210,211,205,206,36,36,207,212,208,209,210,211,205,206,36,207,212,208,209,210,211,205,206,36,207,212,208,209,210,211,205,206,36,212,212,59,207,212,208,209,210,211,205,206,36,239,240,241,242,243,241,239,240,0,38,0,0,38,0,0,213,213,38,38,214,213,214,38,213,214,38,38,214,214,38,60,213,214,38,213,214,38,38,213,38,213,38,213,213,60,60,213,214,0,213,214,38,213,214,38,38,213,38,213,214,38,60,60,213,213,213,213,213,214,213,38,38,213,214,38,38,38,214,214,213,214,213,38,38,213,214,38,213,214,38,213,214,38,213,214,38,213,214,38,213,60,60,60,213,215,213,38,38,38,60,60,213,38,38,213,213,214,38,213,214,38,213,214,38,214,214,213,214,38,244,245,0,0,0,0,0,0,0,0,0,0,217,0,162,162,162,162,217,217,162,162,162,162,162,162,162,162,217,162,162,162,162,162,162,162,162,217,217,162,162,162,162,162,162,162,162,0,0,0,0,0,0,0,0,138,138,218,218,138,218,138,218,246,247,138,218,138,218,138,218,138,218,138,218,138,218,138,218,138,218,138,218,138,218,138,218,138,218,138,138,138,138,218,218,218,218,138,218,138,218,138,218,138,218,138,218,138,218,138,218,138,218,138,218,221,246,221,0,138,218,247,246,138,218,246,138,218,221,221,138,218,138,218,138,218,246,246,138,218],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],0,0,[7,[[9,[8]]]],[10,[[9,[8]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,10],[12,10],[[[13,[-1]]],10,[[15,[14]]]],[[16,14],7],[7,[[9,[5]]]],[10,[[9,[5]]]],[[[17,[-1]]],[[17,[-1]]],[18,19]],[7,7],[11,11],[12,12],[[[13,[-1]]],[[13,[-1]]],18],[10,10],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[17,[-1]]],[[20,[[17,[-1]]]]],19],[21,[[20,[-1]]],22],[-1,[[20,[-2]]],[],[]],[[[17,[-1]],23,24],[],19],0,[[],25],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[7,27],[10,27],[-1,[[28,[[17,[-2]]]]],29,19],[-1,[[28,[7]]],29],[-1,[[28,[10]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[[17,[-1]],[17,[-1]]],30,19],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[11,[[28,[-1,10]]],[]],[12,[[28,[-1,10]]],[]],[[[13,[-1]]],[[28,[-2,10]]],[[15,[14]]],[]],0,[[[17,[-1]],26],[[28,[2,31]]],19],[[[17,[-1]]],2,19],[[[17,[-1]],32],[[28,[2,33]]],19],[[[17,[-1]],32],[[28,[2,33]]],[34,19]],[[7,32],35],[[7,32],35],[[11,32],35],[[12,32],35],[[[13,[-1]],32],35,34],[[10,32],35],[[10,32],35],[-1,-1,[]],[-1,-1,[]],[36,7],[37,7],[38,7],[[[2,[14,16]]],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[39,[[28,[25,40]]]],[39,[[28,[25,40]]]],[[[41,[-1]]],[[17,[-1]]],19],[[],[[17,[-1]]],19],[[[17,[-1]]],[],19],[[[17,[-1]]],9,19],[[-1,-2],24,[42,43],44],[[[17,[-1]]],24,19],[[[17,[-1]]],[[47,[-1,[45,[-1]],46]]],19],[[[17,[-1]]],[[20,[[17,[-1]]]]],19],[[[17,[-1]]],[],19],[[[17,[-1]]],[],19],[[[17,[-1]]],[],19],[[],[[9,[48]]]],[[[17,[-1]],-2],2,19,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[-1,[],[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,[-1,7,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[11,-1],10,[]],[[12,-1],10,[]],[[[13,[-1]],-2],10,[[15,[14]]],[]],0,0,0,0,0,0,0,0,[[25,-2,[57,[-1,-3]]],[[28,[2,7]]],19,[[58,[-1]],[59,[-1]],60,[61,[-1]],62,52,53],[[63,[-1]]]],[[[17,[-1]],-2],28,[19,64],65],[[7,-1],28,65],[[10,-1],28,65],[7,[[9,[5]]]],[10,[[9,[5]]]],0,[7,16],[10,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[21,[[28,[-1,21]]],22],[-1,[[28,[-2,-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[25,39],[[28,[2,40]]]],[[25,39],[[28,[2,40]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],[[[67,[-1]]],[[9,[8]]],19],[37,[[9,[8]]]],[[[68,[-1]]],[[69,[-1]]],19],[[[70,[-1]]],[[69,[-1]]],19],[[[71,[-1]]],[[69,[-1]]],19],[[[72,[-1]]],[[69,[-1]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[73,[-1]]],37,[[15,[14]]]],[[[74,[-1]]],37,[[15,[14]]]],[[[75,[-1]]],37,[[15,[14]]]],[[[76,[-1,-2]]],37,[[15,[24]]],[[15,[24]]]],[[[77,[-1,-2]]],37,[[15,[14]]],[[15,[16]]]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[-1]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[-1]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[67,[-1]]],[[9,[5]]],19],[37,[[9,[5]]]],[[[88,[-1]]],[[88,[-1]]],19],[[[89,[-1]]],[[89,[-1]]],19],[[[68,[-1]]],[[68,[-1]]],[18,19]],[[[67,[-1]]],[[67,[-1]]],[18,19]],[[[90,[-1]]],[[90,[-1]]],[18,19]],[[[70,[-1]]],[[70,[-1]]],[18,19]],[[[71,[-1]]],[[71,[-1]]],[18,19]],[[[72,[-1]]],[[72,[-1]]],[18,19]],[[[91,[-1]]],[[91,[-1]]],[18,19]],[[[92,[-1]]],[[92,[-1]]],[18,19]],[93,93],[[[73,[-1]]],[[73,[-1]]],18],[[[74,[-1]]],[[74,[-1]]],18],[[[75,[-1]]],[[75,[-1]]],18],[[[76,[-1,-2]]],[[76,[-1,-2]]],18,18],[[[77,[-1,-2]]],[[77,[-1,-2]]],18,18],[37,37],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[88,[-1]],[88,[-1]]],94,19],[[[89,[-1]],[89,[-1]]],94,19],[[[71,[-1]]],95,19],[[-1,-2],94,[],[]],[[-1,-2],94,[],[]],[[[96,[-1]],-3],[[28,[-1,-2]]],[],[5,97],[[100,[-2],[[98,[99]]]]]],[[[70,[-1]]],[[101,[-1]]],19],[[],102],[102,[[28,[[103,[-1,37]],104]]],[52,53,105]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[67,[-1]]],27,19],[37,27],[-1,[[28,[[68,[-2]]]]],29,19],[-1,[[28,[[90,[-2]]]]],29,19],[-1,[[28,[[70,[-2]]]]],29,19],[-1,[[28,[[71,[-2]]]]],29,19],[-1,[[28,[[72,[-2]]]]],29,19],[-1,[[28,[[91,[-2]]]]],29,19],[-1,[[28,[[92,[-2]]]]],29,19],[-1,[[28,[37]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],[[54,[87]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],[[54,[87]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[90,[-1]]],[[0,[[87,[],[[86,[[2,[[106,[-1]],[107,[-1]]]]]]]]]]],19],[[[88,[-1]],[88,[-1]]],30,19],[[[89,[-1]],[89,[-1]]],30,19],[[[68,[-1]],[68,[-1]]],30,[82,19]],[[[90,[-1]],[90,[-1]]],30,[82,19]],[[[70,[-1]],[70,[-1]]],30,[82,19]],[[[71,[-1]],[71,[-1]]],30,[82,19]],[[[72,[-1]],[72,[-1]]],30,[82,19]],[[[91,[-1]],[91,[-1]]],30,[82,19]],[[[92,[-1]],[92,[-1]]],30,[82,19]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[[[73,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[74,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[75,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[76,[-1,-2]]],[[28,[-3,37]]],[[15,[24]]],[[15,[24]]],[]],[[[77,[-1,-2]]],[[28,[-3,37]]],[[15,[14]]],[[15,[16]]],[]],0,[[[88,[-1]],32],35,19],[[[88,[-1]],32],35,19],[[[89,[-1]],32],35,19],[[[89,[-1]],32],35,19],[[[68,[-1]],32],35,[34,19]],[[[67,[-1]],32],35,19],[[[67,[-1]],32],35,[34,19]],[[[90,[-1]],32],35,[34,19]],[[[70,[-1]],32],35,[34,19]],[[[71,[-1]],32],35,[34,19]],[[[72,[-1]],32],35,[34,19]],[[[91,[-1]],32],35,[34,19]],[[[92,[-1]],32],35,[34,19]],[[93,32],35],[[[73,[-1]],32],35,34],[[[74,[-1]],32],35,34],[[[75,[-1]],32],35,34],[[[76,[-1,-2]],32],35,34,34],[[[77,[-1,-2]],32],35,34,34],[[37,32],35],[[37,32],35],[-1,-1,[]],[-1,-1,[]],[[[108,[-1]]],[[88,[-1]]],19],[26,[[88,[-1]]],19],[-1,-1,[]],[[[69,[-1]]],[[89,[-1]]],19],[26,[[89,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[90,[-1]]],[[70,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[90,[-1]]],[[91,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[14,16]]],37],[109,37],[39,[[28,[102,40]]]],[39,[[28,[102,40]]]],[[],[[68,[-1]]],19],[[],[[90,[-1]]],19],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[15,[[89,[-2]]]],52,53]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[118,[26]],52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],[119,[-2]]],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[15,[[88,[-2]]]],52,53]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[118,[26]],52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[15,[[89,[-2]]]],52,53]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[118,[26]],52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[15,[[89,[-2]]]],52,53]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[118,[26]],52]],[[],[[9,[48]]]],[[[88,[-1]],-2],2,19,49],[[[89,[-1]],-2],2,19,49],[[[68,[-1]]],[[108,[-1]]],19],[[[90,[-1]]],[[69,[-1]]],19],[[[70,[-1]]],120,19],[[[72,[-1]]],[[119,[-1]]],19],[[[91,[-1]]],[[69,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[68,[-1]]],[[121,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[90,[-1]]],[[121,[-1]]],19],[[[91,[-1]]],[[121,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[68,[-1]]],24,19],[[[90,[-1]]],24,19],[[[70,[-1]]],24,19],[[[71,[-1]]],24,19],[[[72,[-1]]],24,19],[[[91,[-1]]],24,19],0,[-1,[],[]],[-1,[],[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[123,[],[[122,[-1]]]],[90,[-2]]],[[115,[[54,[114]]]]],[5,34,52,53],19],[[[123,[],[[122,[-1]]]],[68,[-2]]],[[115,[[54,[114]]]]],[5,34,52,53],19],[[[123,[],[[122,[-1]]]],[71,[-2]],[9,[124]]],[[115,[[54,[114]]]]],[5,34,52,53],19],[-1,37,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[93,-1],37,[]],[[[73,[-1]],-2],37,[[15,[14]]],[]],[[[74,[-1]],-2],37,[[15,[14]]],[]],[[[75,[-1]],-2],37,[[15,[14]]],[]],[[[76,[-1,-2]],-3],37,[[15,[24]]],[[15,[24]]],[]],[[[77,[-1,-2]],-3],37,[[15,[14]]],[[15,[16]]],[]],[[[96,[-1]]],-2,52,[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],30,[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],30,[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[90,[-1]]],30,19],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],-2,[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[68,[-1]]],[[17,[-1]]],19],0,[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],26,[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[90,[-1]]],26,19],[[[96,[-1]],-3],[[96,[-2]]],[],[],[52,[126,[-1],[[125,[-2]]]]]],0,[[[90,[-1]]],[[127,[-1]]],19],[[[17,[-1]],[128,[-1]]],[[28,[[68,[-1]],[67,[-1]]]]],19],[[[121,[-1]],[101,[-1]]],[[90,[-1]]],19],[[[121,[-1]],95],[[71,[-1]]],19],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[-1]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[-1]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[[2,[-5,-3]]]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[[2,[-5,-3]]]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[90,[-1]]],24,19],[[[91,[-1]]],24,19],[[[88,[-1]],[88,[-1]]],[[9,[94]]],19],[[[89,[-1]],[89,[-1]]],[[9,[94]]],19],[[[90,[-1]]],[[101,[-1]]],19],[[[68,[-1]]],120,19],[[[90,[-1]]],120,19],[[[71,[-1]]],120,19],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,-1],[[9,[-3]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,-1],[[9,[-3]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[68,[-1]]],[[129,[-1]]],19],[[[90,[-1]]],[[129,[-1]]],19],[[[91,[-1]]],[[129,[-1]]],19],[[[68,[-1]]],[[128,[-1]]],19],0,[[[96,[-1]]],-1,52],0,0,0,[[[68,[-1]],-2],28,19,65],[[[90,[-1]],-2],28,19,65],[[[70,[-1]],-2],28,19,65],[[[71,[-1]],-2],28,19,65],[[[72,[-1]],-2],28,19,65],[[[91,[-1]],-2],28,19,65],[[[92,[-1]],-2],28,19,65],[[37,-1],28,65],[[[90,[-1]]],24,19],[[[70,[-1]]],24,19],[[[91,[-1]]],24,19],[[[67,[-1]]],[[9,[5]]],19],[37,[[9,[5]]]],[37,16],0,[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,-1],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,-1],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[90,[-1]],[106,[-1]]],[[9,[[72,[-1]]]]],19],[[[72,[-1]]],[[107,[-1]]],19],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[90,[-1]],[20,[[107,[-1]]]]],[[9,[[106,[-1]]]]],19],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[[2,[-5,-3]]]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[[2,[-5,-3]]]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,-1],[[9,[[2,[-5,-3]]]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[[[96,[-1]]],[[28,[-1,[96,[-1]]]]],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[102,39],[[28,[2,40]]]],[[102,39],[[28,[2,40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[96,[-1]],-4],[[28,[-1,-2]]],[],[5,97],[[100,[-2],[[98,[99]]]]],[[126,[],[[125,[-3]]]]]],[[[96,[-1]],130],[[9,[-1]]],52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[131,[-1,-2]]],-2,[],[]],[[[131,[-1,-2]]],-2,[],[]],0,[[[131,[-1,-2]]],[[115,[[54,[114]]]]],[60,52,53],[52,53]],[[[131,[-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[132,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[131,[-1,-2]]],[[131,[-1,-2]]],18,18],[132,132],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[62,[],[[122,[-1]]]]],[[115,[[54,[114]]]]],[5,34,52,53]],[[[131,[-1,-2]]],[[115,[[54,[114]]]]],[62,52],52],[-1,[[115,[[54,[114]]]]],[]],[-1,[[115,[[54,[114]]]]],[]],[-1,[[115,[[54,[114]]]]],[]],[[[131,[-2,-3]],[129,[-1]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[[131,[-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[26,[[115,[[54,[114]]]]]],[[133,-2],[[135,[[134,[-1,-2]]]]],19,[[136,[-1]]]],[26,[[115,[[54,[114]]]]]],[26,[[115,[[54,[114]]]]]],[[137,-2],[[135,[[134,[-1,-2]]]]],19,[[136,[-1]]]],[[],132],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],0,[[[131,[-1,-2]],32],35,34,34],[[132,32],35],[-1,-1,[]],[-1,-1,[]],[[[131,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[89,[-1]]]],52,53]],[[[131,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[118,[26]],52]],[[[131,[-2,-3]],[119,[-1]]],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53]],[[[131,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[88,[-1]]]],52,53]],[[[131,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[118,[26]],52]],[[[131,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[89,[-1]]]],52,53]],[[[131,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[118,[26]],52]],[[[131,[-2,-3]],[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[[131,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[89,[-1]]]],52,53]],[[[131,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[118,[26]],52]],[[[134,[138,-1]],[139,[138]]],[[115,[[54,[114]]]]],[[136,[138]],140]],[[[131,[-1,-2]],[139,[138]]],[[115,[[54,[114]]]]],141,[140,52,53]],[[132,[139,[138]]],[[115,[[54,[114]]]]]],[[],26],[[],26],[[[131,[-1,-2]]],-1,[],[]],[[[131,[-1,-2]]],-1,[],[]],[[[131,[-2,-3]],[90,[-1]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[[[131,[-2,-3]],[68,[-1]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[[[131,[-2,-3]],[71,[-1]],[9,[124]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[131,[-1,-2]]],142,[60,52,53],[52,53]],[132,142],[[-1,-2],[[131,[-1,-2]]],[],[]],0,[[133,-2],[[135,[[134,[-1,-2]]]]],19,[[136,[-1]]]],[[137,-2],[[135,[[134,[-1,-2]]]]],19,[[136,[-1]]]],[[[131,[-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],0,[-1,[[54,[143]]],[]],[-1,[[54,[143]]],[]],[-1,[[115,[[54,[114]]]]],[]],[-1,[[115,[[54,[114]]]]],[]],[-1,[[115,[[54,[114]]]]],[]],[[[62,[],[[122,[-1]]]]],[[115,[[54,[114]]]]],[5,34,52,53]],[[[131,[-1,-2]]],[[115,[[54,[114]]]]],[62,52],52],[[[134,[-1,-2]]],[[135,[2]]],19,[[136,[-1]]]],0,0,0,[[[131,[-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[[61,[139,[-1]]],[[115,[[54,[114]]]]],19],[[[131,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53],[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[144,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[[144,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[145,[-1,-2,-3]]],[[135,[[144,[-1,-2,-3]]]]],19,[[59,[-1]],[146,[-1]]],[[136,[-1]]]],[[-2,-3],[[145,[-1,-2,-3]]],19,[[59,[-1]],[146,[-1]]],[[136,[-1]]]],[[[144,[-1,-2,-3]]],[[144,[-1,-2,-3]]],19,[],[]],[[-1,-2],2,[],[]],[[[144,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[62,52,53],[52,53]],[[147,-2],[[28,[[148,[-1,-2]],149]]],19,[[136,[-1]]]],[[[144,[-1,-2,-3]],[129,[-1]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[[144,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[133,-2],[[135,[[144,[-1,[150,[-1]],-2]]]]],19,[[136,[-1]]]],[[137,-2],[[135,[[144,[-1,[150,[-1]],-2]]]]],19,[[136,[-1]]]],[26,-1,[]],[26,-1,[]],[[[151,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[[[152,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[152,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[[[145,[-1,-2,-3]]],[[145,[-1,-2,-3]]],[],[],[]],[26,2],[26,2],[26,2],[26,2],[[[144,[-1,-2,-3]],32],35,19,34,34],[-1,-1,[]],[-1,-1,[]],[[[153,[[0,[-1,-2]]]]],[[151,[-1,-2]]],19,[]],[-1,-1,[]],[-1,-1,[]],[[[154,[[0,[-1,-2]]]]],[[152,[-1,-2]]],19,[]],[[[144,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[146,[-1]]],[[136,[-1]]],[[15,[[89,[-1]]]],52,53]],[[[144,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[146,[-1]]],[[136,[-1]]],[[118,[26]],52]],[[[144,[-1,-2,-3]],[119,[-1]]],[[115,[[54,[114]]]]],19,[[146,[-1]]],[[136,[-1]]]],[[[144,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[146,[-1]]],[[136,[-1]]],[[15,[[88,[-1]]]],52,53]],[[[144,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[146,[-1]]],[[136,[-1]]],[[118,[26]],52]],[[[144,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[146,[-1]]],[[136,[-1]]],[[15,[[89,[-1]]]],52,53]],[[[144,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[146,[-1]]],[[136,[-1]]],[[118,[26]],52]],[[[144,[-1,-2,-3]],[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[[144,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[146,[-1]]],[[136,[-1]]],[[15,[[89,[-1]]]],52,53]],[[[144,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[146,[-1]]],[[136,[-1]]],[[118,[26]],52]],[[],26],[[],26],[[],26],[[],26],[[[144,[-1,-2,-3]],[90,[-1]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[[[144,[-1,-2,-3]],[68,[-1]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[[[144,[-1,-2,-3]],[71,[-1]],[9,[124]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[144,[-1,-2,-3]]],142,19,[[59,[-1]],52,53],[52,53]],[[-1,-2],[[145,[-3,-1,-2]]],[],[],[]],[[133,-2],[[135,[[144,[-1,[150,[-1]],-2]]]]],19,[[136,[-1]]]],[[137,-2],[[135,[[144,[-1,[150,[-1]],-2]]]]],19,[[136,[-1]]]],[[[144,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,[[54,[143]]],[]],[[[144,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[62,52,53],[52,53]],[[[144,[-1,[150,[-1]],-2]]],[[135,[2]]],19,[[136,[-1]]]],[[[144,[-1,-2,-3]]],[[151,[-1,-2]]],19,[],[]],[[[144,[-1,-2,-3]]],[[152,[-1,-2]]],19,[],[]],[[[144,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[[[144,[-1,155,-2]]],[[157,[156]]],19,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[[144,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53],[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[145,[-1,-2,-3]],26],[[145,[-1,-2,-3]]],[],[],[]],[[[145,[-1,-2,-3]],130],[[145,[-1,-2,-3]]],[],[],[]],[[[145,[-1,-2,-3]],26],[[145,[-1,-2,-3]]],[],[],[]],[[[145,[-1,-2,-3]],26],[[145,[-1,-2,-3]]],[],[],[]],[[[145,[-1,-2,-3]],130],[[145,[-1,-2,-3]]],[],[],[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,[[[158,[-1,-2]]],[[115,[[54,[114]]]]],19,[52,53]],[-1,[[115,[[54,[114]]]]],[]],[[147,-2],[[28,[[148,[-1,-2]],149]]],19,[[136,[-1]]]],[26,[[115,[[54,[114]]]]]],[[[158,[138,-1]],[139,[138]]],[[115,[[54,[114]]]]],[[136,[138]],140]],0,0,[-1,[[115,[[54,[114]]]]],[]],0,[[[158,[-1,-2]]],[[157,[156]]],19,[]],0,[[],2],0,0,0,0,0,[[146,[89,[-1]]],[[115,[[54,[114]]]]],19],[[146,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[146,[119,[-1]]],[[115,[[54,[114]]]]],19],[[146,[89,[-1]]],[[115,[[54,[114]]]]],19],[[146,[88,[-1]]],[[115,[[54,[114]]]]],19],[[146,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[146,[89,[-1]]],[[115,[[54,[114]]]]],19],[[146,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[146,[89,[-1]]],[[115,[[54,[114]]]]],19],[[146,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],0,0,0,[-1,4,[]],[-1,4,[]],[[[150,[-1]]],[[115,[[54,[114]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[[[150,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]],[129,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]]],[[115,[[54,[114]]]]],19],[133,[[28,[[150,[-1]],159]]],19],[137,[[28,[[150,[-1]],159]]],19],[26,-1,[]],[26,-1,[]],[26,2],[[[150,[-1]],32],35,19],[-1,-1,[]],[[[150,[-1]],[89,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]],-2],[[115,[[54,[114]]]]],19,[[118,[26]],52]],[[[150,[-1]],[119,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]],[89,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]],[88,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]],-2],[[115,[[54,[114]]]]],19,[[118,[26]],52]],[[[150,[-1]],[89,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]],-2],[[115,[[54,[114]]]]],19,[[118,[26]],52]],[[[150,[-1]],[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19],[[[150,[-1]],[89,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]],-2],[[115,[[54,[114]]]]],19,[[118,[26]],52]],[[],26],[[[150,[-1]],[90,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]],[68,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]],[71,[-1]],[9,[124]]],[[115,[[54,[114]]]]],19],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[133,[[28,[[150,[-1]],159]]],19],[137,[[28,[[150,[-1]],159]]],19],[[[150,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]]],[[115,[[54,[114]]]]],19],[[[150,[-1]]],[[28,[2,159]]],19],[[[150,[-1]]],[[115,[[54,[114]]]]],19],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[[[150,[-1]],-2],[[115,[[54,[114]]]]],19,[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[160,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[160,160],[[-1,-2],2,[],[]],[160,[[115,[[54,[114]]]]]],[[160,[129,[-1]]],[[115,[[54,[114]]]]],19],[160,[[115,[[54,[114]]]]]],[[],160],[26,-1,[]],[26,-1,[]],[26,2],[[160,32],35],[-1,-1,[]],[[160,[89,[-1]]],[[115,[[54,[114]]]]],19],[[160,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[160,[119,[-1]]],[[115,[[54,[114]]]]],19],[[160,[89,[-1]]],[[115,[[54,[114]]]]],19],[[160,[88,[-1]]],[[115,[[54,[114]]]]],19],[[160,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[160,[89,[-1]]],[[115,[[54,[114]]]]],19],[[160,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[160,[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19],[[160,[89,[-1]]],[[115,[[54,[114]]]]],19],[[160,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[],26],[[160,[90,[-1]]],[[115,[[54,[114]]]]],19],[[160,[68,[-1]]],[[115,[[54,[114]]]]],19],[[160,[71,[-1]],[9,[124]]],[[115,[[54,[114]]]]],19],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[160,[[115,[[54,[114]]]]]],[160,[[115,[[54,[114]]]]]],[160,[[115,[[54,[114]]]]]],0,[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[[160,-2],[[115,[[54,[114]]]]],19,[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[161,[[115,[[54,[114]]]]]],[161,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[161,[[115,[[54,[114]]]]]],[-1,[[115,[[54,[114]]]]],[]],[[161,[129,[138]]],[[115,[[54,[114]]]]]],[161,[[115,[[54,[114]]]]]],[26,[[115,[[54,[114]]]]]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],[-1,-1,[]],[-1,-1,[]],[[161,-1],[[115,[[54,[114]]]]],[[15,[[89,[138]]]],52,53]],[[161,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[161,[119,[138]]],[[115,[[54,[114]]]]]],[[161,-1],[[115,[[54,[114]]]]],[[15,[[88,[138]]]],52,53]],[[161,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[161,-1],[[115,[[54,[114]]]]],[[15,[[89,[138]]]],52,53]],[[161,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[161,[129,[138]],[9,[26]]],[[115,[[54,[114]]]]]],[[161,-1],[[115,[[54,[114]]]]],[[15,[[89,[138]]]],52,53]],[[161,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[161,[139,[138]]],[[115,[[54,[114]]]]]],[[],26],[[],26],[[161,[90,[138]]],[[115,[[54,[114]]]]]],[[161,[68,[138]]],[[115,[[54,[114]]]]]],[[161,[71,[138]],[9,[124]]],[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[161,142],[161,[[115,[[54,[114]]]]]],[-1,[[54,[143]]],[]],[-1,[[115,[[54,[114]]]]],[]],[161,[[115,[[54,[114]]]]]],[[[162,[161]]],[[115,[[54,[114]]]]]],[161,[[115,[[54,[114]]]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[[161,-1],[[115,[[54,[114]]]]],[[15,[[89,[138]]]],52,53]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[163,[[9,[164]]]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[149,5],[149,5],[149,165],[155,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[147,-2],[[28,[[148,[-1,-2]],149]]],19,[[136,[-1]]]],[149,166],[163,24],[167,[[115,[[54,[114]]]]]],[156,[[115,[[54,[114]]]]]],[155,[[115,[[54,[114]]]]]],[163,163],[147,147],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[163,163],94],[155,[[115,[[54,[114]]]]]],[[-1,-2],94,[],[]],[[147,-2],[[28,[[158,[-1,-2]],149]]],19,[[136,[-1]]]],[147,[[28,[155,149]]]],[[149,-1],149,[51,52,53]],[[155,[129,[-1]]],[[115,[[54,[114]]]]],19],[155,[[115,[[54,[114]]]]]],[[147,27],147],[[],147],[[],[[168,[163]]]],[26,-1,[]],[149],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[149],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[149,[[28,[-1,149]]],[51,34,52,53]],[149,[[9,[-1]]],[51,34,52,53]],[149,[[9,[-1]]],[51,34,52,53]],[26,2],[149,2],[26,2],[26,2],[26,2],[26,2],[155,2],[[163,163],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[156,-1,-2],[[157,[24]]],[43,169],170],[[156,-1,-2],[[157,[24]]],[43,169,51],170],[[156,-1,-2],[[157,[24]]],[43,169,51],[170,18]],[[156,-1,-2],[[157,[2]]],[43,169,51],170],[[156,-1,-2],[[157,[2]]],[43,169,51],[170,18]],[[149,32],[[28,[2,33]]]],[[149,32],[[28,[2,33]]]],[[163,32],[[28,[2,33]]]],[[163,32],[[28,[2,33]]]],[[147,32],35],[[155,32],35],[-1,-1,[]],[-1,149,[5,52,53]],[171,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[172,147],[-1,-1,[]],[27,[[28,[147,-1]]],[]],[[155,[89,[-1]]],[[115,[[54,[114]]]]],19],[[155,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[155,[119,[-1]]],[[115,[[54,[114]]]]],19],[[155,[89,[-1]]],[[115,[[54,[114]]]]],19],[[155,[88,[-1]]],[[115,[[54,[114]]]]],19],[[155,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[155,[89,[-1]]],[[115,[[54,[114]]]]],19],[[155,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[155,[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19],[[155,[89,[-1]]],[[115,[[54,[114]]]]],19],[[155,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[147,-1],147,[[15,[14]]]],0,0,[[],26],[[],26],[[],26],[[],26],[[],26],[[155,[90,[-1]]],[[115,[[54,[114]]]]],19],[[155,[68,[-1]]],[[115,[[54,[114]]]]],19],[[155,[71,[-1]],[9,[124]]],[[115,[[54,[114]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[149,30],[[147,-1],147,[[170,[],[[86,[163]]]]]],[-1,149,[51,34,52,53]],[163,27],[-1,149,[5,52,53]],[147,147],[[163,163],[[9,[94]]]],[[147,27],147],[155,[[115,[[54,[114]]]]]],[[147,173],147],0,[163,174],[[167,-1,-2],[[115,[[54,[114]]]]],[43,169,53],[170,52]],[[167,-1,-2],[[115,[[54,[114]]]]],[43,169,53],[170,52]],[[167,-1],[[115,[[54,[114]]]]],[43,169,53]],[[167,-1,-2],[[115,[[54,[114]]]]],[43,169,53],[170,52]],[[167,-1],[[115,[[54,[114]]]]],[43,169,53]],[[167,-1],[[115,[[54,[114]]]]],[43,169,53]],[147,147],[155,[[115,[[54,[114]]]]]],[149,5],[[147,-1],147,[[15,[14]]]],[163,[[9,[27]]]],[155,[[115,[[54,[114]]]]]],0,[147,147],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[155,[[157,[156]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[27,27],[[28,[163,175]]]],[[156,27,[176,[27]],-1,-3],[[157,[2]]],[[170,[],[[86,[27]]]]],[177,18],[[170,[],[[86,[[176,[-2]]]]]]]],[[147,27],147],[163,178],[[155,-2],[[115,[[54,[114]]]]],19,[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[179,147],[26,-1,[]],[26,-1,[]],[179,2],[26,2],[[179,32],35],[-1,-1,[]],[179,14],[[],179],[[],26],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[179,173],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[180,[-1,-2]]],[[180,[-1,-2]]],[],[]],[[-1,-2],2,[],[]],[[],[[180,[-1,-2]]],[],[]],[26,-1,[]],[26,-1,[]],[26,2],[[[180,[-1,-2]],32],35,[],[]],[-1,-1,[]],[[],26],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],0,0,[[181,-1],2,[]],[[182,-1],[[0,[[114,[],[[125,[2]]]],52]]],[]],[[[180,[-2,-3]],-2,-4,-5],2,[],[[183,[-1]]],182,[[184,[-1,-2]]],[[170,[],[[86,[-3]]]],52]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],[[[180,[-1,-2]],130],[[180,[-1,-2]]],[],[]],0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[185,[-1]]],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[186,[-1]]],[[186,[-1]]],19],[187,187],[[[185,[-1]]],[[185,[-1]]],[]],[188,188],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],[[186,[-1]]],19],[[],188],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],[26,2],[26,2],[[[185,[-1]]],2,[]],[[184,-2],[[115,[[54,[114]]]]],[],[[183,[-1]]]],[[[186,[-1]],189],[[115,[[54,[114]]]]],19],[[[186,[-1]],190],[[115,[[54,[114]]]]],19],[[[186,[-1]],191],[[115,[[54,[114]]]]],19],[[187,189],[[115,[[54,[114]]]]]],[[187,190],[[115,[[54,[114]]]]]],[[187,191],[[115,[[54,[114]]]]]],[[[185,[-3]],-2],[[115,[[54,[114]]]]],19,[[183,[-1]]],[[184,[-1,-2]],53]],[[188,-2],[[115,[[54,[114]]]]],[],[52,[183,[-1]]]],[[[186,[-1]],32],35,19],[[187,32],35],[[[185,[-1]],32],35,34],[[188,32],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],26],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[192,187],[-1,[[185,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[[185,[-1]]],2,[]],[[[185,[-1]]],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[186,[-1]],-2],[[186,[-1]]],19,[[184,[-1,191]],34]],[[[186,[-1]],-2],[[186,[-1]]],19,[[184,[-1,189]],34]],[[[186,[-1]],-2],[[186,[-1]]],19,[[136,[-1]],34]],[[[186,[-1]],-2],[[186,[-1]]],19,[[184,[-1,190]],34]],0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[191,191],[190,190],[189,189],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],[26,2],[[191,191],30],[[190,190],30],[[189,189],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[191,32],35],[[190,32],35],[[189,32],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[26,189],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[191,-1],2,49],[[190,-1],2,49],[[189,-1],2,49],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[193,26],2],[[194,195],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[196,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[196,[[9,[5]]]],[142,142],[193,193],[197,197],[194,194],[198,198],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[142,14,[9,[14]]],[[54,[199]]]],[[142,14,[9,[14]]],[[54,[200]]]],[[142,14,[9,[14]]],[[54,[201]]]],[[142,14],[[54,[202]]]],[[],142],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[196,27],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[142,[[28,[14,-1]]],[]],[[196,32],35],[[196,32],35],[[142,32],35],[[193,32],35],[[197,32],35],[[194,32],35],[[198,32],35],[-1,-1,[]],[203,196],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[193,26],[197,26],[198,14],[[142,27],[[28,[193,196]]]],[[142,27],[[28,[197,196]]]],[[142,27],[[28,[194,196]]]],[[142,27],[[28,[198,196]]]],[[142,-1],[[28,[142,196]]],170],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[194,195],[194,26],[[197,26],2],[[198,14],2],[196,[[9,[5]]]],[[142,14],[[54,[143]]]],[194,195],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[197,204],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[6,6],[6,6],[36,[[9,[8]]]],0,[59,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[205,36],[[[206,[-1,-2]]],36,[[15,[14]]],[[15,[16]]]],[36,[[9,[5]]]],[207,207],[208,208],[209,209],[[[210,[-1]]],[[210,[-1]]],18],[[[211,[-1]]],[[211,[-1]]],18],[205,205],[[[206,[-1,-2]]],[[206,[-1,-2]]],18,18],[36,36],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[207,207],94],[[-1,-2],94,[],[]],[[59,[129,[-1]]],[[115,[[54,[114]]]]],19],[59,[[115,[[54,[114]]]]]],[[],212],[212,[[28,[[103,[-1,36]],104]]],[52,53,105]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[36,27],[-1,[[28,[207]]],29],[-1,[[28,[36]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[207,207],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[205,[[28,[-1,36]]],[]],[[[206,[-1,-2]]],[[28,[-3,36]]],[[15,[14]]],[[15,[16]]],[]],[[207,32],35],[[208,32],35],[[209,32],35],[[[210,[-1]],32],35,34],[[[211,[-1]],32],35,34],[[205,32],35],[[[206,[-1,-2]],32],35,34,34],[[36,32],35],[[36,32],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[14,16]]],36],[109,36],[10,36],[39,[[28,[212,40]]]],[39,[[28,[212,40]]]],[[],207],[[-1,-2],24,[42,43],44],[[59,[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19],[[],[[9,[48]]]],[[207,-1],2,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[-1,36,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[208,-1],36,[]],[[209,-1],36,[]],[[[210,[-1]],-2],36,[[15,[14]]],[]],[[[211,[-1]],-2],36,[[15,[14]]],[]],[[205,-1],36,[]],[[[206,[-1,-2]],-3],36,[[15,[14]]],[[15,[16]]],[]],[207,30],0,0,0,0,0,[[207,207],[[9,[94]]]],[59,[[115,[[54,[114]]]]]],0,[[207,-1],28,65],[[36,-1],28,65],[36,[[9,[5]]]],[36,16],0,[59,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[212,39],[[28,[2,40]]]],[[212,39],[[28,[2,40]]]],[[59,-2],[[115,[[54,[114]]]]],19,[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[6,6],[6,6],[38,[[9,[8]]]],[60,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,[[9,[5]]]],[213,213],[38,38],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[213,213],94],[[-1,-2],94,[],[]],[60,[[157,[142]]]],[60,[[157,[142]]]],[[],213],[[],214],[214,[[28,[[103,[-1,38]],104]]],[52,53,105]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[38,27],[-1,[[28,[213]]],29],[-1,[[28,[38]]],29],[26,2],[26,2],[26,2],[60,[[115,[[54,[114]]]]]],[60,[[115,[[54,[114]]]]]],[[213,213],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[[213,32],35],[[38,32],35],[[38,32],35],[-1,-1,[]],[-1,-1,[]],[109,38],[14,38],[-1,-1,[]],[39,[[28,[214,40]]]],[39,[[28,[214,40]]]],[[-1,-2],24,[42,43],44],[[],[[9,[48]]]],[[213,-1],2,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],0,[60,[[115,[[54,[114]]]]]],[60,[[115,[[54,[114]]]]]],[60,142],[[213,213],[[9,[94]]]],[215,[[54,[143]]]],[[213,-1],28,65],[[38,-1],28,65],[38,[[9,[5]]]],[38,16],[60,[[115,[[54,[114]]]]]],[60,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],0,[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[214,39],[[28,[2,40]]]],[[214,39],[[28,[2,40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[26,30],0,[[],2],[130,2],0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[115,[[54,[114]]]]],[]],[26,[[115,[[54,[114]]]]]],[[[162,[-1]]],[[55,[[216,[-1]]]]],217],[[[162,[-1]],26],[[55,[[216,[-1]]]]],217],[26,-1,[]],[26,-1,[]],[[[162,[-1]]],2,217],[26,2],[-1,-1,[]],[[[162,[-1]]],[[57,[138,218]]],217],[[[217,[],[[219,[-1]]]],[139,[138]]],[[115,[[54,[114]]]]],[52,53]],[[],26],[[],[[162,[-1]]],[217,215]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[162,[-1]]],26,217],[[[162,[-1]],26],[[129,[138]]],217],[-1,[[115,[[54,[114]]]]],[]],[[[162,[[217,[],[[219,[-1]]]]]]],[[115,[[54,[114]]]]],[52,53]],[[[162,[-1]]],2,217],[[[162,[-1]]],2,217],[[[162,[-1]]],[],217],[[[162,[-1]],220],2,217],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[138,138],[218,218],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[138,138],94],[[218,218],94],[[-1,-2],94,[],[]],[[-1,-2],94,[],[]],[[],138],[[],218],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[-1,[[28,[138]]],29],[-1,[[28,[218]]],29],[26,2],[26,2],[[138,138],30],[[218,218],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[138,32],35],[[218,32],35],[-1,-1,[]],[-1,-1,[]],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[138,-1],2,49],[[218,-1],2,49],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[221,-1],-2,[],[]],0,[[221,-1],26,[]],[[[168,[222]]],220],[[138,138],[[9,[94]]]],[[218,218],[[9,[94]]]],0,0,[[138,-1],28,65],[[218,-1],28,65],0,[-1,-2,[],[]],[-1,-2,[],[]],[[221,-1,-2],[[9,[[2,[-3,-4]]]]],[],[],[],[]],0,[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Private",2667],[1,"tuple"],[5,"Private",2667],[10,"Any",2668],[10,"Error",2669],[5,"Command",2670],[6,"Error",0],[5,"Backtrace",2671],[6,"Option",2672],[6,"QueryError",0],[5,"NotFoundSnafu",0],[5,"MissingSnafu",0],[5,"Snafu",0],[5,"String",2673],[10,"Into",2674],[6,"StatusCode",2675],[5,"Leaf",0],[10,"Clone",2676],[10,"NodeType",2677],[5,"Commitment",2678],[10,"Resolvable",0],[10,"Committable",2678],[10,"RngCore",2679],[1,"u64"],[5,"Options",0],[1,"usize"],[1,"str"],[6,"Result",2680],[10,"Deserializer",2681],[1,"bool"],[6,"BlockError",2682],[5,"Formatter",2683],[5,"Error",2683],[10,"Debug",2683],[8,"Result",2683],[6,"Error",2113],[6,"Error",288],[6,"Error",2406],[5,"ArgMatches",2684],[8,"Error",2685],[5,"StoredView",2686],[10,"Hash",2687],[10,"Sized",2688],[10,"BuildHasher",2687],[5,"QuorumData",2689],[5,"SuccessThreshold",2690],[5,"SimpleCertificate",2690],[5,"Id",2691],[10,"Hasher",2687],[5,"IndentedSection",2692],[10,"Display",2683],[10,"Send",2688],[10,"Sync",2688],[5,"Box",2693],[5,"Arc",2694],[5,"Rc",2695],[5,"SystemContextHandle",2696],[10,"AvailabilityDataSource",288],[10,"NodeDataSource",2113],[10,"StatusDataSource",2406],[10,"UpdateDataSource",1007],[10,"VersionedDataSource",1007],[10,"NodeImplementation",2677],[10,"Serialize",2697],[10,"Serializer",2697],[5,"TypeId",2668],[5,"InconsistentLeafError",288],[5,"LeafQueryData",288],[8,"BlockHash",288],[5,"PayloadQueryData",288],[5,"VidCommonQueryData",288],[5,"TransactionQueryData",288],[5,"FetchLeafSnafu",288],[5,"FetchBlockSnafu",288],[5,"FetchTransactionSnafu",288],[5,"InvalidTransactionIndexSnafu",288],[5,"CustomSnafu",288],[17,"TransactionIndex"],[17,"Iter"],[17,"InclusionProof"],[10,"QueryablePayload",288],[10,"PartialEq",2698],[10,"Eq",2698],[10,"Ord",2698],[10,"DeserializeOwned",2681],[17,"Item"],[10,"Iterator",2699],[6,"LeafId",288],[6,"BlockId",288],[5,"BlockQueryData",288],[5,"BlockSummaryQueryData",288],[5,"TransactionSummaryQueryData",288],[5,"RequestSnafu",288],[6,"Ordering",2698],[8,"VidCommon",0],[6,"Fetch",288],[10,"ErrorCompat",2700],[17,"Source"],[5,"NoneError",2700],[10,"IntoError",2700],[8,"Payload",0],[5,"Options",288],[5,"Api",2701],[6,"ApiError",2701],[10,"ReadState",2702],[8,"TransactionIndex",288],[8,"Transaction",0],[8,"LeafHash",288],[6,"RequestError",2703],[17,"LeafRange"],[17,"BlockRange"],[17,"PayloadRange"],[17,"VidCommonRange"],[10,"Future",2704],[5,"Pin",2705],[10,"Stream",2706],[10,"Unpin",2688],[10,"RangeBounds",2707],[8,"TransactionHash",288],[8,"VidCommitment",2682],[8,"Header",0],[17,"Error"],[10,"UpdateAvailabilityData",288],[8,"VidShare",0],[17,"Output"],[10,"FnOnce",2708],[8,"Metadata",0],[8,"QuorumCertificate",2690],[8,"SignatureKey",0],[5,"Duration",2709],[5,"ExtensibleDataSource",1007],[5,"MetricsDataSource",1007],[5,"Path",2710],[8,"FileSystemDataSource",1007],[8,"Result",2711],[10,"AvailabilityProvider",1124],[5,"AtomicStoreLoader",2712],[5,"MockTypes",2574],[5,"Event",2713],[10,"Default",2714],[10,"TestableDataSource",2535],[5,"PrometheusMetrics",1934],[10,"Metrics",2715],[5,"FetchingDataSource",1124],[5,"Builder",1124],[10,"AvailabilityStorage",1277],[5,"Config",1458],[8,"Builder",1258],[5,"Error",1458],[5,"FileSystemStorage",1294],[5,"StorageReadGuard",1124],[5,"StorageWriteGuard",1124],[5,"RwLockReadGuard",2716],[5,"RwLockWriteGuard",2716],[5,"SqlStorage",1458],[5,"Transaction",1458],[8,"QueryResult",0],[8,"SqlDataSource",1258],[6,"PersistenceError",2717],[5,"NoStorage",1340],[6,"DataSource",1388],[5,"MockNetwork",2535],[5,"Migration",1458],[5,"OffsetDateTime",2718],[5,"Backtrace",2719],[5,"Chain",2711],[10,"Query",1458],[5,"Vec",2720],[10,"ToStatement",2721],[10,"IntoIterator",2722],[1,"never"],[5,"Config",2723],[1,"u16"],[6,"Type",2724],[5,"Error",2725],[1,"array"],[10,"BorrowToSql",2726],[1,"u32"],[5,"TmpDb",1661],[5,"Fetcher",1685],[10,"LocalCallback",1685],[10,"Callback",1685],[10,"Request",1838],[10,"Provider",1720],[5,"TestProvider",1720],[5,"AnyProvider",1720],[5,"QueryServiceProvider",1720],[5,"NoFetching",1720],[5,"LeafRequest",1838],[5,"VidCommonRequest",1838],[5,"PayloadRequest",1838],[5,"Url",2727],[5,"Counter",1934],[5,"Histogram",1934],[1,"f64"],[6,"MetricsError",1934],[5,"Gauge",1934],[5,"Label",1934],[10,"Counter",2715],[10,"Gauge",2715],[10,"Histogram",2715],[10,"Label",2715],[6,"Error",2728],[1,"i64"],[5,"InvalidSignatureKeySnafu",2113],[5,"CustomSnafu",2113],[5,"SyncStatus",2113],[5,"RequestSnafu",2113],[5,"QuerySnafu",2113],[5,"QueryProposalsSnafu",2113],[5,"QueryVidSnafu",2113],[5,"Options",2113],[5,"MempoolQueryData",2406],[5,"Options",2406],[10,"UpdateStatusData",2406],[5,"RwLock",2716],[10,"DataSourceLifeCycle",2535],[5,"MockNodeImpl",2574],[17,"Storage"],[8,"MockTransaction",2574],[8,"MockPayload",2574],[1,"u8"],[15,"Custom",282],[15,"Availability",282],[15,"Node",282],[15,"Status",282],[15,"Error",287],[15,"InvalidTransactionIndex",999],[15,"Custom",999],[15,"FetchLeaf",999],[15,"FetchBlock",999],[15,"FetchTransaction",999],[15,"Request",999],[6,"Storage",1388],[15,"NoStorage",1457],[15,"NoSuchMetric",2109],[15,"NoSuchSubgroup",2109],[15,"Prometheus",2109],[15,"QueryVid",2398],[15,"Custom",2398],[15,"QueryProposals",2398],[15,"Request",2398],[15,"Query",2398],[15,"Internal",2527],[15,"Request",2527],[8,"MockQuorumProposal",2574],[8,"MockHeader",2574]],"b":[[136,"impl-Display-for-Leaf%3CTYPES%3E"],[137,"impl-Debug-for-Leaf%3CTYPES%3E"],[138,"impl-Display-for-Error"],[139,"impl-Debug-for-Error"],[143,"impl-Debug-for-QueryError"],[144,"impl-Display-for-QueryError"],[147,"impl-From%3CError%3E-for-Error"],[148,"impl-From%3CError%3E-for-Error"],[149,"impl-From%3CError%3E-for-Error"],[150,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[632,"impl-Debug-for-LeafId%3CTypes%3E"],[633,"impl-Display-for-LeafId%3CTypes%3E"],[634,"impl-Debug-for-BlockId%3CTypes%3E"],[635,"impl-Display-for-BlockId%3CTypes%3E"],[637,"impl-Display-for-InconsistentLeafError%3CTypes%3E"],[638,"impl-Debug-for-InconsistentLeafError%3CTypes%3E"],[651,"impl-Display-for-Error"],[652,"impl-Debug-for-Error"],[655,"impl-From%3CCommitment%3CLeaf%3CTypes%3E%3E%3E-for-LeafId%3CTypes%3E"],[656,"impl-From%3Cusize%3E-for-LeafId%3CTypes%3E"],[658,"impl-From%3CCommitment%3C%3CTypes+as+NodeType%3E::BlockHeader%3E%3E-for-BlockId%3CTypes%3E"],[659,"impl-From%3Cusize%3E-for-BlockId%3CTypes%3E"],[678,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[679,"impl-From%3CRequestError%3E-for-Error"],[1027,"impl-StatusDataSource-for-ExtensibleDataSource%3CD,+U%3E"],[1028,"impl-NodeDataSource%3CTypes%3E-for-ExtensibleDataSource%3CD,+U%3E"],[1045,"impl-DataSourceLifeCycle-for-FetchingDataSource%3CMockTypes,+FileSystemStorage%3CMockTypes%3E,+P%3E"],[1046,"impl-FetchingDataSource%3CTypes,+FileSystemStorage%3CTypes%3E,+P%3E"],[1139,"impl-StatusDataSource-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1140,"impl-NodeDataSource%3CTypes%3E-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1266,"impl-DataSourceLifeCycle-for-FetchingDataSource%3CMockTypes,+SqlStorage,+P%3E"],[1267,"impl-FetchingDataSource%3CTypes,+SqlStorage,+P%3E"],[1398,"impl-NodeDataSource%3CMockTypes%3E-for-DataSource"],[1399,"impl-StatusDataSource-for-DataSource"],[1479,"impl-AsRef%3Cdyn+Error+%2B+Send+%2B+Sync%3E-for-Error"],[1480,"impl-AsRef%3Cdyn+Error%3E-for-Error"],[1546,"impl-Debug-for-Error"],[1547,"impl-Display-for-Error"],[1548,"impl-Debug-for-Migration"],[1549,"impl-Display-for-Migration"],[1774,"impl-Provider%3CTypes,+LeafRequest%3E-for-AnyProvider%3CTypes%3E"],[1775,"impl-Provider%3CTypes,+VidCommonRequest%3E-for-AnyProvider%3CTypes%3E"],[1776,"impl-Provider%3CTypes,+PayloadRequest%3E-for-AnyProvider%3CTypes%3E"],[1777,"impl-Provider%3CTypes,+LeafRequest%3E-for-QueryServiceProvider"],[1778,"impl-Provider%3CTypes,+VidCommonRequest%3E-for-QueryServiceProvider"],[1779,"impl-Provider%3CTypes,+PayloadRequest%3E-for-QueryServiceProvider"],[2017,"impl-Debug-for-MetricsError"],[2018,"impl-Display-for-MetricsError"],[2260,"impl-Display-for-Error"],[2261,"impl-Debug-for-Error"],[2271,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[2272,"impl-From%3CRequestError%3E-for-Error"],[2273,"impl-From%3CQueryError%3E-for-Error"],[2468,"impl-Display-for-Error"],[2469,"impl-Debug-for-Error"],[2472,"impl-From%3CRequestError%3E-for-Error"],[2473,"impl-From%3CString%3E-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
