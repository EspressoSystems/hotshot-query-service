var searchIndex = JSON.parse('{\
"hotshot_query_service":{"doc":"The HotShot Query Service is a minimal, generic query …","t":[13,13,4,3,13,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,8,6,16,3,13,4,16,13,13,13,6,16,3,13,13,3,13,6,3,13,13,13,8,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,16,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,4,16,13,3,3,13,8,8,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,10,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Availability","Custom","Error","Options","Status","as_any","as_any","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","availability","availability","backtrace","borrow","borrow","borrow_mut","borrow_mut","catch_all","cause","clone","clone_into","data_source","default","deref","deref","deref_mut","deref_mut","description","deserialize","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","in_current_span","init","init","internal","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","provide","run_standalone_service","serialize","source","status","status","status","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","message","source","source","status","AvailabilityDataSource","BlockHash","BlockIterType","BlockQueryData","Custom","Error","Error","InvalidBlockHeight","InvalidLeafHeight","InvalidTransactionIndex","LeafHash","LeafIterType","LeafQueryData","MissingBlock","MissingLeaf","Options","Request","TransactionHash","TransactionQueryData","UnknownBlockHash","UnknownLeafHash","UnknownTransactionHash","UpdateAvailabilityData","api_path","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block","block_hash","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","define_api","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","extensions","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_block_ids_by_proposer_id","get_block_index_by_hash","get_leaf_index_by_hash","get_nth_block_iter","get_nth_leaf_iter","get_txn_index_by_hash","group_id","hash","hash","hash","header","height","height","height","in_current_span","index","init","init","init","init","init","insert_block","insert_leaf","internal","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","is_empty","iter","leaf","len","new","new","proposer","provide","qc","serialize","serialize","serialize","serialize","size","source","status","to_owned","to_owned","to_owned","to_owned","to_string","transaction","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","hash","hash","hash","height","height","height","height","height","index","message","source","status","Error","Iter","QueryData","UpdateDataSource","as_any","as_any","as_any_mut","as_any_mut","as_bits","as_mut","as_mut_bits","as_ref","block_height","borrow","borrow","borrow_mut","borrow_mut","commit_version","count","create","create_with_store","deref","deref","deref_mut","deref_mut","drop","drop","encode_hex","encode_hex_upper","export_metrics","fmt","from","from","get_block_ids_by_proposer_id","get_block_index_by_hash","get_leaf_index_by_hash","get_nth_block_iter","get_nth_leaf_iter","get_txn_index_by_hash","init","init","insert_block","insert_leaf","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_iter","mempool_info","metrics","metrics","next","nth","open","open_with_store","protocol_name","revert_version","size_hint","skip_version","success_rate","try_as_bits","try_as_mut_bits","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","Error","Error","Internal","MempoolQueryData","Options","Request","StatusDataSource","UpdateStatusData","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","cmp","default","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","eq","export_metrics","extensions","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","group_id","hash","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","memory_footprint","mempool_info","metrics","partial_cmp","provide","serialize","serialize","source","status","success_rate","to_owned","to_owned","to_string","transaction_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","reason","source"],"q":["hotshot_query_service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hotshot_query_service::Error","","","","hotshot_query_service::availabilityhotshot_query_service::availability::Error","","","","","","","","","","","","hotshot_query_service::data_source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hotshot_query_service::status","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hotshot_query_service::status::Error",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Run an instance of the HotShot Query service with no …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The requested block height is out of range for the current …","The requested leaf height is out of range for the current …","The requested transaction index is out of range for its …","","","","The requested block exists but this query service instance …","The requested leaf exists but this query service instance …","","","","","The requested block hash is not in the database.","The requested leaf hash is not in the database.","The requested transaction hash is not in the database.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data used by the APIs provided in this crate, including …","An extension trait for types which implement the update …","","","","","","","","","","","","","","Commit the current state to persistent storage.","","Create a new QueryData with storage at <code>path</code>.","Create a new QueryData using a persistent storage loader.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Get a handle for populating status metrics.","","","","Open an existing QueryData from storage at <code>path</code>.","Open an existing QueryData using a persistent storage …","","Revert changes made to persistent storage since the last …","","Advance the version of the persistent store without …","","","","","","","","","","Update query state based on a new consensus event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Export all available metrics in the Prometheus text format.","Additional API specification files to merge with …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[4,4,0,0,4,4,9,4,9,4,9,9,0,9,4,4,9,4,9,4,4,4,4,0,9,4,9,4,9,4,4,4,9,4,4,4,4,4,4,9,9,9,9,4,4,4,9,4,4,9,4,9,4,9,4,9,4,0,4,4,0,4,9,4,4,4,9,4,9,4,9,9,9,4,9,69,70,71,69,0,0,72,0,15,0,73,15,15,15,0,72,0,15,15,0,15,0,0,15,15,15,0,40,36,35,39,40,15,36,35,39,40,15,15,40,40,15,35,36,36,35,39,40,15,36,35,39,40,15,15,36,35,39,15,36,35,39,15,40,0,36,35,39,40,15,36,35,39,40,15,15,36,35,39,15,36,35,39,40,15,36,35,39,40,36,35,39,15,15,36,35,39,40,15,15,15,40,40,72,72,72,72,72,72,40,36,35,39,15,36,35,39,15,39,36,35,39,40,15,73,73,15,36,35,39,40,15,36,35,39,40,15,36,35,39,40,15,36,35,39,40,15,35,35,35,35,36,35,36,35,36,15,36,36,35,39,15,35,15,15,36,35,39,15,15,35,39,36,35,39,40,15,36,35,39,40,15,36,35,39,40,15,40,40,36,35,39,40,15,74,75,76,77,78,79,80,81,81,82,83,82,84,0,0,0,59,28,59,28,28,28,28,28,28,59,28,59,28,28,59,28,28,59,28,59,28,59,28,28,28,28,28,59,28,28,28,28,28,28,28,59,28,28,28,59,28,59,28,59,28,59,28,59,28,84,28,59,59,28,28,28,28,59,28,28,28,28,59,28,59,28,59,28,84,59,28,0,85,16,0,0,16,0,0,68,62,68,16,62,68,16,16,68,68,16,85,62,68,16,62,68,16,16,62,16,62,16,62,62,68,0,62,68,16,62,68,16,16,62,16,62,68,16,62,85,68,62,16,16,62,68,16,16,16,68,68,62,68,62,16,16,62,68,16,62,68,16,62,68,16,62,68,16,62,68,16,62,85,86,62,16,62,16,16,16,85,62,16,16,62,62,68,16,62,68,16,62,68,16,68,68,62,68,16,87,88],"f":[0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],2],[3,3],[3,3],0,0,[4,[[6,[5]]]],[[]],[[]],[[]],[[]],[[7,8],4],[4,[[6,[2]]]],[4,4],[[]],0,[[],9],[10],[10],[10],[10],[4,11],[[],[[12,[4]]]],[10],[10],[[4,13],14],[[4,13],14],[15,4],[[],4],[16,4],[[]],[[]],[17,[[12,[9,18]]]],[17,[[12,[9,18]]]],[[],[[6,[19]]]],[[],20],[[]],[[],10],[[],10],[21,4],[[]],[[]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26],[[9,[28,[27]],[30,[27,[29,[27]]]]],[[0,[31,32,33]]]],[4,12],[4,[[6,[2]]]],0,[4,7],0,[[]],[[],8],[[],12],[[],12],[[],12],[[],12],[[],34],[[],34],[[9,17],[[12,[18]]]],[[9,17],[[12,[18]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[3,3],[3,3],[15,[[6,[5]]]],[[[35,[27]]]],[[[36,[27]]],[[37,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[6,[2]]]],[[[36,[[0,[38,27]]]]],[[36,[[0,[38,27]]]]]],[[[35,[[0,[38,27]]]]],[[35,[[0,[38,27]]]]]],[[[39,[[0,[38,27]]]]],[[39,[[0,[38,27]]]]]],[15,15],[[]],[[]],[[]],[[]],[[],40],[40,[[12,[[41,[15]],42]]]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[15,11],[[],[[12,[[36,[27]]]]]],[[],[[12,[[35,[27]]]]]],[[],[[12,[[39,[27]]]]]],[[],[[12,[15]]]],[10],[10],[10],[10],[10],[[[36,[[0,[43,27]]]],36],44],[[[35,[[0,[43,27]]]],35],44],[[[39,[[0,[43,27]]]],39],44],0,[[[36,[[0,[45,27]]]],13],14],[[[35,[[0,[45,27]]]],13],14],[[[39,[[0,[45,27]]]],13],14],[[15,13],14],[[15,13],14],[[]],[[]],[[]],[[]],[[],15],[46,15],[[]],[17,[[12,[40,18]]]],[17,[[12,[40,18]]]],[47,[[49,[48]]]],[37,[[6,[48]]]],[50,[[6,[48]]]],[10],[10],[51,6],[[],[[6,[19]]]],[[[36,[27]]],[[50,[27]]]],[[[35,[27]]],[[37,[27]]]],[[[39,[27]]],[[51,[27]]]],[[],20],[[[36,[27]]],48],[[[35,[27]]],48],[[[39,[27]]],48],[[]],[[[39,[27]]],48],[[],10],[[],10],[[],10],[[],10],[[],10],[35,12],[36,12],[21,15],[[]],[[]],[[]],[[]],[[]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[[[35,[27]]]],[35],[[[35,[27]]],44],[[[35,[27]]],52],[[[36,[27]]],53],[[[35,[27]]],10],[[[53,[27]],[54,[27]]],[[36,[27]]]],[[[53,[27]],[54,[27]]],[[35,[27]]]],[[[36,[27]]],47],[26],[[[36,[27]]],54],[[[36,[27]]],12],[[[35,[27]]],12],[[[39,[27]]],12],[15,12],[[[35,[27]]],48],[15,[[6,[2]]]],[15,7],[[]],[[]],[[]],[[]],[[],8],[[[35,[27]],10],[[6,[[39,[27]]]]]],[[[39,[27]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],34],[[],34],[[],34],[[],34],[[],34],[[40,17],[[12,[18]]]],[[40,17],[[12,[18]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],55],[[[28,[27]]]],[[],55],[[[28,[27]]]],[[[28,[27]]],[[12,[10]]]],[[]],[[]],[[]],[[]],[[[28,[27]]],[[12,[56]]]],[[[59,[[0,[57,58,38]]]]],10],[60,[[12,[[28,[27]],56]]]],[61,[[12,[[28,[27]],56]]]],[10],[10],[10],[10],[10],[10],[[]],[[]],[[[28,[27]]],[[12,[8]]]],[[[28,[27]],13],14],[[]],[[]],[[[28,[27]],47],[[49,[48]]]],[[[28,[27]],[37,[27]]],[[6,[48]]]],[[[28,[27]],[50,[27]]],[[6,[48]]]],[[[28,[27]],10]],[[[28,[27]],10]],[[[28,[27]],[51,[27]]],6],[[],10],[[],10],[[[28,[27]],[35,[27]]],12],[[[28,[27]],[36,[27]]],12],[[]],[[]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[[]],[[[28,[27]]],[[12,[62]]]],[[],[[23,[63]]]],[[[28,[27]]],[[23,[63]]]],[[[59,[[0,[57,58,38]]]]],6],[[[59,[[0,[57,58,38]]]],10],6],[60,[[12,[[28,[27]],56]]]],[61,[[12,[[28,[27]],56]]]],[[]],[[[28,[27]]],[[12,[56]]]],[[[59,[[0,[57,58,38]]]]]],[[[28,[27]]],[[12,[56]]]],[[[28,[27]]],[[12,[64]]]],[[],[[12,[55,65]]]],[[],[[12,[55,65]]]],[[],12],[[],12],[[],12],[[],12],[[],34],[[],34],[66,12],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[3,3],[3,3],[16,[[6,[5]]]],[[],[[12,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[16,[[6,[2]]]],[62,62],[16,16],[[]],[[]],[[62,62],67],[[],62],[[],68],[68,[[12,[[41,[16]],42]]]],[10],[10],[10],[10],[10],[10],[16,11],[[],[[12,[62]]]],[[],[[12,[16]]]],[10],[10],[10],[[62,62],44],[[],[[12,[8]]]],0,[[62,13],14],[[16,13],14],[[16,13],14],[[]],[[]],[46,16],[8,16],[[]],[17,[[12,[68,18]]]],[17,[[12,[68,18]]]],[[],48],[[],[[6,[19]]]],[62],[[],20],[[]],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],0,[[],[[12,[62]]]],[[],[[23,[63]]]],[[62,62],[[6,[67]]]],[26],[62,12],[16,12],[16,[[6,[2]]]],[16,7],[[],[[12,[64]]]],[[]],[[]],[[],8],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],34],[[],34],[[],34],[[68,17],[[12,[18]]]],[[68,17],[[12,[18]]]],[[]],[[]],[[]],0,0],"p":[[8,"Any"],[8,"Error"],[3,"Command"],[4,"Error"],[3,"Backtrace"],[4,"Option"],[4,"StatusCode"],[3,"String"],[3,"Options"],[15,"usize"],[15,"str"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"Error"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"IndentedSection"],[8,"Display"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Demand"],[8,"NodeTypes"],[3,"QueryData"],[8,"NodeImplementation"],[3,"HotShotHandle"],[8,"Future"],[8,"Send"],[8,"Sync"],[3,"TypeId"],[3,"BlockQueryData"],[3,"LeafQueryData"],[6,"BlockHash"],[8,"Clone"],[3,"TransactionQueryData"],[3,"Options"],[3,"Api"],[4,"ApiError"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[4,"RequestError"],[3,"EncodedPublicKey"],[15,"u64"],[3,"Vec"],[6,"LeafHash"],[6,"TransactionHash"],[8,"Iterator"],[3,"Leaf"],[3,"QuorumCertificate"],[3,"BitSlice"],[4,"PersistenceError"],[8,"Serialize"],[8,"DeserializeOwned"],[3,"Iter"],[3,"Path"],[3,"AtomicStoreLoader"],[3,"MempoolQueryData"],[8,"Metrics"],[15,"f64"],[4,"BitSpanError"],[3,"Event"],[4,"Ordering"],[3,"Options"],[13,"Custom"],[13,"Availability"],[13,"Status"],[8,"AvailabilityDataSource"],[8,"UpdateAvailabilityData"],[13,"UnknownLeafHash"],[13,"UnknownBlockHash"],[13,"UnknownTransactionHash"],[13,"InvalidLeafHeight"],[13,"MissingLeaf"],[13,"InvalidBlockHeight"],[13,"MissingBlock"],[13,"InvalidTransactionIndex"],[13,"Custom"],[13,"Request"],[8,"UpdateDataSource"],[8,"StatusDataSource"],[8,"UpdateStatusData"],[13,"Internal"],[13,"Request"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
