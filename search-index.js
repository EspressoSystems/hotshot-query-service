var searchIndex = new Map(JSON.parse('[\
["hotshot_query_service",{"doc":"The HotShot Query Service is a minimal, generic query …","t":"PPPGPIFPIPFPPFPFIGIKIFPIIIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNQQQQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNCOCCOONNNNNNNOOHNNNNNCNNOCNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNCNNONNNNNNNOOOOOOOKIGFRFPFGRGPFPFPFPPRFPFRIGFRPPFPFRPKKPPFIIIIRFFKFRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNMMMMMMNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNOMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOONNNNNNNNNNNNNNONNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOERFEIFEKKNNNNNNNNNNCNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNCNNNNNNNMNNCCCNNNNNNNNNNNMNNNHHKFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHIEFFEIENNNNNQENCNEHKEEECMMMMMMMMMMCCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNORKKFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFKEENNNNNNNNNNNNNNNNNNNNNNNNNCCMMNNNNNNNNFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKRFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRPRPRRGPRKKFPPGRKKNNONNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNMNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNMNNNOOOOFFFFGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOEEPFGPPKFPFPFPFPFFPFGNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONMNNNNNNNNNNOONNNNONOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNOOOOOOOOOOGPFFPKKNNNNONNNNNNNNNNNNMNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNMNNNNMNNNNNNNNNONNNNNNNNNNNNNNNNNOOCCHHKIFSRKNNNNMMNNNNNNNNNMNNNNNNNNNNNNNMNNNNNNNNNNNIIIIFIIIIFNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNONNONNONONONNNONNNNNNNNNOOONNKM","n":["Availability","Custom","Err","Error","Error","Header","Leaf","MerklizedState","Metadata","Missing","MissingSnafu","Node","NotFound","NotFoundSnafu","Ok","Options","Payload","QueryError","QueryResult","Resolvable","SignatureKey","Snafu","Status","Transaction","VidCommitment","VidCommon","VidShare","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error","as_error","as_error_source","as_error_source","as_error_source","as_error_source","augment_args","augment_args_for_update","availability","availability","backtrace","backtrace","block_header","block_payload","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","catch_all","cause","cause","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commitment","commitment","create_random_transaction","data_source","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fail","fail","fail","fetching","fill_block_payload","fill_block_payload_unchecked","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","genesis","get_block_header","get_block_payload","get_hash","get_height","get_justify_qc","get_parent_commitment","get_payload_commitment","get_proposer_id","get_view_number","group_id","hash","header","header","header","in_current_span","in_current_span","include_migrations","init","init","init","init","init","init","init","instantiate_availability_tests","instantiate_data_source_tests","instantiate_node_tests","instantiate_persistence_tests","instantiate_status_tests","internal","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","justify_qc","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","merklized_state","message","metrics","node","node","parent_commitment","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","port","proposer_id","run_standalone_service","serialize","serialize","serialize","source","source","status","status","status","status","testing","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","types","update_from_arg_matches","update_from_arg_matches_mut","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","message","source","source","source","source","status","message","AvailabilityDataSource","BlockHash","BlockId","BlockQueryData","BlockRange","BlockSummaryQueryData","Custom","CustomSnafu","Error","Error","Fetch","FetchBlock","FetchBlockSnafu","FetchLeaf","FetchLeafSnafu","FetchTransaction","FetchTransactionSnafu","Hash","Hash","InclusionProof","InconsistentLeafError","InvalidTransactionIndex","InvalidTransactionIndexSnafu","Iter","LeafHash","LeafId","LeafQueryData","LeafRange","Number","Number","Options","PayloadHash","PayloadQueryData","PayloadRange","Pending","QueryableHeader","QueryablePayload","Ready","Request","RequestSnafu","Timestamp","TransactionHash","TransactionInclusionProof","TransactionIndex","TransactionIndex","TransactionQueryData","TransactionSummaryQueryData","UpdateAvailabilityData","VidCommonQueryData","VidCommonRange","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error","as_error","as_error_source","as_error_source","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","backtrace","block_hash","block_hash","block_hash","block_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","by_hash","by_hash","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","common","compare","compare","context","data","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enumerate","enumerate","enumerate","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fail","fail","fail","fetch_timeout","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","genesis","genesis","genesis","genesis","get_block","get_block_range","get_block_with_transaction","get_hash","get_hash","get_leaf","get_leaf_range","get_payload","get_payload_range","get_vid_common","get_vid_common_range","group_id","hash","hash","hash","hash","hash","hash","hash","header","header","header","header","header","header","header","height","height","height","height","height","height","height","in_current_span","in_current_span","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_block","insert_leaf","insert_vid","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_future","is_empty","is_empty","is_empty","iter","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","leaf","leaf","len","len","map","message","metadata","new","new","new","nth","nth","nth_transaction","nth_transaction","nth_transaction_with_proof","nth_transaction_with_proof","num_transactions","num_transactions","partial_cmp","partial_cmp","payload","payload_hash","payload_hash","payload_hash","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","proof","proof","qc","qc_leaf","resolve","resource","resource","resource","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","size","size","source","source","status","status","subscribe_blocks","subscribe_blocks","subscribe_leaves","subscribe_leaves","subscribe_payloads","subscribe_payloads","subscribe_vid_common","subscribe_vid_common","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","transaction","transaction","transaction","transaction","transaction_by_hash","transaction_by_hash","transaction_by_hash","transaction_by_hash_with_proof","transaction_by_hash_with_proof","transaction_with_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_context","with_timeout","height","index","message","resource","resource","resource","source","status","AvailabilityProvider","Error","ExtensibleDataSource","FetchingDataSource","FileSystemDataSource","MetricsDataSource","SqlDataSource","UpdateDataSource","VersionedDataSource","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","as_mut","as_ref","availability_tests","block_height","block_height","block_height","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commit","connect","connect","connect","count_transactions","create","create","create","create","create_with_store","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fetching","fmt","fmt","from","from","get_block","get_block_range","get_block_with_transaction","get_header_window","get_leaf","get_leaf_range","get_path","get_payload","get_payload_range","get_vid_common","get_vid_common_range","handle_event","handle_event","handle_event","init","init","inner","inner_mut","insert_block","insert_leaf","insert_merkle_nodes","insert_vid","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layout_raw","layout_raw","metrics","metrics","new","node_tests","open","open_with_store","payload_size","persistence_tests","pointer_metadata","pointer_metadata","populate_metrics","populate_metrics","reset","reset","reset","revert","revert","skip_version","sql","status_tests","storage","sync_status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","update","vid_share","vzip","vzip","test_range","test_update","AvailabilityProvider","Builder","FetchingDataSource","Pruner","StorageReadGuard","StorageWriteGuard","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_height","block_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone_into","clone_into","commit","connect","count_transactions","create","create_with_store","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","disable_proactive_fetching","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","get_block","get_block_range","get_block_with_transaction","get_header_window","get_leaf","get_leaf_range","get_path","get_payload","get_payload_range","get_vid_common","get_vid_common_range","init","init","init","init","init","insert_block","insert_leaf","insert_merkle_nodes","insert_vid","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","metrics","new","open","open_with_store","payload_size","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","populate_metrics","revert","skip_version","storage","storage_mut","sync_status","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","vid_share","vzip","vzip","vzip","vzip","vzip","with_major_scan_interval","with_minor_scan_interval","with_proactive_range_chunk_size","with_range_chunk_size","with_retry_delay","test_counters","test_sync_status","test_timestamp_window","test_vid_monotonicity","test_vid_recovery","test_vid_shares","test_reset","test_revert","Builder","Config","Error","Migration","Query","SqlDataSource","Transaction","client","connect","connect","create","handle_event","include_migrations","postgres","reset","testing","transaction","TmpDb","test_metrics","AvailabilityStorage","FileSystemStorage","NoStorage","SqlStorage","fs","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_vid_common","get_vid_common_range","no_storage","pruning","sql","FileSystemStorage","as_any","as_any_mut","block_height","borrow","borrow_mut","commit","count_transactions","create","create_with_store","deref","deref_mut","deserialize","drop","fmt","from","get_block","get_block_range","get_block_with_transaction","get_header","get_header_window","get_leaf","get_leaf_range","get_payload","get_payload_range","get_vid_common","get_vid_common_range","init","insert_block","insert_leaf","insert_vid","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","layout_raw","open","open_with_store","payload_size","pointer_metadata","revert","skip_version","sync_status","try_from","try_into","type_id","type_name","vid_share","vzip","NoStorage","__clone_box","__clone_box","as_any","as_any_mut","block_height","borrow","borrow_mut","clone","clone_into","commit","count_transactions","default","deref","deref_mut","deserialize","drop","fmt","from","get_block","get_block_range","get_block_with_transaction","get_header","get_header_window","get_leaf","get_leaf_range","get_payload","get_payload_range","get_vid_common","get_vid_common_range","init","insert_block","insert_leaf","insert_vid","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","layout_raw","payload_size","pointer_metadata","revert","sync_status","testing","to_owned","try_from","try_into","type_id","type_name","vid_share","vzip","DataSource","NoStorage","NoStorage","Sql","Sql","Storage","as_any","as_any","as_any_mut","as_any_mut","block_height","block_height","borrow","borrow","borrow_mut","borrow_mut","commit","connect","count_transactions","create","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","from","from","get_block","get_block_range","get_block_with_transaction","get_header_window","get_leaf","get_leaf_range","get_payload","get_payload_range","get_vid_common","get_vid_common_range","handle_event","init","init","insert_block","insert_leaf","insert_vid","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layout_raw","layout_raw","metrics","payload_size","pointer_metadata","pointer_metadata","populate_metrics","reset","revert","setup","sync_status","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","vid_share","vzip","vzip","fetch_from_port","Error","PruneStorage","PrunedHeightStorage","PrunerCfg","PrunerConfig","__clone_box","__clone_box","as_any","as_any_mut","batch_size","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","get_disk_usage","get_pruning_config","init","interval","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","layout_raw","load_pruned_height","max_usage","minimum_retention","new","pointer_metadata","prune","pruning_threshold","save_pruned_height","set_pruning_config","target_retention","to_owned","try_from","try_into","type_id","type_name","validate","vzip","with_batch_size","with_interval","with_max_usage","with_minimum_retention","with_pruning_threshold","with_target_retention","Config","Error","LTree","Migration","Query","SqlStorage","Transaction","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","accepts","accepts","applied_on","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","backtrace","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_to_sql","builder","chain","checksum","client","client","client","clone","clone","clone","clone_into","clone_into","clone_into","cmp","commit","compare","connect","connect","context","count_transactions","database","default","default","default_migrations","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast_mut","downcast_ref","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","execute","execute_many","execute_many_with_retries","execute_one","execute_one_with_retries","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_sql","from_str","get_block","get_block_range","get_block_with_transaction","get_disk_usage","get_header","get_header_window","get_leaf","get_leaf_range","get_path","get_payload","get_payload_range","get_pruning_config","get_vid_common","get_vid_common_range","header","header","host","include_dir","include_migrations","init","init","init","init","init","init","insert_block","insert_leaf","insert_merkle_nodes","insert_vid","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","load_pruned_height","migrations","msg","name","new","no_migrations","partial_cmp","password","payload_size","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","port","postgres","prefix","prune","pruner_cfg","query","query_one","query_one_static","query_opt","query_opt_static","query_static","reset_schema","revert","root_cause","save_pruned_height","schema","serialize","set_pruning_config","sql","sync_status","testing","tls","to_owned","to_owned","to_owned","to_sql","to_sql_checked","to_string","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","unapplied","upsert","user","version","vid_share","vzip","vzip","vzip","vzip","vzip","vzip","TestMerkleTreeMigration","TmpDb","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","fmt","from","from","host","init","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layout_raw","layout_raw","pointer_metadata","pointer_metadata","port","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","vzip","vzip","Callback","Fetcher","LocalCallback","Provider","Request","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","layout_raw","pointer_metadata","provider","request","run","run","spawn_fetch","to_owned","try_from","try_into","type_id","type_name","vzip","with_retry_delay","AnyProvider","NoFetching","Provider","QueryServiceProvider","TestProvider","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","fail","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layout_raw","layout_raw","layout_raw","layout_raw","new","new","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unblock","unfail","vzip","vzip","vzip","vzip","with_block_provider","with_leaf_provider","with_provider","with_vid_common_provider","LeafRequest","PayloadRequest","Request","Response","VidCommonRequest","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layout_raw","layout_raw","layout_raw","pointer_metadata","pointer_metadata","pointer_metadata","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","vzip","vzip","vzip","Arity","Commit","Commit","Custom","Digest","Entry","Error","Index","Key","MerklizedState","MerklizedStateDataSource","Options","Query","Request","Snapshot","T","UpdateStateData","UpdateStateStorage","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone_into","cmp","compare","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","extensions","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","get_path","group_id","hash","header","header","header_state_commitment_field","in_current_span","init","init","init","insert_merkle_nodes","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layout_raw","layout_raw","layout_raw","partial_cmp","pointer_metadata","pointer_metadata","pointer_metadata","serialize","source","state_type","status","to_owned","to_string","to_string","tree_height","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","update_from_arg_matches","update_from_arg_matches_mut","update_storage","vzip","vzip","vzip","message","source","source","status","Counter","Gauge","Histogram","Label","MetricsError","NoSuchMetric","NoSuchSubgroup","Prometheus","PrometheusMetrics","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_point","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error","as_error_source","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_counter","create_gauge","create_histogram","create_label","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","export","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get","get","get_counter","get_gauge","get_histogram","get_label","get_subgroup","header","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","mean","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","sample_count","set","set","source","subgroup","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","update","vzip","vzip","vzip","vzip","vzip","vzip","label","namespace","path","source","BlockHash","BlockId","Custom","CustomSnafu","Error","Hash","Height","NodeDataSource","Options","Query","QuerySnafu","QueryVid","QueryVidSnafu","QueryWindow","QueryWindowSnafu","Request","RequestSnafu","SyncStatus","Time","TimeWindowQueryData","WindowStart","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","block","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","count_transactions","default","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","fully_synced","get_hash","get_header_window","group_id","hash","header","in_current_span","init","init","init","init","init","init","init","init","init","init","internal","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","is_fully_synced","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","layout_raw","message","missing_blocks","missing_leaves","missing_vid_common","missing_vid_shares","next","partial_cmp","payload_size","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","prev","pruned_height","serialize","serialize","serialize","source","start","status","status","sync_status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","update_from_arg_matches","update_from_arg_matches_mut","vid_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","window","block","end","message","source","source","source","source","start","status","Error","Internal","MempoolQueryData","Options","Request","StatusDataSource","UpdateStatusData","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","cmp","compare","consensus_metrics","consensus_metrics","default","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","elapsed_time_since_last_decide","elapsed_time_since_last_decide","eq","equivalent","equivalent","equivalent","equivalent","extensions","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","group_id","hash","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layout_raw","layout_raw","layout_raw","memory_footprint","mempool_info","mempool_info","metrics","partial_cmp","pointer_metadata","pointer_metadata","pointer_metadata","populate_metrics","serialize","serialize","source","status","success_rate","success_rate","to_owned","to_owned","to_string","transaction_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","reason","source","consensus","mocks","setup_test","sleep","DataSourceLifeCycle","MockDataSource","MockNetwork","NUM_NODES","Storage","TestableDataSource","as_any","as_any_mut","borrow","borrow_mut","connect","create","data_source","data_source_index","deref","deref_mut","deserialize","drop","drop","from","handle","handle_event","init","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","layout_raw","num_nodes","pointer_metadata","proposer","reset","setup","shut_down","spawn","start","storage","submit_transaction","try_from","try_into","type_id","type_name","vzip","MockHeader","MockMembership","MockMerkleTree","MockNetwork","MockNodeImpl","MockPayload","MockQuorumProposal","MockStorage","MockTransaction","MockTypes","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","block_header","block_number","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","get_hash","get_hash","hash","hash","header_state_commitment_field","height","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","iter","justify_qc","layout_raw","layout_raw","len","mock_transaction","partial_cmp","partial_cmp","payload_commitment","pointer_metadata","pointer_metadata","proposer_id","serialize","serialize","should_return_err","state_type","timeout_certificate","timestamp","timestamp","to_owned","to_owned","transaction_with_proof","transactions","tree_height","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","upgrade_certificate","view_number","view_sync_certificate","vzip","vzip","HeightIndexed","height"],"q":[[0,"hotshot_query_service"],[339,"hotshot_query_service::Error"],[345,"hotshot_query_service::QueryError"],[346,"hotshot_query_service::availability"],[1194,"hotshot_query_service::availability::Error"],[1202,"hotshot_query_service::data_source"],[1332,"hotshot_query_service::data_source::availability_tests"],[1334,"hotshot_query_service::data_source::fetching"],[1520,"hotshot_query_service::data_source::node_tests"],[1526,"hotshot_query_service::data_source::persistence_tests"],[1528,"hotshot_query_service::data_source::sql"],[1545,"hotshot_query_service::data_source::sql::testing"],[1546,"hotshot_query_service::data_source::status_tests"],[1547,"hotshot_query_service::data_source::storage"],[1565,"hotshot_query_service::data_source::storage::fs"],[1617,"hotshot_query_service::data_source::storage::no_storage"],[1671,"hotshot_query_service::data_source::storage::no_storage::testing"],[1753,"hotshot_query_service::data_source::storage::no_storage::testing::Storage"],[1754,"hotshot_query_service::data_source::storage::pruning"],[1810,"hotshot_query_service::data_source::storage::sql"],[2096,"hotshot_query_service::data_source::storage::sql::testing"],[2152,"hotshot_query_service::fetching"],[2194,"hotshot_query_service::fetching::provider"],[2340,"hotshot_query_service::fetching::request"],[2457,"hotshot_query_service::merklized_state"],[2601,"hotshot_query_service::merklized_state::Error"],[2605,"hotshot_query_service::metrics"],[2824,"hotshot_query_service::metrics::MetricsError"],[2828,"hotshot_query_service::node"],[3222,"hotshot_query_service::node::Error"],[3231,"hotshot_query_service::status"],[3375,"hotshot_query_service::status::Error"],[3377,"hotshot_query_service::testing"],[3381,"hotshot_query_service::testing::consensus"],[3428,"hotshot_query_service::testing::mocks"],[3545,"hotshot_query_service::types"],[3547,"dyn_clone::sealed"],[3548,"dyn_clone::sealed"],[3549,"core::error"],[3550,"clap_builder::builder::command"],[3551,"std::backtrace"],[3552,"core::option"],[3553,"alloc::string"],[3554,"core::convert"],[3555,"tide_disco::status"],[3556,"core::clone"],[3557,"hotshot_types::traits::node_implementation"],[3558,"commit"],[3559,"commit"],[3560,"rkyv::with"],[3561,"core::result"],[3562,"serde::de"],[3563,"hotshot_types::data"],[3564,"core::fmt"],[3565,"core::fmt"],[3566,"clap_builder"],[3567,"core::hash"],[3568,"core::marker"],[3569,"core::hash"],[3570,"hotshot_types::simple_certificate"],[3571,"hotshot_types::simple_certificate"],[3572,"core::hash"],[3573,"core::fmt"],[3574,"alloc::sync"],[3575,"alloc::rc"],[3576,"core::alloc::layout"],[3577,"core::alloc::layout"],[3578,"hotshot_types::traits::node_implementation"],[3579,"serde::ser"],[3580,"serde::ser"],[3581,"core::cmp"],[3582,"core::cmp"],[3583,"snafu"],[3584,"tide_disco::api"],[3585,"tide_disco::request"],[3586,"core::future::future"],[3587,"core::pin"],[3588,"futures_core::stream"],[3589,"core::marker"],[3590,"core::ops::function"],[3591,"hotshot_types::simple_certificate"],[3592,"std::path"],[3593,"anyhow"],[3594,"atomic_store::atomic_store"],[3595,"hotshot_types::event"],[3596,"core::default"],[3597,"jf_primitives::merkle_tree::internal"],[3598,"alloc::vec"],[3599,"hotshot_types::traits::metrics"],[3600,"async_lock::rwlock"],[3601,"async_lock::rwlock"],[3602,"postgres_types"],[3603,"time::offset_date_time"],[3604,"postgres_types"],[3605,"core::iter::traits::collect"],[3606,"tokio_postgres::config"],[3607,"core::iter::traits::double_ended"],[3608,"refinery_core::runner"],[3609,"bytes::bytes_mut"],[3610,"postgres_types"],[3611,"postgres_types"],[3612,"hotshot_types::traits::metrics"],[3613,"serde::de"]],"d":["","","Contains the error value","","There was an error while trying to fetch the requested …","","This is the consensus-internal analogous concept to a …","","","The requested resource exists but is not currently …","SNAFU context selector for the <code>QueryError::Missing</code> variant","","The requested resource does not exist or is not known to …","SNAFU context selector for the <code>QueryError::NotFound</code> variant","Contains the success value","","","","","A reference to a <code>T</code> which can be resolved into a whole <code>T</code>.","","SNAFU context selector for the <code>QueryError::Error</code> variant","","Item within a <code>Payload</code>.","VID commitment type","VID common type","VID share type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Queries for HotShot chain state.","","","","Block header.","Optional block payload.","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","Get a commitment to the underlying object.","","","Persistent storage and sources of data consumed by APIs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Fetching missing data from remote providers.","Fill this leaf with the block payload.","Fill this leaf with the block payload, without checking …","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create a new leaf from its components.","The block header contained in this leaf.","Optional block payload.","","Height of this leaf in the chain.","The QC linking this leaf to its parent in the chain.","Commitment to this leaf’s parent.","A commitment to the block payload contained in this leaf.","Identity of the network participant who proposed this leaf.","Time when this leaf was created.","","","","","","","","Embed migrations from the given directory into the current …","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Per spec, justification","","","","","","","","Api for querying merklized state","","","A node’s view of a HotShot chain","","The hash of the parent <code>Leaf</code> So we can ask if it extends","","","","","","","","","the proposer id of the leaf","Run an instance of the HotShot Query service with no …","","","","","","Queries for node-specific state and uncommitted data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the underlying object if it is available without …","","","","","","","","","","","","","","","","Common functionality provided by types used in this crate.","","","CurView from leader when proposing leaf","","","","","","","","","","","","","","","An interface for querying a HotShot blockchain.","A block hash is the hash of the block header.","","","","","","SNAFU context selector for the <code>Error::Custom</code> variant","","","An in-progress request to fetch some data.","","SNAFU context selector for the <code>Error::FetchBlock</code> variant","","SNAFU context selector for the <code>Error::FetchLeaf</code> variant","","SNAFU context selector for the <code>Error::FetchTransaction</code> …","","","A proof that a certain transaction exists in the block.","","","SNAFU context selector for the …","Enumerate the transactions in this block.","","","","","","","","","","","","","A block payload whose contents (e.g. individual …","","","SNAFU context selector for the <code>Error::Request</code> variant","","","","","An index which can be used to efficiently retrieve a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Get the index of the transaction with a given hash, if it …","Get the index of the transaction with a given hash, if it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>Fetch</code> to a <code>Result</code> with the provided error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumerate the transactions in the block with their indices.","Enumerate the transactions in the block with their indices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Timeout for failing requests due to missing data.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the block containing a transaction with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this block is empty of transactions.","Whether this block is empty of transactions.","","List the transaction indices in the block.","","","","","","","","","","","","","","","","","","","","","","The number of transactions in the block.","","Transform the result of this fetch.","","","Collect information about a <code>Leaf</code>.","","","Get the index of the <code>nth</code> transaction.","Get the index of the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction, along with an inclusion proof.","Get the <code>nth</code> transaction, along with an inclusion proof.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an inclusion proof for a transaction with a given …","Get an inclusion proof for a transaction with a given …","","","Wait for the data to become available, if it is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a transaction by its block-specific index.","Get a transaction by its block-specific index.","","","Get the transaction with a given hash, if it is in the …","Get the transaction with a given hash, if it is in the …","","Get the transaction with a given hash, if it is in the …","Get the transaction with a given hash, if it is in the …","Get a transaction by its block-specific index, along with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the requested data if it is available immediately.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>Fetch</code> to a <code>Result</code> with the provided error …","Wait for the requested data to become available, but only …","","","","","","","","","","","Wrapper to add extensibility to an existing data source.","","A data source for the APIs provided in this crate, backed …","A minimal data source for the status API provided in this …","","An extension trait for types which implement the update …","A data source with an atomic transaction-based …","","","","","","","","","","","Generic tests we can instantiate for all the availability …","","","","","","","","","","","","Atomically commit to all outstanding modifications to the …","","","","","","Create a new FileSystemDataSource with storage at <code>path</code>.","","","","Create a new FileSystemDataSource using a persistent …","","","","","","","","","","Asynchronous retrieval of missing data.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Access the underlying data source.","Mutably access the underlying data source.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Generic tests we can instantiate for all the node data …","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent …","","Generic tests we can instantiate for any data source with …","","","","","","","","Erase all oustanding modifications to the data.","","Advance the version of the persistent store without …","","Generic tests we can instantiate for all the status data …","Persistent storage for data sources.","","","","","","","","","","","","Update query state based on a new consensus event.","","","","","","A provider which can be used as a fetcher by the …","Builder for <code>FetchingDataSource</code> with configuration.","The most basic kind of data source.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a <code>FetchingDataSource</code> with these options.","Build a <code>FetchingDataSource</code> with the given <code>storage</code> and …","","","","","","Connect to a remote database.","","Create a new FileSystemDataSource with storage at <code>path</code>.","Create a new FileSystemDataSource using a persistent …","","","","","","","","","","","","","","","","","","","Run without proactive fetching.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new builder with the given storage and fetcher …","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent …","","","","","","","","","Advance the version of the persistent store without …","Obtain direct, read-only access to the underlying local …","Obtain direct, mutable access the underlying local storage.","","","","Access the transaction which is accumulating all …","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the interval (denominated in minor scans) between …","Set the time interval between minor proactive fetching …","Set the number of items to process at a time when scanning …","Set the number of items to process at a time when loading …","Set the maximum delay between retries of fetches.","","","","","","","","","","","The <code>Error</code> type, a wrapper around a dynamic error type.","Represents a schema migration to be run on the database, …","","A data source for the APIs provided in this crate, backed …","","","Connect to a remote database.","","","","Embed migrations from the given directory into the current …","","","","Access the transaction which is accumulating all …","","","Persistent storage for a HotShot blockchain.","","","","","","","","","","","","","","","","","","Storage for the APIs provided in this crate, backed by a …","","","","","","","","Create a new FileSystemStorage with storage at <code>path</code>.","Create a new FileSystemStorage using a persistent storage …","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Open an existing FileSystemStorage from storage at <code>path</code>.","Open an existing FileSystemStorage using a persistent …","","","","Advance the version of the persistent store without …","","","","","","","","Mock storage implementation which doesn’t actually store …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Either Postgres or no storage.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the block containing a transaction with the given …","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of blocks to remove in a single pruning operation.","","","","","","","","","","","Returns the argument unchanged.","","","","Pruning interval","Calls <code>U::from(self)</code>.","","","","","","","","","Maximum disk usage (in basis points).","Minimum data retention period","","","","Disk space threshold (in bytes).","","","Target data retention period","","","","","","","","","","","","","","Postgres client config.","The <code>Error</code> type, a wrapper around a dynamic error type.","LTree SQL data type","Represents a schema migration to be run on the database, …","","Storage for the APIs provided in this crate, backed by a …","An atomic SQL transaction.","","","","","","","","","Get the timestamp from when the Migration was applied. <code>None</code>…","","","","","","","","","","","","","","","Get the backtrace for this Error.","","","","","","","","","","","","","","","Connect to the database, setting options on the underlying …","An iterator of the chain of source errors contained by …","Get the Migration checksum. Checksum is formed from the …","","","","","","","","","","","","","Connect to the database with this config.","Connect to a remote database.","Wrap the error value with additional context.","","Set the name of the database to connect to.","","","The migrations requied to build the default schema for …","","","","","","","","","","","","","","","","","","","","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","","","","","","","","","","","","Execute a statement against the underlying database.","Execute a statement that is expected to modify at least …","Execute a statement that is expected to modify at least …","Execute a statement that is expected to modify exactly one …","Execute a statement that is expected to modify exactly one …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Retreives a Merkle path from the database","","","","","","","","Set the hostname of the database server.","Embed the contents of a directory in your crate.","Embed migrations from the given directory into the current …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","","","","","","","","Add custom migrations to run when connecting to the …","Create a new error object from a printable error message.","Get the Migration Name","Create a new error object from any error type.","Skip all migrations when connecting to the database.","","Set a password for connecting to the database.","","","","","","","","Set the port on which to connect to the database.","","Get the Prefix","","","","Query the underlying SQL database, returning exactly one …","Query the underlying SQL database with no parameters, …","Query the underlying SQL database, returning zero or one …","Query the underlying SQL database with no parameters, …","Query the underlying SQL database with no parameters.","Reset the schema on connection.","","The lowest level cause of this error — this error’s …","","Set the name of the schema to use for queries.","","","","","","Use TLS for an encrypted connection to the database.","","","","","","","","Access the transaction which is accumulating all …","","","","","","","","","","","","","","","","","","","","","","","","","Create an unapplied migration, name and version are parsed …","","Set the DB user to connect as.","Get the Migration version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A callback to process the result of a request.","Management of concurrent requests to fetch resources.","A callback to process the result of a request.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Asynchronous fetching from external data availability …","Requests for fetching resources.","","","Fetch a resource, if it is not already being fetched.","","","","","","","","Adaptor combining multiple data availability providers.","Trivial <code>Provider</code> where fetching always fails.","A provider which is able to satisfy requests for data of …","Data availability provider backed by another instance of …","Adaptor to add test-only functionality to an existing …","","","","","","","","","","","","","","","","","Delay fetch requests until <code>unblock</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cause subsequent requests to fail.","Fetch a resource.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow blocked fetch requests to proceed.","Stop requests from failing as a result of a previous call …","","","","","Add a sub-provider which fetches blocks.","Add a sub-provider which fetches leaves.","Add a sub-provider which fetches both blocks and leaves.","Add a sub-provider which fetches VID common data.","A request for a leaf with a given height.","A request for a payload with a given commitment.","A request for a resource.","The type of resource that will be returned as a successful …","A request for VID common data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This trait should be implemented by the MerkleTree that …","This trait defines methods that a data source should …","","","","","","This trait defines methods for updating the storage with …","This trait should be implemented by types that represent …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Retrieves the field in the header containing the Merkle …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the name of the state being queried.","","","","","Get the height of the tree","","","","","","","","","","","","","","","","","","","","","","","A Counter metric.","A Gauge metric.","A Histogram metric.","A Label metric.","","","","","A Prometheus-based implementation of a Metrics registry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a counter in this sub-group by name.","Get a gauge in this sub-group by name.","Get a histogram in this sub-group by name.","Get a label in this sub-group by name.","Get a (possibly nested) subgroup of this group by its path.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::Custom</code> variant","","","","","","","SNAFU context selector for the <code>Error::Query</code> variant","","SNAFU context selector for the <code>Error::QueryVid</code> variant","","SNAFU context selector for the <code>Error::QueryWindow</code> variant","","SNAFU context selector for the <code>Error::Request</code> variant","","","Response to a <code>/:resource/window</code> query.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","The block height of the block that starts the window.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codedditional API specification files to merge with …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Backing storage for the data source.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Setup runs after setting up the network but before …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The block header to append","Block number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Per spec, justification","","","","","","","VID commitment to the payload.","","","the propser id","","","<code>should_return_err</code> is a testing utility to validate …","","Possible timeout certificate.  Only present if the …","","Timestamp when this header was created.","","","","List of transactions.","","","","","","","","","","Possible upgrade certificate, which the leader may …","CurView from leader when proposing leaf","Possible view sync certificate. Only present if the …","","","Types which have a notion of “height” within a chain.",""],"i":[7,7,169,0,10,0,0,7,0,10,0,7,10,0,169,0,0,0,0,0,0,0,7,0,0,0,0,17,17,7,7,11,11,12,12,13,13,10,10,17,7,11,12,13,10,25,17,7,11,12,13,10,25,7,10,7,7,10,10,25,25,0,25,7,10,17,17,17,7,11,12,13,10,25,17,7,11,12,13,10,25,11,12,13,7,7,10,17,7,11,12,13,10,17,7,11,12,13,10,17,21,17,17,0,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,7,10,17,17,7,7,11,12,13,10,10,25,17,7,11,12,13,10,25,17,17,17,17,17,11,12,13,0,17,17,17,17,7,7,11,12,13,10,10,17,7,7,7,7,7,7,11,12,13,10,25,25,25,17,17,17,17,17,17,17,17,17,17,25,17,17,7,10,7,10,0,17,7,11,12,13,10,25,0,0,0,0,0,7,17,7,11,12,13,10,25,17,17,7,7,11,11,12,12,13,13,10,10,25,25,17,17,7,7,11,11,12,12,13,13,10,10,25,25,17,17,7,7,11,11,12,12,13,13,10,10,25,25,11,12,13,17,17,7,11,12,13,10,25,0,13,0,0,25,17,17,7,11,12,13,10,25,25,17,0,17,7,10,7,10,0,7,10,25,0,17,7,11,12,13,10,17,7,10,17,7,11,12,13,10,25,17,7,11,12,13,10,25,21,17,17,7,11,12,13,10,25,17,7,11,12,13,10,25,0,25,25,17,17,7,11,12,13,10,25,250,251,252,253,254,250,255,0,0,0,0,61,0,39,0,0,127,0,39,0,39,0,39,0,92,93,85,0,39,0,85,0,0,0,61,92,93,0,93,0,61,100,0,0,100,39,0,0,0,0,0,85,0,0,0,0,61,92,92,93,93,72,72,71,71,94,94,74,74,75,75,76,76,95,95,96,96,97,97,77,77,78,78,79,79,80,80,81,81,39,39,106,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,71,39,71,71,39,39,106,106,71,39,72,74,75,76,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,77,78,79,80,81,85,85,71,39,92,93,72,71,94,74,75,76,95,96,97,77,78,79,80,81,39,92,93,72,71,94,74,75,76,95,96,97,77,78,79,80,81,39,92,93,75,92,93,100,74,106,0,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,71,39,100,92,93,72,72,71,94,94,74,74,75,75,76,76,95,95,96,96,106,97,77,78,79,80,81,39,39,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,85,85,94,92,93,72,94,74,75,76,95,96,92,92,92,92,93,93,93,93,72,72,72,72,94,94,94,94,74,74,74,74,75,75,75,75,76,76,76,76,95,95,95,95,96,96,96,96,106,77,78,79,80,81,106,92,92,93,93,72,71,71,94,74,75,76,95,96,97,77,78,79,80,81,39,39,100,92,92,92,93,93,93,72,71,94,74,74,75,76,95,95,96,106,97,77,78,79,80,81,39,39,39,106,106,72,94,74,75,61,61,61,92,93,61,61,61,61,61,61,106,92,93,72,94,74,76,95,92,93,72,71,94,95,39,72,94,74,75,76,95,80,71,39,80,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,127,127,127,39,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,100,100,92,92,93,93,72,72,71,71,94,94,74,74,75,75,76,76,95,95,96,96,106,106,97,97,77,77,78,78,79,79,80,80,81,81,39,39,92,92,93,93,72,72,71,71,94,94,74,74,75,75,76,76,95,95,96,96,106,106,97,97,77,77,78,78,79,79,80,80,81,81,39,39,100,100,92,92,93,93,72,72,71,71,94,94,74,74,75,75,76,76,95,95,96,96,106,106,97,97,77,77,78,78,79,79,80,80,81,81,39,39,97,77,78,79,80,81,100,85,85,94,85,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,72,71,85,94,100,81,94,72,94,75,85,85,85,85,85,85,94,95,92,93,94,72,94,75,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,85,85,72,71,100,77,78,79,72,94,74,75,76,95,96,39,94,74,95,71,39,39,81,61,61,61,61,61,61,61,61,133,92,93,72,71,94,74,75,76,95,96,97,77,78,79,80,81,39,92,93,71,39,85,85,94,76,85,85,94,85,85,85,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,100,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,106,106,100,92,93,72,71,94,74,75,76,95,96,106,97,77,78,79,80,81,39,100,100,256,256,257,258,259,260,261,257,0,65,0,0,0,0,0,0,0,135,135,136,136,135,136,135,136,135,135,0,135,135,136,135,136,135,136,135,136,135,136,65,135,138,135,136,135,138,138,135,136,138,136,135,136,135,136,135,136,135,136,0,135,136,135,136,135,135,135,135,135,135,135,135,135,135,135,138,135,136,135,136,135,135,135,135,135,135,135,136,135,135,136,136,135,135,136,136,135,135,136,136,135,136,135,136,135,0,138,138,135,0,135,136,135,136,138,135,136,65,135,138,0,0,0,135,135,136,135,136,135,136,135,136,135,136,64,135,135,136,0,0,0,0,0,0,0,0,155,155,158,158,156,155,158,163,164,156,155,158,163,164,155,155,156,155,158,163,164,156,155,158,163,164,156,155,155,158,155,158,155,155,155,155,155,156,155,158,163,163,164,164,156,155,158,163,164,164,156,155,158,163,164,156,156,155,158,163,164,155,158,156,155,158,163,163,164,164,155,155,155,155,155,155,155,155,155,155,155,156,155,158,163,164,155,155,155,155,156,155,158,163,164,156,156,155,155,158,158,163,163,164,164,156,156,155,155,158,158,163,163,164,164,156,156,155,155,158,158,163,163,164,164,156,155,158,163,164,155,156,155,155,155,156,155,158,163,164,155,155,155,155,155,155,155,158,155,156,155,158,163,164,156,155,158,163,164,156,155,158,163,164,156,155,158,163,164,155,156,155,158,163,164,156,156,156,156,156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,170,170,170,0,0,170,0,170,0,0,0,0,0,0,0,157,157,157,157,157,157,157,157,157,157,0,0,0,0,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,0,172,172,172,172,172,172,172,0,262,173,262,173,0,262,173,262,173,173,173,262,173,262,173,173,173,173,173,262,173,262,173,262,173,262,173,262,173,173,173,173,173,173,173,173,173,173,173,173,262,173,173,173,173,262,173,262,262,173,173,262,262,173,173,262,262,173,173,262,173,173,173,262,173,173,173,173,173,173,262,173,262,173,262,173,262,173,173,262,173,263,178,0,0,0,0,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,176,177,175,175,175,175,175,175,175,175,175,175,178,175,175,175,175,176,175,178,177,175,175,175,175,175,175,175,175,175,175,175,175,175,175,0,0,0,0,0,0,0,181,181,159,159,186,186,186,186,181,161,181,168,159,167,186,161,181,168,159,167,186,161,161,161,167,161,181,168,159,167,186,161,181,168,159,167,186,186,159,161,181,185,168,167,181,159,186,181,159,186,181,167,181,159,167,161,167,159,159,186,0,161,161,181,168,159,167,186,161,161,181,168,159,167,186,161,181,168,159,167,186,186,161,161,161,161,161,181,168,159,167,186,181,181,181,181,181,168,168,168,168,168,161,161,181,181,159,167,186,161,161,161,181,168,159,159,167,186,186,186,159,167,167,167,167,167,167,167,167,167,167,167,167,167,167,161,181,159,0,0,161,181,168,159,167,186,167,167,167,167,161,181,168,159,167,186,161,161,181,181,168,168,159,159,167,167,186,186,161,161,181,181,168,168,159,159,167,167,186,186,161,161,181,181,168,168,159,159,167,167,186,186,161,161,181,168,159,167,186,167,159,161,181,161,159,181,159,167,161,181,168,159,167,186,159,0,181,167,159,185,185,185,185,185,185,159,167,161,167,159,186,167,181,167,0,159,181,159,186,186,186,161,181,167,161,181,168,159,167,186,161,181,168,159,167,186,161,181,168,159,167,186,161,181,168,159,167,186,181,168,159,181,167,161,181,168,159,167,186,0,0,264,201,264,201,264,201,264,201,201,264,201,264,201,264,201,264,201,201,201,264,201,201,264,201,201,264,201,264,264,201,201,264,264,201,201,264,264,201,201,264,201,264,201,201,264,201,264,201,264,201,264,201,264,201,0,0,0,0,0,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,0,0,203,204,202,202,202,202,202,202,202,202,0,0,0,0,0,208,208,209,209,207,207,210,210,208,209,207,210,208,209,207,210,207,208,209,207,210,208,209,207,210,208,209,207,210,208,209,207,210,208,210,208,209,207,210,208,209,207,210,208,209,207,210,208,209,207,210,207,206,208,208,208,209,209,209,207,210,208,209,207,210,208,209,207,210,208,209,207,210,208,209,207,210,208,208,209,209,207,207,210,210,208,208,209,209,207,207,210,210,208,208,209,209,207,207,210,210,208,209,207,210,209,207,208,209,207,210,208,209,207,210,208,209,207,210,208,209,207,210,208,209,207,210,208,209,207,210,207,207,208,209,207,210,208,208,208,208,0,0,0,205,0,212,212,213,213,211,211,212,213,211,212,213,211,212,213,211,212,213,211,212,213,211,212,213,211,212,213,211,212,213,211,212,213,211,212,213,211,212,213,211,212,212,212,212,213,213,213,213,211,211,211,211,212,213,211,212,213,211,211,212,213,211,212,213,211,212,213,211,212,213,211,212,212,213,213,211,211,212,212,213,213,211,211,212,212,213,213,211,211,212,213,211,212,213,211,212,213,211,212,213,211,212,213,211,212,213,211,212,213,211,212,213,211,144,143,144,40,144,144,0,143,144,0,0,0,40,40,0,144,0,0,40,40,215,143,215,40,143,215,40,40,40,40,215,215,40,143,215,40,143,215,40,40,40,40,143,143,215,0,143,215,40,143,215,40,40,143,215,40,40,143,215,40,143,143,143,143,143,215,143,143,40,40,143,215,40,40,40,40,215,215,143,145,215,143,143,40,144,40,143,215,40,152,143,215,40,143,143,215,215,40,40,143,143,215,215,40,40,143,143,215,215,40,40,143,215,40,143,143,215,40,40,40,144,40,40,143,40,144,143,215,40,143,215,40,143,215,40,143,215,40,215,215,216,143,215,40,265,266,267,265,0,0,0,0,0,220,220,220,0,153,153,217,217,221,221,218,218,222,222,217,218,220,153,217,221,218,222,220,153,217,221,218,222,220,220,220,220,220,153,217,221,218,222,220,153,217,221,218,222,220,153,217,221,218,222,153,217,221,218,222,153,153,153,153,153,220,153,217,221,218,222,220,153,217,221,218,222,220,220,153,217,221,218,222,220,153,217,221,218,222,153,220,220,153,217,221,218,222,220,220,153,217,221,218,222,217,221,222,153,153,153,153,153,220,220,220,153,217,221,218,222,220,153,217,221,218,222,220,220,153,153,217,217,221,221,218,218,222,222,220,220,153,153,217,217,221,221,218,218,222,222,220,220,153,153,217,217,221,221,218,218,222,222,220,153,217,221,218,222,218,220,153,217,221,218,222,218,221,222,220,153,218,153,217,221,218,222,220,220,153,217,221,218,222,220,153,217,221,218,222,220,153,217,221,218,222,220,153,217,221,218,222,221,220,153,217,221,218,222,268,268,269,270,0,0,38,0,0,142,142,0,0,38,0,38,0,38,0,38,0,0,142,0,0,142,142,230,230,231,231,232,232,233,233,234,234,235,235,229,229,38,38,236,142,230,231,236,232,233,234,235,229,38,142,230,231,236,232,233,234,235,229,38,38,38,38,236,236,38,234,62,142,230,231,236,232,233,234,235,229,38,142,230,231,236,232,233,234,235,229,38,229,38,142,230,231,232,233,234,235,229,38,142,230,231,232,233,234,235,229,38,230,230,62,231,236,0,142,230,231,236,232,233,234,235,229,38,142,230,231,236,232,233,234,235,229,38,38,142,230,230,231,231,236,232,233,234,235,229,38,38,142,230,231,236,232,233,234,235,229,38,235,230,231,230,230,230,230,231,231,231,231,236,229,142,230,231,232,233,234,235,229,38,38,142,142,230,231,231,236,232,233,234,235,229,38,38,38,38,236,236,230,230,62,236,230,38,38,142,230,231,236,232,233,234,235,229,38,38,142,230,231,236,232,233,234,235,229,38,142,142,230,230,231,231,236,236,232,232,233,233,234,234,235,235,229,229,38,38,142,142,230,230,231,231,236,236,232,232,233,233,234,234,235,235,229,229,38,38,142,142,230,230,231,231,236,236,232,232,233,233,234,234,235,235,229,229,38,38,232,233,234,235,229,230,142,230,231,236,232,233,234,235,229,38,229,230,230,230,230,231,230,62,142,230,231,236,232,233,234,235,229,38,231,230,230,231,38,38,235,38,229,62,142,230,231,232,233,234,235,229,38,38,142,230,231,236,232,233,234,235,229,38,142,230,231,236,232,233,234,235,229,38,142,230,231,236,232,233,234,235,229,38,142,230,231,236,232,233,234,235,229,38,236,236,62,142,230,231,236,232,233,234,235,229,38,231,271,272,273,274,275,271,272,272,273,0,37,0,0,37,0,0,239,239,37,37,240,239,240,37,239,240,37,37,37,37,240,240,37,63,239,240,37,239,240,37,37,239,37,239,37,239,239,63,63,239,240,0,239,240,37,239,240,37,37,239,239,240,37,37,239,240,37,63,63,239,239,239,239,239,240,239,37,37,239,240,37,37,37,240,240,239,240,239,37,37,239,240,37,239,240,37,239,239,240,240,37,37,239,239,240,240,37,37,239,239,240,240,37,37,239,240,37,239,63,63,63,239,239,240,37,241,239,37,37,37,63,63,239,37,37,239,239,240,37,239,240,37,239,240,37,239,240,37,240,240,239,240,37,276,277,0,0,0,0,0,0,0,0,243,0,174,174,174,174,243,243,174,174,174,174,174,174,174,174,174,243,174,174,174,174,174,174,174,174,174,174,174,174,174,243,243,174,174,174,174,174,174,174,174,174,174,0,0,0,0,0,0,0,0,0,0,146,146,244,244,146,244,146,244,278,248,146,244,146,244,146,244,146,244,146,244,146,244,146,244,146,244,146,244,146,146,244,244,146,244,146,244,146,146,146,146,244,244,244,244,146,244,146,244,146,244,146,244,279,248,146,244,146,244,146,146,244,244,146,146,244,244,146,146,244,244,249,278,146,244,249,0,146,244,248,146,244,278,146,244,280,279,278,248,248,146,244,249,249,279,146,244,146,244,146,244,146,244,278,278,278,146,244,0,238],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],0,0,[7,[[9,[8]]]],[10,[[9,[8]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,10],[12,10],[[[13,[-1]]],10,[[15,[14]]]],[[16,14],7],[7,[[9,[5]]]],[10,[[9,[5]]]],[[[17,[-1]]],[[17,[-1]]],[18,19]],[7,7],[11,11],[12,12],[[[13,[-1]]],[[13,[-1]]],18],[10,10],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[17,[-1]]],[[20,[[17,[-1]]]]],19],[21,[[20,[-1]]],22],[-1,[[20,[-2]]],[],[]],[[[17,[-1]],23,24],[],19],0,[[],25],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[7,27],[10,27],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[[17,[-2]]]]],30,19],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[7]]],30],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[10]]],30],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[[17,[-1]],[17,[-1]]],31,19],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[11,[[29,[-1,10]]],[]],[12,[[29,[-1,10]]],[]],[[[13,[-1]]],[[29,[-2,10]]],[[15,[14]]],[]],0,[[[17,[-1]],26],[[29,[2,32]]],19],[[[17,[-1]]],2,19],[[[17,[-1]],33],[[29,[2,34]]],19],[[[17,[-1]],33],[[29,[2,34]]],[35,19]],[[7,33],36],[[7,33],36],[[11,33],36],[[12,33],36],[[[13,[-1]],33],36,35],[[10,33],36],[[10,33],36],[-1,-1,[]],[37,7],[38,7],[-1,-1,[]],[39,7],[[[2,[14,16]]],7],[40,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,[[29,[25,42]]]],[41,[[29,[25,42]]]],[[],[[17,[-1]]],19],[[[17,[-1]]],[],19],[[[17,[-1]]],9,19],[[-1,-2],24,[43,44],45],[[[17,[-1]]],24,19],[[[17,[-1]]],[[48,[-1,[46,[-1]],47]]],19],[[[17,[-1]]],[[20,[[17,[-1]]]]],19],[[[17,[-1]]],[],19],[[[17,[-1]]],[],19],[[[17,[-1]]],[],19],[[],[[9,[49]]]],[[[17,[-1]],-2],2,19,50],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[-1,[],[]],[-1,[],[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,[-1,7,52],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[11,-1],10,[]],[[12,-1],10,[]],[[[13,[-1]],-2],10,[[15,[14]]],[]],0,[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[25,-2,[60,[-1,-3]],-4],[[29,[2,7]]],19,[[61,[-1]],[62,[-1]],63,[64,[-1]],65,53,54],[[66,[-1]]],67],[[[17,[-1]],-2],29,[19,68],69],[[7,-1],29,69],[[10,-1],29,69],[7,[[9,[5]]]],[10,[[9,[5]]]],0,[7,16],[10,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[21,[[29,[-1,21]]],22],[-1,[[29,[-2,-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],0,[[25,41],[[29,[2,42]]]],[[25,41],[[29,[2,42]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],[[[71,[-1]]],[[9,[8]]],19],[39,[[9,[8]]]],[[[72,[-1]]],[[73,[-1]]],19],[[[74,[-1]]],[[73,[-1]]],19],[[[75,[-1]]],[[73,[-1]]],19],[[[76,[-1]]],[[73,[-1]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[77,[-1]]],39,[[15,[14]]]],[[[78,[-1]]],39,[[15,[14]]]],[[[79,[-1]]],39,[[15,[14]]]],[[[80,[-1,-2]]],39,[[15,[24]]],[[15,[24]]]],[[[81,[-1,-2]]],39,[[15,[14]]],[[15,[16]]]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,[20,[-5]]],[[9,[-1]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,[20,[-5]]],[[9,[-1]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[71,[-1]]],[[9,[5]]],19],[39,[[9,[5]]]],[[[92,[-1]]],[[92,[-1]]],19],[[[93,[-1]]],[[93,[-1]]],19],[[[72,[-1]]],[[72,[-1]]],[18,19]],[[[71,[-1]]],[[71,[-1]]],[18,19]],[[[94,[-1]]],[[94,[-1]]],[18,19]],[[[74,[-1]]],[[74,[-1]]],[18,19]],[[[75,[-1]]],[[75,[-1]]],[18,19]],[[[76,[-1]]],[[76,[-1]]],[18,19]],[[[95,[-1]]],[[95,[-1]]],[18,19]],[[[96,[-1]]],[[96,[-1]]],[18,19]],[97,97],[[[77,[-1]]],[[77,[-1]]],18],[[[78,[-1]]],[[78,[-1]]],18],[[[79,[-1]]],[[79,[-1]]],18],[[[80,[-1,-2]]],[[80,[-1,-2]]],18,18],[[[81,[-1,-2]]],[[81,[-1,-2]]],18,18],[39,39],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[92,[-1]],[92,[-1]]],98,19],[[[93,[-1]],[93,[-1]]],98,19],[[[75,[-1]]],99,19],[[-1,-2],98,[],[]],[[-1,-2],98,[],[]],[[[100,[-1]],-3],[[29,[-1,-2]]],[],[5,101],[[104,[-2],[[102,[103]]]]]],[[[74,[-1]]],[[105,[-1]]],19],[[],106],[[106,-1],[[29,[[107,[-2,39,-1]],108]]],67,[53,54,109]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[71,[-1]]],27,19],[39,27],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[[72,[-2]]]]],30,19],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[[94,[-2]]]]],30,19],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[[74,[-2]]]]],30,19],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[[75,[-2]]]]],30,19],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[[76,[-2]]]]],30,19],[-1,[[29,[[95,[-2]]]]],30,19],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[[96,[-2]]]]],30,19],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[39]]],30],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4],[[55,[91]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4],[[55,[91]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[]],[[[94,[-1]]],[[0,[[91,[],[[90,[[2,[[110,[-1]],[111,[-1]]]]]]]]]]],19],[[[92,[-1]],[92,[-1]]],31,19],[[[93,[-1]],[93,[-1]]],31,19],[[[72,[-1]],[72,[-1]]],31,[86,19]],[[[94,[-1]],[94,[-1]]],31,[86,19]],[[[74,[-1]],[74,[-1]]],31,[86,19]],[[[75,[-1]],[75,[-1]]],31,[86,19]],[[[76,[-1]],[76,[-1]]],31,[86,19]],[[[95,[-1]],[95,[-1]]],31,[86,19]],[[[96,[-1]],[96,[-1]]],31,[86,19]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],0,[[[77,[-1]]],[[29,[-2,39]]],[[15,[14]]],[]],[[[78,[-1]]],[[29,[-2,39]]],[[15,[14]]],[]],[[[79,[-1]]],[[29,[-2,39]]],[[15,[14]]],[]],[[[80,[-1,-2]]],[[29,[-3,39]]],[[15,[24]]],[[15,[24]]],[]],[[[81,[-1,-2]]],[[29,[-3,39]]],[[15,[14]]],[[15,[16]]],[]],0,[[[92,[-1]],33],36,19],[[[92,[-1]],33],36,19],[[[93,[-1]],33],36,19],[[[93,[-1]],33],36,19],[[[72,[-1]],33],36,[35,19]],[[[71,[-1]],33],36,19],[[[71,[-1]],33],36,[35,19]],[[[94,[-1]],33],36,[35,19]],[[[74,[-1]],33],36,[35,19]],[[[75,[-1]],33],36,[35,19]],[[[76,[-1]],33],36,[35,19]],[[[95,[-1]],33],36,[35,19]],[[[96,[-1]],33],36,[35,19]],[[97,33],36],[[[77,[-1]],33],36,35],[[[78,[-1]],33],36,35],[[[79,[-1]],33],36,35],[[[80,[-1,-2]],33],36,35,35],[[[81,[-1,-2]],33],36,35,35],[[39,33],36],[[39,33],36],[-1,-1,[]],[-1,-1,[]],[[[112,[-1]]],[[92,[-1]]],19],[26,[[92,[-1]]],19],[-1,-1,[]],[26,[[93,[-1]]],19],[[[73,[-1]]],[[93,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[94,[-1]]],[[74,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[94,[-1]]],[[95,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[14,16]]],39],[113,39],[41,[[29,[106,42]]]],[41,[[29,[106,42]]]],[[],[[72,[-1]]],19],[[],[[94,[-1]]],19],[[],[[74,[-1]]],19],[[],[[75,[-1]]],19],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],-6],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53],[[15,[[93,[-2]]]],53,54]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],-6],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53],[[122,[26]],53]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],[123,[-2]]],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53]],[[-1,-2],24,[43,44],45],[[-1,-2],24,[43,44],45],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],-6],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53],[[15,[[92,[-2]]]],53,54]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],-6],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53],[[122,[26]],53]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],-6],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53],[[15,[[93,[-2]]]],53,54]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],-6],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53],[[122,[26]],53]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],-6],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53],[[15,[[93,[-2]]]],53,54]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],-6],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53],[[122,[26]],53]],[[],[[9,[49]]]],[[[92,[-1]],-2],2,19,50],[[[93,[-1]],-2],2,19,50],[[[72,[-1]]],[[112,[-1]]],19],[[[94,[-1]]],[[73,[-1]]],19],[[[74,[-1]]],124,19],[[[76,[-1]]],[[123,[-1]]],19],[[[95,[-1]]],[[73,[-1]]],19],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[[[72,[-1]]],[[125,[-1]]],19],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[[[94,[-1]]],[[125,[-1]]],19],[[[95,[-1]]],[[125,[-1]]],19],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[[[72,[-1]]],24,19],[[[94,[-1]]],24,19],[[[74,[-1]]],24,19],[[[75,[-1]]],24,19],[[[76,[-1]]],24,19],[[[95,[-1]]],24,19],0,[-1,[],[]],[-1,[],[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[127,[],[[126,[-1]]]],[94,[-2]]],[[119,[[55,[118]]]]],[5,35,53,54],19],[[[127,[],[[126,[-1]]]],[72,[-2]]],[[119,[[55,[118]]]]],[5,35,53,54],19],[[[127,[],[[126,[-1]]]],[75,[-2]],[9,[128]]],[[119,[[55,[118]]]]],[5,35,53,54],19],[-1,39,52],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[97,-1],39,[]],[[[77,[-1]],-2],39,[[15,[14]]],[]],[[[78,[-1]],-2],39,[[15,[14]]],[]],[[[79,[-1]],-2],39,[[15,[14]]],[]],[[[80,[-1,-2]],-3],39,[[15,[24]]],[[15,[24]]],[]],[[[81,[-1,-2]],-3],39,[[15,[14]]],[[15,[16]]],[]],[[[100,[-1]]],-2,53,[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4],31,[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4],31,[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[]],[[[94,[-1]]],31,19],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4],-2,[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[[72,[-1]]],[[17,[-1]]],19],0,[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4],26,[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[]],[[[94,[-1]]],26,19],[[[100,[-1]],-3],[[100,[-2]]],[],[],[53,[130,[-1],[[129,[-2]]]]]],0,[[[94,[-1]]],[[131,[-1]]],19],[[[17,[-1]],[132,[-1]]],[[29,[[72,[-1]],[71,[-1]]]]],19],[[[125,[-1]],[105,[-1]]],[[94,[-1]]],19],[[[125,[-1]],99],[[75,[-1]]],19],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,26],[[9,[-1]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,26],[[9,[-1]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,26],[[9,[-5]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,26],[[9,[-5]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,26],[[9,[[2,[-5,-3]]]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,26],[[9,[[2,[-5,-3]]]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[94,[-1]]],24,19],[[[95,[-1]]],24,19],[[[92,[-1]],[92,[-1]]],[[9,[98]]],19],[[[93,[-1]],[93,[-1]]],[[9,[98]]],19],[[[94,[-1]]],[[105,[-1]]],19],[[[72,[-1]]],124,19],[[[94,[-1]]],124,19],[[[75,[-1]]],124,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,-1],[[9,[-3]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,-1],[[9,[-3]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[]],[[[72,[-1]]],[[132,[-1]]],19],0,[[[100,[-1]]],-1,53],0,0,0,[[[72,[-1]],-2],29,19,69],[[[94,[-1]],-2],29,19,69],[[[74,[-1]],-2],29,19,69],[[[75,[-1]],-2],29,19,69],[[[76,[-1]],-2],29,19,69],[[[95,[-1]],-2],29,19,69],[[[96,[-1]],-2],29,19,69],[[39,-1],29,69],[[[94,[-1]]],24,19],[[[74,[-1]]],24,19],[[[95,[-1]]],24,19],[[[71,[-1]]],[[9,[5]]],19],[39,[[9,[5]]]],[39,16],0,[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],26],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],26],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],26],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],26],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],26],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],26],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],26],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53]],[[[61,[],[[114,[-1]],[115,[-3]],[116,[-4]],[117,[-5]]]],26],[[119,[[55,[118]]]]],[[120,[],[[90,[[100,[[72,[-2]]]]]]]],121,53],19,[[120,[],[[90,[[100,[[94,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[74,[-2]]]]]]]],121,53],[[120,[],[[90,[[100,[[75,[-2]]]]]]]],121,53]],[133,24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,-1],[[9,[-5]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,-1],[[9,[-5]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[94,[-1]],[110,[-1]]],[[9,[[76,[-1]]]]],19],[[[76,[-1]]],[[111,[-1]]],19],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,[20,[-5]]],[[9,[-5]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,[20,[-5]]],[[9,[-5]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[94,[-1]],[20,[[111,[-1]]]]],[[9,[[110,[-1]]]]],19],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,[20,[-5]]],[[9,[[2,[-5,-3]]]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,[20,[-5]]],[[9,[[2,[-5,-3]]]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[[[85,[],[[82,[-1]],[83,[-2]],[84,[-3]]]],-4,-1],[[9,[[2,[-5,-3]]]]],[18,35,86,87,88,68,89,53,54],[[91,[],[[90,[-1]]]]],[18,35,86,87,68,89],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[[[100,[-1]]],[[29,[-1,[100,[-1]]]]],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[[106,41],[[29,[2,42]]]],[[106,41],[[29,[2,42]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[100,[-1]],-4],[[29,[-1,-2]]],[],[5,101],[[104,[-2],[[102,[103]]]]],[[130,[],[[129,[-3]]]]]],[[[100,[-1]],134],[[9,[-1]]],53],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[135,[-1,-2]]],-2,[],[]],[[[135,[-1,-2]]],-2,[],[]],0,[[[135,[-2,-3]]],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54]],[[[135,[-1,-2]]],[[119,[[55,[118]]]]],[63,53,54],[53,54]],[136,[[119,[[55,[118]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[135,[-1,-2]]],[[135,[-1,-2]]],18,18],[136,136],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[65,[],[[126,[-1]]]]],[[119,[[55,[118]]]]],[5,35,53,54]],[[[135,[-1,-2]]],[[119,[[55,[118]]]]],[65,53],53],[-1,[[119,[[55,[118]]]]],[]],[-1,[[119,[[55,[118]]]]],[]],[-1,[[119,[[55,[118]]]]],[]],[[[135,[-2,-3]]],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54]],[[137,-2],[[139,[[138,[-1,-2]]]]],19,[[140,[-1]]]],[26,[[119,[[55,[118]]]]]],[26,[[119,[[55,[118]]]]]],[26,[[119,[[55,[118]]]]]],[[141,-2],[[139,[[138,[-1,-2]]]]],19,[[140,[-1]]]],[[],136],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[26,2],0,[[[135,[-1,-2]],33],36,35,35],[[136,33],36],[-1,-1,[]],[-1,-1,[]],[[[135,[-2,-3]],-4],[[119,[[55,[118]]]]],19,[[61,[-1]],53,54],[53,54],[[15,[[93,[-1]]]],53,54]],[[[135,[-2,-3]],-4],[[119,[[55,[118]]]]],19,[[61,[-1]],53,54],[53,54],[[122,[26]],53]],[[[135,[-2,-3]],[123,[-1]]],[[119,[[55,[118]]]]],19,[[61,[-1]],53,54],[53,54]],[[[135,[-2,-3]],-4,24],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54],[[15,[[142,[-1]]]],53,54]],[[[135,[-2,-3]],-4],[[119,[[55,[118]]]]],19,[[61,[-1]],53,54],[53,54],[[15,[[92,[-1]]]],53,54]],[[[135,[-2,-3]],-4],[[119,[[55,[118]]]]],19,[[61,[-1]],53,54],[53,54],[[122,[26]],53]],[[[135,[-3,-4]],[143,[-1,-2]]],[[119,[[55,[118]]]]],19,[[144,[-1]]],[[145,[-1,-2]],53,54],[53,54]],[[[135,[-2,-3]],-4],[[119,[[55,[118]]]]],19,[[61,[-1]],53,54],[53,54],[[15,[[93,[-1]]]],53,54]],[[[135,[-2,-3]],-4],[[119,[[55,[118]]]]],19,[[61,[-1]],53,54],[53,54],[[122,[26]],53]],[[[135,[-2,-3]],-4],[[119,[[55,[118]]]]],19,[[61,[-1]],53,54],[53,54],[[15,[[93,[-1]]]],53,54]],[[[135,[-2,-3]],-4],[[119,[[55,[118]]]]],19,[[61,[-1]],53,54],[53,54],[[122,[26]],53]],[[[138,[146,-1]],[147,[146]]],[[119,[[55,[118]]]]],[[140,[146]],148]],[[[135,[-1,-2]],[147,[146]]],[[119,[[55,[118]]]]],149,[148,53,54]],[[136,[147,[146]]],[[119,[[55,[118]]]]]],[[],26],[[],26],[[[135,[-1,-2]]],-1,[],[]],[[[135,[-1,-2]]],-1,[],[]],[[[135,[-2,-3]],[94,[-1]]],[[119,[[55,[118]]]]],19,[[127,[-1]],53,54],[53,54]],[[[135,[-2,-3]],[72,[-1]]],[[119,[[55,[118]]]]],19,[[127,[-1]],53,54],[53,54]],[[[135,[-3,-4]],150,[151,[26]],24],[[119,[[55,[118]]]]],19,[[144,[-1]]],[[152,[-1,-2]],53,54],[53,54]],[[[135,[-2,-3]],[75,[-1]],[9,[128]]],[[119,[[55,[118]]]]],19,[[127,[-1]],53,54],[53,54]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[[135,[-1,-2]]],153,[63,53,54],[53,54]],[136,153],[[-1,-2],[[135,[-1,-2]]],[],[]],0,[[137,-2],[[139,[[138,[-1,-2]]]]],19,[[140,[-1]]]],[[141,-2],[[139,[[138,[-1,-2]]]]],19,[[140,[-1]]]],[[[135,[-2,-3]]],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54]],0,[[]],[[]],[-1,[[55,[154]]],[]],[-1,[[55,[154]]],[]],[-1,[[119,[[55,[118]]]]],[]],[-1,[[119,[[55,[118]]]]],[]],[-1,[[119,[[55,[118]]]]],[]],[[[65,[],[[126,[-1]]]]],[[119,[[55,[118]]]]],[5,35,53,54]],[[[135,[-1,-2]]],[[119,[[55,[118]]]]],[65,53],53],[[[138,[-1,-2]]],[[139,[2]]],19,[[140,[-1]]]],0,0,0,[[[135,[-2,-3]]],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[[64,[147,[-1]]],[[119,[[55,[118]]]]],19],[[[135,[-2,-3]],-4],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54],[[15,[[93,[-1]]]],53,54]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[155,[-1,-2,-3]]],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54]],[[[155,[-1,-2,-3]]],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1,-2,-3]]],[[139,[[155,[-1,-2,-3]]]]],19,[[62,[-1]],[157,[-1]]],[[140,[-1]]]],[[-2,-3],[[156,[-1,-2,-3]]],19,[[62,[-1]],[157,[-1]]],[[140,[-1]]]],[[[155,[-1,-2,-3]]],[[155,[-1,-2,-3]]],19,[],[]],[[[158,[-1,-2,-3]]],[[158,[-1,-2,-3]]],19,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[155,[-1,-2,-3]]],[[119,[[55,[118]]]]],19,[65,53,54],[53,54]],[[159,-2],[[29,[[160,[-1,-2]],161]]],19,[[140,[-1]]]],[[[155,[-1,-2,-3]]],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54]],[[137,-2],[[139,[[155,[-1,[162,[-1]],-2]]]]],19,[[140,[-1]]]],[[141,-2],[[139,[[155,[-1,[162,[-1]],-2]]]]],19,[[140,[-1]]]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[163,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[26,-1,[]],[[[164,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[164,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[[156,[-1,-2,-3]]],[[156,[-1,-2,-3]]],[],[],[]],[26,2],[26,2],[26,2],[26,2],[26,2],[[[155,[-1,-2,-3]],33],36,19,35,35],[[[158,[-1,-2,-3]],33],36,19,35,35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[165,[[0,[-1,-2]]]]],[[163,[-1,-2]]],19,[]],[-1,-1,[]],[[[166,[[0,[-1,-2]]]]],[[164,[-1,-2]]],19,[]],[[[155,[-1,-2,-3]],-4],[[119,[[55,[118]]]]],19,[[157,[-1]]],[[140,[-1]]],[[15,[[93,[-1]]]],53,54]],[[[155,[-1,-2,-3]],-4],[[119,[[55,[118]]]]],19,[[157,[-1]]],[[140,[-1]]],[[122,[26]],53]],[[[155,[-1,-2,-3]],[123,[-1]]],[[119,[[55,[118]]]]],19,[[157,[-1]]],[[140,[-1]]]],[[[155,[-1,-2,-3]],-4,24],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54],[[15,[[142,[-1]]]],53,54]],[[[155,[-1,-2,-3]],-4],[[119,[[55,[118]]]]],19,[[157,[-1]]],[[140,[-1]]],[[15,[[92,[-1]]]],53,54]],[[[155,[-1,-2,-3]],-4],[[119,[[55,[118]]]]],19,[[157,[-1]]],[[140,[-1]]],[[122,[26]],53]],[[[155,[-1,-3,-4]],[143,[-1,-2]]],[[119,[[55,[118]]]]],19,[[144,[-1]]],[[145,[-1,-2]],53,54],[[140,[-1]]]],[[[155,[-1,-2,-3]],-4],[[119,[[55,[118]]]]],19,[[157,[-1]]],[[140,[-1]]],[[15,[[93,[-1]]]],53,54]],[[[155,[-1,-2,-3]],-4],[[119,[[55,[118]]]]],19,[[157,[-1]]],[[140,[-1]]],[[122,[26]],53]],[[[155,[-1,-2,-3]],-4],[[119,[[55,[118]]]]],19,[[157,[-1]]],[[140,[-1]]],[[15,[[93,[-1]]]],53,54]],[[[155,[-1,-2,-3]],-4],[[119,[[55,[118]]]]],19,[[157,[-1]]],[[140,[-1]]],[[122,[26]],53]],[[],26],[[],26],[[],26],[[],26],[[],26],[[[155,[-1,-2,-3]],[94,[-1]]],[[119,[[55,[118]]]]],19,[[127,[-1]],53,54],[53,54]],[[[155,[-1,-2,-3]],[72,[-1]]],[[119,[[55,[118]]]]],19,[[127,[-1]],53,54],[53,54]],[[[155,[-1,-3,-4]],150,[151,[26]],24],[[119,[[55,[118]]]]],19,[[144,[-1]]],[[152,[-1,-2]],53,54],[[140,[-1]]]],[[[155,[-1,-2,-3]],[75,[-1]],[9,[128]]],[[119,[[55,[118]]]]],19,[[127,[-1]],53,54],[53,54]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[[155,[-1,-2,-3]]],153,19,[[62,[-1]],53,54],[53,54]],[[-1,-2],[[156,[-3,-1,-2]]],[],[],[]],[[137,-2],[[139,[[155,[-1,[162,[-1]],-2]]]]],19,[[140,[-1]]]],[[141,-2],[[139,[[155,[-1,[162,[-1]],-2]]]]],19,[[140,[-1]]]],[[[155,[-1,-2,-3]]],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54]],[[]],[[]],[[]],[[]],[[]],[-1,[[55,[154]]],[]],[[[155,[-1,-2,-3]]],[[119,[[55,[118]]]]],19,[65,53,54],[53,54]],[[[155,[-1,[162,[-1]],-2]]],[[139,[2]]],19,[[140,[-1]]]],[[[155,[-1,-2,-3]]],[[163,[-1,-2]]],19,[],[]],[[[155,[-1,-2,-3]]],[[164,[-1,-2]]],19,[],[]],[[[155,[-1,-2,-3]]],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54]],[-1,-2,[],[]],[-1,-2,[],[]],[[[155,[-1,167,-2]]],[[169,[168]]],19,[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[[[155,[-1,-2,-3]],-4],[[119,[[55,[118]]]]],19,[[62,[-1]],53,54],[53,54],[[15,[[93,[-1]]]],53,54]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1,-2,-3]],26],[[156,[-1,-2,-3]]],[],[],[]],[[[156,[-1,-2,-3]],134],[[156,[-1,-2,-3]]],[],[],[]],[[[156,[-1,-2,-3]],26],[[156,[-1,-2,-3]]],[],[],[]],[[[156,[-1,-2,-3]],26],[[156,[-1,-2,-3]]],[],[],[]],[[[156,[-1,-2,-3]],134],[[156,[-1,-2,-3]]],[],[],[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,[[[170,[-1,-2]]],[[119,[[55,[118]]]]],19,[53,54]],[[159,-2],[[29,[[160,[-1,-2]],161]]],19,[[140,[-1]]]],[-1,[[119,[[55,[118]]]]],[]],[26,[[119,[[55,[118]]]]]],[[[170,[146,-1]],[147,[146]]],[[119,[[55,[118]]]]],[[140,[146]],148]],0,0,[-1,[[119,[[55,[118]]]]],[]],0,[[[170,[-1,-2]]],[[169,[168]]],19,[]],0,[[],2],0,0,0,0,0,[[157,[93,[-1]]],[[119,[[55,[118]]]]],19],[[157,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[157,[123,[-1]]],[[119,[[55,[118]]]]],19],[[157,[93,[-1]]],[[119,[[55,[118]]]]],19],[[157,[92,[-1]]],[[119,[[55,[118]]]]],19],[[157,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[157,[93,[-1]]],[[119,[[55,[118]]]]],19],[[157,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[157,[93,[-1]]],[[119,[[55,[118]]]]],19],[[157,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],0,0,0,0,[-1,4,[]],[-1,4,[]],[[[162,[-1]]],[[119,[[55,[118]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[[[162,[-1]]],[[119,[[55,[118]]]]],19],[[[162,[-1]]],[[119,[[55,[118]]]]],19],[137,[[29,[[162,[-1]],171]]],19],[141,[[29,[[162,[-1]],171]]],19],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[[[162,[-1]],33],36,19],[-1,-1,[]],[[[162,[-1]],[93,[-1]]],[[119,[[55,[118]]]]],19],[[[162,[-1]],-2],[[119,[[55,[118]]]]],19,[[122,[26]],53]],[[[162,[-1]],[123,[-1]]],[[119,[[55,[118]]]]],19],[[[162,[-1]],[93,[-1]]],[[119,[[55,[118]]]]],19],[[[162,[-1]],-2,24],[[119,[[55,[118]]]]],19,[[15,[[142,[-1]]]],53,54]],[[[162,[-1]],[92,[-1]]],[[119,[[55,[118]]]]],19],[[[162,[-1]],-2],[[119,[[55,[118]]]]],19,[[122,[26]],53]],[[[162,[-1]],[93,[-1]]],[[119,[[55,[118]]]]],19],[[[162,[-1]],-2],[[119,[[55,[118]]]]],19,[[122,[26]],53]],[[[162,[-1]],[93,[-1]]],[[119,[[55,[118]]]]],19],[[[162,[-1]],-2],[[119,[[55,[118]]]]],19,[[122,[26]],53]],[[],26],[[[162,[-1]],[94,[-1]]],[[119,[[55,[118]]]]],19],[[[162,[-1]],[72,[-1]]],[[119,[[55,[118]]]]],19],[[[162,[-1]],[75,[-1]],[9,[128]]],[[119,[[55,[118]]]]],19],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[137,[[29,[[162,[-1]],171]]],19],[141,[[29,[[162,[-1]],171]]],19],[[[162,[-1]]],[[119,[[55,[118]]]]],19],[[]],[[[162,[-1]]],[[119,[[55,[118]]]]],19],[[[162,[-1]]],[[29,[2,171]]],19],[[[162,[-1]]],[[119,[[55,[118]]]]],19],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,27,[]],[[[162,[-1]],-2],[[119,[[55,[118]]]]],19,[[15,[[93,[-1]]]],53,54]],[-1,-2,[],[]],0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[172,[[119,[[55,[118]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[172,172],[[-1,-2],2,[],[]],[172,[[119,[[55,[118]]]]]],[172,[[119,[[55,[118]]]]]],[[],172],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[[172,33],36],[-1,-1,[]],[[172,[93,[-1]]],[[119,[[55,[118]]]]],19],[[172,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[172,[123,[-1]]],[[119,[[55,[118]]]]],19],[[172,[93,[-1]]],[[119,[[55,[118]]]]],19],[[172,-2,24],[[119,[[55,[118]]]]],19,[[15,[[142,[-1]]]],53,54]],[[172,[92,[-1]]],[[119,[[55,[118]]]]],19],[[172,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[172,[93,[-1]]],[[119,[[55,[118]]]]],19],[[172,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[172,[93,[-1]]],[[119,[[55,[118]]]]],19],[[172,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[],26],[[172,[94,[-1]]],[[119,[[55,[118]]]]],19],[[172,[72,[-1]]],[[119,[[55,[118]]]]],19],[[172,[75,[-1]],[9,[128]]],[[119,[[55,[118]]]]],19],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[172,[[119,[[55,[118]]]]]],[[]],[172,[[119,[[55,[118]]]]]],[172,[[119,[[55,[118]]]]]],0,[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,27,[]],[[172,-2],[[119,[[55,[118]]]]],19,[[15,[[93,[-1]]]],53,54]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[173,[[119,[[55,[118]]]]]],[173,[[119,[[55,[118]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[173,[[119,[[55,[118]]]]]],[-1,[[119,[[55,[118]]]]],[]],[173,[[119,[[55,[118]]]]]],[26,[[119,[[55,[118]]]]]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[26,2],[-1,-1,[]],[-1,-1,[]],[[173,-1],[[119,[[55,[118]]]]],[[15,[[93,[146]]]],53,54]],[[173,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[173,[123,[146]]],[[119,[[55,[118]]]]]],[[173,-1,24],[[119,[[55,[118]]]]],[[15,[[142,[146]]]],53,54]],[[173,-1],[[119,[[55,[118]]]]],[[15,[[92,[146]]]],53,54]],[[173,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[173,-1],[[119,[[55,[118]]]]],[[15,[[93,[146]]]],53,54]],[[173,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[173,-1],[[119,[[55,[118]]]]],[[15,[[93,[146]]]],53,54]],[[173,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[173,[147,[146]]],[[119,[[55,[118]]]]]],[[],26],[[],26],[[173,[94,[146]]],[[119,[[55,[118]]]]]],[[173,[72,[146]]],[[119,[[55,[118]]]]]],[[173,[75,[146]],[9,[128]]],[[119,[[55,[118]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[173,153],[173,[[119,[[55,[118]]]]]],[[]],[[]],[-1,[[55,[154]]],[]],[-1,[[119,[[55,[118]]]]],[]],[173,[[119,[[55,[118]]]]]],[[[174,[173]]],[[119,[[55,[118]]]]]],[173,[[119,[[55,[118]]]]]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[[173,-1],[[119,[[55,[118]]]]],[[15,[[93,[146]]]],53,54]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[175,24],[-1,-2,[],[]],[-1,-2,[],[]],[175,175],[[-1,-2],2,[],[]],[[],175],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[[175,33],36],[-1,-1,[]],[176,[[119,[[55,[118]]]]]],[177,[[9,[175]]]],[[],26],[175,134],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[[178,[],[[126,[-1]]]]],[[119,[[55,[118]]]]],[5,35,53,54]],[175,179],[175,134],[[],175],[[]],[176,[[119,[[55,[118]]]]]],[175,[[9,[24]]]],[[[178,[],[[126,[-1]]]],24],[[119,[[55,[118]]]]],[5,35,53,54]],[[177,175],2],[175,134],[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,27,[]],[175,[[139,[2]]]],[-1,-2,[],[]],[[175,24],175],[[175,134],175],[[175,179],175],[[175,134],175],[[175,24],175],[[175,134],175],0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[180,31],[180,31],[181,[[9,[182]]]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[161,5],[161,5],[161,8],[167,[[119,[[55,[118]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,183,[]],[[159,-2],[[29,[[160,[-1,-2]],161]]],19,[[140,[-1]]]],[161,184],[181,24],[185,[[119,[[55,[118]]]]]],[168,[[119,[[55,[118]]]]]],[167,[[119,[[55,[118]]]]]],[181,181],[159,159],[186,186],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[181,181],98],[167,[[119,[[55,[118]]]]]],[[-1,-2],98,[],[]],[[159,-2],[[29,[[170,[-1,-2]],161]]],19,[[140,[-1]]]],[159,[[29,[167,161]]]],[[161,-1],161,[52,53,54]],[167,[[119,[[55,[118]]]]]],[[159,27],159],[[],159],[[],186],[[],[[151,[181]]]],[161],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[161],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[186]]],30],[161,[[29,[-1,161]]],[52,35,53,54]],[161,[[9,[-1]]],[52,35,53,54]],[161,[[9,[-1]]],[52,35,53,54]],[161,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[181,181],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[168,-1,-2],[[169,[24]]],[44,187],188],[[168,-1,-2],[[169,[24]]],[44,187,52],188],[[168,-1,-2],[[169,[24]]],[44,187,52],[188,18]],[[168,-1,-2],[[169,[2]]],[44,187,52],188],[[168,-1,-2],[[169,[2]]],[44,187,52],[188,18]],[[161,33],[[29,[2,34]]]],[[161,33],[[29,[2,34]]]],[[181,33],[[29,[2,34]]]],[[181,33],[[29,[2,34]]]],[[159,33],36],[[167,33],36],[[186,33],36],[-1,161,[5,53,54]],[189,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[190,159],[-1,-1,[]],[-1,-1,[]],[-2,186,[52,18],[[91,[],[[90,[-1]]]],191]],[-1,-1,[]],[[180,[193,[192]]],[[29,[186,[55,[5]]]]]],[27,[[29,[159,-1]]],[]],[[167,[93,[-1]]],[[119,[[55,[118]]]]],19],[[167,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[167,[123,[-1]]],[[119,[[55,[118]]]]],19],[167,[[119,[[55,[118]]]]]],[[167,[93,[-1]]],[[119,[[55,[118]]]]],19],[[167,-2,24],[[119,[[55,[118]]]]],19,[[15,[[142,[-1]]]],53,54]],[[167,[92,[-1]]],[[119,[[55,[118]]]]],19],[[167,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[167,[143,[-1,-2]]],[[119,[[55,[118]]]]],19,[[144,[-1]]]],[[167,[93,[-1]]],[[119,[[55,[118]]]]],19],[[167,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[167,[[9,[175]]]],[[167,[93,[-1]]],[[119,[[55,[118]]]]],19],[[167,-1],[[119,[[55,[118]]]]],[[122,[26]],53]],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[[159,-1],159,[[15,[14]]]],0,0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[167,[94,[-1]]],[[119,[[55,[118]]]]],19],[[167,[72,[-1]]],[[119,[[55,[118]]]]],19],[[167,150,[151,[26]],24],[[119,[[55,[118]]]]]],[[167,[75,[-1]],[9,[128]]],[[119,[[55,[118]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[161,31],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[167,[[119,[[55,[118]]]]]],[[159,-1],159,[[188,[],[[90,[181]]]]]],[-1,161,[52,35,53,54]],[181,27],[-1,161,[5,53,54]],[159,159],[[181,181],[[9,[98]]]],[[159,27],159],[167,[[119,[[55,[118]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[159,179],159],0,[181,194],[167,[[119,[[55,[118]]]]]],[[159,175],[[29,[159,161]]]],[[185,-1,-2],[[119,[[55,[118]]]]],[44,187,54],[188,53]],[[185,-1,-2],[[119,[[55,[118]]]]],[44,187,54],[188,53]],[[185,-1],[[119,[[55,[118]]]]],[44,187,54]],[[185,-1,-2],[[119,[[55,[118]]]]],[44,187,54],[188,53]],[[185,-1],[[119,[[55,[118]]]]],[44,187,54]],[[185,-1],[[119,[[55,[118]]]]],[44,187,54]],[159,159],[167,[[119,[[55,[118]]]]]],[161,5],[[167,24],[[119,[[55,[118]]]]]],[[159,-1],159,[[15,[14]]]],[[186,-1],29,69],[[167,175],2],[181,[[9,[27]]]],[167,[[119,[[55,[118]]]]]],0,[159,159],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[186,180,195],[[29,[196,[55,[5]]]]]],[[186,180,195],[[29,[196,[55,[5]]]]]],[-1,14,[]],[-1,14,[]],[167,[[169,[168]]]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[[27,27],[[29,[181,197]]]],[[168,27,[198,[27]],-1,-3],[[169,[2]]],[[188,[],[[90,[27]]]]],[199,18],[[188,[],[[90,[[198,[-2]]]]]]]],[[159,27],159],[181,200],[[167,-2],[[119,[[55,[118]]]]],19,[[15,[[93,[-1]]]],53,54]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[201,159],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[201,2],[26,2],[[201,33],36],[-1,-1,[]],[-1,-1,[]],[201,14],[[],26],[[],26],[[],201],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[]],[[]],[201,179],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[202,[-1,-2]]],[[202,[-1,-2]]],[],[]],[[-1,-2],2,[],[]],[[],[[202,[-1,-2]]],[],[]],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[[[202,[-1,-2]],33],36,[],[]],[-1,-1,[]],[[],26],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[]],0,0,[[203,-1],2,[]],[[204,-1],[[0,[[118,[],[[129,[2]]]],53]]],[]],[[[202,[-2,-3]],-2,-4,-5],2,[],[[205,[-1]]],204,[[206,[-1,-2]]],[[188,[],[[90,[-3]]]],53]],[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,27,[]],[-1,-2,[],[]],[[[202,[-1,-2]],134],[[202,[-1,-2]]],[],[]],0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[207,[-1]]],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[208,[-1]]],[[208,[-1]]],19],[[[209,[-1]]],[[209,[-1]]],[18,67]],[[[207,[-1]]],[[207,[-1]]],[]],[210,210],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],[[208,[-1]]],19],[[],210],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[26,2],[26,2],[26,2],[[[207,[-1]]],2,[]],[[206,-2],[[119,[[55,[118]]]]],[],[[205,[-1]]]],[[[208,[-1]],211],[[119,[[55,[118]]]]],19],[[[208,[-1]],212],[[119,[[55,[118]]]]],19],[[[208,[-1]],213],[[119,[[55,[118]]]]],19],[[[209,[-1]],212],[[119,[[55,[118]]]]],67],[[[209,[-1]],211],[[119,[[55,[118]]]]],67],[[[209,[-1]],213],[[119,[[55,[118]]]]],67],[[[207,[-3]],-2],[[119,[[55,[118]]]]],19,[[205,[-1]]],[[206,[-1,-2]],54]],[[210,-2],[[119,[[55,[118]]]]],[],[53,[205,[-1]]]],[[[208,[-1]],33],36,19],[[[209,[-1]],33],36,[35,67]],[[[207,[-1]],33],36,35],[[210,33],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],26],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[214,-1],[[209,[-1]]],67],[-1,[[207,[-1]]],[]],[[]],[[]],[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[[[207,[-1]]],2,[]],[[[207,[-1]]],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[208,[-1]],-2],[[208,[-1]]],19,[[206,[-1,212]],35]],[[[208,[-1]],-2],[[208,[-1]]],19,[[206,[-1,211]],35]],[[[208,[-1]],-2],[[208,[-1]]],19,[[140,[-1]],35]],[[[208,[-1]],-2],[[208,[-1]]],19,[[206,[-1,213]],35]],0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[212,212],[213,213],[211,211],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[26,2],[26,2],[[212,212],31],[[213,213],31],[[211,211],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[212,33],36],[[213,33],36],[[211,33],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[26,211],[[-1,-2],24,[43,44],45],[[-1,-2],24,[43,44],45],[[-1,-2],24,[43,44],45],[[212,-1],2,50],[[213,-1],2,50],[[211,-1],2,50],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[]],[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],[40,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,[[9,[5]]]],[40,40],[[-1,-2],2,[],[]],[[[143,[-1,-2]],[143,[-1,-2]]],98,19,[[144,[-1]]]],[[-1,-2],98,[],[]],[[],215],[215,[[29,[[107,[-1,40,-2]],108]]],[53,54,109],67],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[40,27],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[40]]],30],[26,2],[26,2],[26,2],[[[143,[-1,-2]],[143,[-1,-2]]],31,19,[[144,[-1]]]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],0,[[[143,[-1,-2]],33],36,19,[[144,[-1]]]],[[[143,[-1,-2]],33],36,19,[[144,[-1]]]],[[40,33],36],[[40,33],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,40],[[[2,[14,16]]],40],[113,40],[41,[[29,[215,42]]]],[41,[[29,[215,42]]]],[[-1,-2],24,[43,44],45],[[145,[143,[-1,-2]]],[[119,[[55,[118]]]]],19,[[144,[-1]]]],[[],[[9,[49]]]],[[[143,[-1,-2]],-3],2,19,[[144,[-1]]],50],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[[],27],[-1,[],[]],[[],26],[[],26],[[],26],[[152,150,[151,[26]],24],[[119,[[55,[118]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[[143,[-1,-2]],[143,[-1,-2]]],[[9,[98]]],19,[[144,[-1]]]],[[]],[[]],[[]],[[40,-1],29,69],[40,[[9,[5]]]],[[],27],[40,16],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[[],26],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[[215,41],[[29,[2,42]]]],[[215,41],[[29,[2,42]]]],[[216,-1,[17,[-2]],56],[[119,[[55,[118]]]]],[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[217,26],2],[[218,219],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[220,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[220,[[9,[5]]]],[153,153],[217,217],[221,221],[218,218],[222,222],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[153,14,[9,[14]]],[[55,[223]]]],[[153,14,[9,[14]]],[[55,[224]]]],[[153,14,[9,[14]]],[[55,[225]]]],[[153,14],[[55,[226]]]],[[],153],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[220,27],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[153,[[29,[14,-1]]],[]],[[220,33],36],[[220,33],36],[[153,33],36],[[217,33],36],[[221,33],36],[[218,33],36],[[222,33],36],[227,220],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[217,26],[221,26],[222,14],[[153,27],[[29,[217,220]]]],[[153,27],[[29,[221,220]]]],[[153,27],[[29,[218,220]]]],[[153,27],[[29,[222,220]]]],[[153,-1],[[29,[153,220]]],188],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[-1,[],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[218,219],[[]],[[]],[[]],[[]],[[]],[[]],[218,26],[[221,26],2],[[222,14],2],[220,[[9,[5]]]],[[153,14],[[55,[154]]]],[218,219],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[[221,228],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],[38,[[9,[8]]]],0,[62,[[119,[[55,[118]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[229,[-1,-2]]],38,[[15,[14]]],[[15,[16]]]],[38,[[9,[5]]]],[[[142,[-1]]],[[142,[-1]]],19],[230,230],[[[231,[-1]]],[[231,[-1]]],18],[232,232],[233,233],[[[234,[-1]]],[[234,[-1]]],18],[[[235,[-1,-2]]],[[235,[-1,-2]]],18,18],[[[229,[-1,-2]]],[[229,[-1,-2]]],18,18],[38,38],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[230,230],98],[[-1,-2],98,[],[]],[62,[[119,[[55,[118]]]]]],[[],[[231,[-1]]],[]],[[],236],[[236,-1],[[29,[[107,[-2,38,-1]],108]]],67,[53,54,109]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[38,27],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[230]]],30],[-1,[[29,[[231,[-2]]]]],30,237],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[38]]],30],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],0,[[230,230],31],[[[231,[-1]],[231,[-1]]],31,86],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],0,[[[229,[-1,-2]]],[[29,[-3,38]]],[[15,[14]]],[[15,[16]]],[]],[[[142,[-1]],33],36,19],[[230,33],36],[[[231,[-1]],33],36,35],[[232,33],36],[[233,33],36],[[[234,[-1]],33],36,35],[[[235,[-1,-2]],33],36,35,35],[[[229,[-1,-2]],33],36,35,35],[[38,33],36],[[38,33],36],[-1,-1,[]],[[[73,[-1]]],[[142,[-1]]],19],[-1,-1,[]],[[[231,[-1]]],[[9,[24]]],238],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,38],[-1,-1,[]],[[[2,[14,16]]],38],[113,38],[41,[[29,[236,42]]]],[41,[[29,[236,42]]]],[[],230],[[-1,-2],24,[43,44],45],[[62,-2,24],[[119,[[55,[118]]]]],19,[[15,[[142,[-1]]]],53,54]],[[],[[9,[49]]]],[[230,-1],2,50],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[-1,[],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[-1,38,52],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[232,-1],38,[]],[[233,-1],38,[]],[[[234,[-1]],-2],38,[[15,[14]]],[]],[[[235,[-1,-2]],-3],38,[[15,[14]]],[[15,[24]]],[]],[[[229,[-1,-2]],-3],38,[[15,[14]]],[[15,[16]]],[]],[230,31],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],0,0,0,0,0,0,[[230,230],[[9,[98]]]],[62,[[119,[[55,[118]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[230,-1],29,69],[[[231,[-1]],-2],29,68,69],[[38,-1],29,69],[38,[[9,[5]]]],0,[38,16],0,[62,[[119,[[55,[118]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[[236,41],[[29,[2,42]]]],[[236,41],[[29,[2,42]]]],[[62,-2],[[119,[[55,[118]]]]],19,[[15,[[93,[-1]]]],53,54]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],[37,[[9,[8]]]],[63,[[119,[[55,[118]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,[[9,[5]]]],[239,239],[37,37],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[239,239],98],[[-1,-2],98,[],[]],[63,[[169,[153]]]],[63,[[169,[153]]]],[[],239],[[],240],[[240,-1],[[29,[[107,[-2,37,-1]],108]]],67,[53,54,109]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[37,27],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[239]]],30],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[37]]],30],[26,2],[26,2],[26,2],[63,[[119,[[55,[118]]]]]],[63,[[119,[[55,[118]]]]]],[[239,239],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],0,[[239,33],36],[[37,33],36],[[37,33],36],[-1,-1,[]],[-1,-1,[]],[113,37],[-1,-1,[]],[14,37],[41,[[29,[240,42]]]],[41,[[29,[240,42]]]],[[-1,-2],24,[43,44],45],[[],[[9,[49]]]],[[239,-1],2,50],[[-1,-2],[[51,[-2,-3]]],[],[52,53,54],[]],[-1,[],[]],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],0,[63,[[119,[[55,[118]]]]]],[63,[[119,[[55,[118]]]]]],[63,153],[[239,239],[[9,[98]]]],[[]],[[]],[[]],[241,[[55,[154]]]],[[239,-1],29,69],[[37,-1],29,69],[37,[[9,[5]]]],[37,16],[63,[[119,[[55,[118]]]]]],[63,[[119,[[55,[118]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],0,[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[[240,41],[[29,[2,42]]]],[[240,41],[[29,[2,42]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],2],[134,2],0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[119,[[55,[118]]]]],[]],[26,[[119,[[55,[118]]]]]],[[[174,[-1]]],[[56,[[242,[-1]]]]],243],[[[174,[-1]],26],[[56,[[242,[-1]]]]],243],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[[[174,[-1]]],2,243],[-1,-1,[]],[[[174,[-1]]],[[60,[146,244]]],243],[[[243,[],[[245,[-1]]]],[147,[146]]],[[119,[[55,[118]]]]],[53,54]],[[],26],[[],[[174,[-1]]],[243,241]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[],[[29,[58,59]]]],[[[174,[-1]]],26,243],[[]],[[[174,[-1]],26],[[246,[146]]],243],[-1,[[119,[[55,[118]]]]],[]],[[[174,[[243,[],[[245,[-1]]]]]]],[[119,[[55,[118]]]]],[53,54]],[[[174,[-1]]],2,243],[[[174,[-1]],-2,-3],2,243,52,[118,53]],[[[174,[-1]]],2,243],[[[174,[-1]]],[],243],[[[174,[-1]],247],2,243],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,27,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[146,146],[244,244],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[146,146],98],[[244,244],98],[[-1,-2],98,[],[]],[[-1,-2],98,[],[]],[[],146],[[],244],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[-1,[[29,[146]]],30],[-1,[[29,[244]]],30],[[-1,-2],[[29,[[28,[-3,-4]]]]],[],[],[],[]],[26,2],[26,2],[[146,146],31],[[244,244],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[146,33],36],[[244,33],36],[-1,-1,[]],[-1,-1,[]],[[-1,-2],24,[43,44],45],[[-1,-2],24,[43,44],45],[[146,-1],2,50],[[244,-1],2,50],[[],27],[248,24],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[[57,[-1]]],[[57,[4]]],[]],[[249,-1],-2,[],[]],0,[[],[[29,[58,59]]]],[[],[[29,[58,59]]]],[[249,-1],26,[]],[[[151,[192]]],247],[[146,146],[[9,[98]]]],[[244,244],[[9,[98]]]],0,[[]],[[]],0,[[146,-1],29,69],[[244,-1],29,69],0,[[],27],0,[248,24],0,[-1,-2,[],[]],[-1,-2,[],[]],[[249,-1,-2],[[9,[[2,[-3,-4]]]]],[],[],[],[]],0,[[],26],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,70,[]],[-1,70,[]],[-1,27,[]],[-1,27,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[238,24]],"c":[],"p":[[5,"Private",3547],[1,"tuple"],[5,"Private",3547],[10,"Any",3548],[10,"Error",3549],[5,"Command",3550],[6,"Error",0],[5,"Backtrace",3551],[6,"Option",3552],[6,"QueryError",0],[5,"NotFoundSnafu",0],[5,"MissingSnafu",0],[5,"Snafu",0],[5,"String",3553],[10,"Into",3554],[6,"StatusCode",3555],[5,"Leaf",0],[10,"Clone",3556],[10,"NodeType",3557],[5,"Commitment",3558],[10,"Resolvable",0],[10,"Committable",3558],[10,"RngCore",3559],[1,"u64"],[5,"Options",0],[1,"usize"],[1,"str"],[5,"With",3560],[6,"Result",3561],[10,"Deserializer",3562],[1,"bool"],[6,"BlockError",3563],[5,"Formatter",3564],[5,"Error",3564],[10,"Debug",3564],[8,"Result",3564],[6,"Error",3231],[6,"Error",2828],[6,"Error",346],[6,"Error",2457],[5,"ArgMatches",3565],[8,"Error",3566],[10,"Hash",3567],[10,"Sized",3568],[10,"BuildHasher",3567],[5,"QuorumData",3569],[5,"SuccessThreshold",3570],[5,"SimpleCertificate",3570],[5,"Id",3571],[10,"Hasher",3567],[5,"IndentedSection",3572],[10,"Display",3564],[10,"Send",3568],[10,"Sync",3568],[5,"Box",3573],[5,"Arc",3574],[5,"Rc",3575],[5,"Layout",3576],[5,"LayoutError",3576],[5,"SystemContextHandle",3577],[10,"AvailabilityDataSource",346],[10,"NodeDataSource",2828],[10,"StatusDataSource",3231],[10,"UpdateDataSource",1202],[10,"VersionedDataSource",1202],[10,"NodeImplementation",3557],[10,"StaticVersionType",3578],[10,"Serialize",3579],[10,"Serializer",3579],[5,"TypeId",3548],[5,"InconsistentLeafError",346],[5,"LeafQueryData",346],[8,"BlockHash",346],[5,"PayloadQueryData",346],[5,"VidCommonQueryData",346],[5,"TransactionQueryData",346],[5,"FetchLeafSnafu",346],[5,"FetchBlockSnafu",346],[5,"FetchTransactionSnafu",346],[5,"InvalidTransactionIndexSnafu",346],[5,"CustomSnafu",346],[17,"TransactionIndex"],[17,"Iter"],[17,"InclusionProof"],[10,"QueryablePayload",346],[10,"PartialEq",3580],[10,"Eq",3580],[10,"Ord",3580],[10,"DeserializeOwned",3562],[17,"Item"],[10,"Iterator",3581],[6,"LeafId",346],[6,"BlockId",346],[5,"BlockQueryData",346],[5,"BlockSummaryQueryData",346],[5,"TransactionSummaryQueryData",346],[5,"RequestSnafu",346],[6,"Ordering",3580],[8,"VidCommon",0],[6,"Fetch",346],[10,"ErrorCompat",3582],[17,"Source"],[5,"NoneError",3582],[10,"IntoError",3582],[8,"Payload",0],[5,"Options",346],[5,"Api",3583],[6,"ApiError",3583],[10,"ReadState",3584],[8,"TransactionIndex",346],[8,"Transaction",0],[8,"LeafHash",346],[6,"RequestError",3585],[17,"LeafRange"],[17,"BlockRange"],[17,"PayloadRange"],[17,"VidCommonRange"],[10,"Future",3586],[5,"Pin",3587],[10,"Stream",3588],[10,"Unpin",3568],[10,"RangeBounds",3589],[8,"TransactionHash",346],[8,"VidCommitment",0],[8,"Header",0],[17,"Error"],[10,"UpdateAvailabilityData",346],[8,"VidShare",0],[17,"Output"],[10,"FnOnce",3590],[8,"Metadata",0],[8,"QuorumCertificate",3570],[10,"QueryableHeader",346],[5,"Duration",3591],[5,"ExtensibleDataSource",1202],[5,"MetricsDataSource",1202],[5,"Path",3592],[8,"FileSystemDataSource",1202],[8,"Result",3593],[10,"AvailabilityProvider",1334],[5,"AtomicStoreLoader",3594],[6,"WindowStart",2828],[6,"Snapshot",2457],[10,"MerklizedState",2457],[10,"MerklizedStateDataSource",2457],[5,"MockTypes",3428],[5,"Event",3595],[10,"Default",3596],[10,"TestableDataSource",3381],[8,"MerklePath",3597],[5,"Vec",3598],[10,"UpdateStateData",2457],[5,"PrometheusMetrics",2605],[10,"Metrics",3599],[5,"FetchingDataSource",1334],[5,"Builder",1334],[10,"AvailabilityStorage",1547],[5,"Pruner",1334],[5,"Config",1810],[8,"Builder",1528],[5,"Error",1810],[5,"FileSystemStorage",1565],[5,"StorageReadGuard",1334],[5,"StorageWriteGuard",1334],[5,"RwLockReadGuard",3600],[5,"RwLockWriteGuard",3600],[5,"SqlStorage",1810],[5,"Transaction",1810],[8,"QueryResult",0],[8,"SqlDataSource",1528],[6,"PersistenceError",3601],[5,"NoStorage",1617],[6,"DataSource",1671],[5,"MockNetwork",3381],[5,"PrunerCfg",1754],[10,"PruneStorage",1754],[10,"PrunerConfig",1754],[10,"PrunedHeightStorage",1754],[1,"u16"],[5,"Type",3602],[5,"Migration",1810],[5,"OffsetDateTime",3603],[10,"ToSql",3602],[5,"Chain",3593],[10,"Query",1810],[5,"LTree",1810],[10,"ToStatement",3604],[10,"IntoIterator",3605],[1,"never"],[5,"Config",3606],[10,"DoubleEndedIterator",3607],[1,"u8"],[1,"slice"],[6,"Type",3608],[5,"BytesMut",3609],[6,"IsNull",3602],[5,"Error",3610],[1,"array"],[10,"BorrowToSql",3602],[1,"u32"],[5,"TmpDb",2096],[5,"Fetcher",2152],[10,"LocalCallback",2152],[10,"Callback",2152],[10,"Request",2340],[10,"Provider",2194],[5,"TestProvider",2194],[5,"AnyProvider",2194],[5,"QueryServiceProvider",2194],[5,"NoFetching",2194],[5,"LeafRequest",2340],[5,"PayloadRequest",2340],[5,"VidCommonRequest",2340],[5,"Url",3611],[5,"Options",2457],[10,"UpdateStateStorage",2457],[5,"Counter",2605],[5,"Histogram",2605],[1,"f64"],[6,"MetricsError",2605],[5,"Gauge",2605],[5,"Label",2605],[10,"Counter",3599],[10,"Gauge",3599],[10,"Histogram",3599],[10,"Label",3599],[6,"Error",3612],[1,"i64"],[5,"CustomSnafu",2828],[5,"SyncStatus",2828],[5,"TimeWindowQueryData",2828],[5,"RequestSnafu",2828],[5,"QuerySnafu",2828],[5,"QueryVidSnafu",2828],[5,"QueryWindowSnafu",2828],[5,"Options",2828],[10,"Deserialize",3562],[10,"HeightIndexed",3545],[5,"MempoolQueryData",3231],[5,"Options",3231],[10,"UpdateStatusData",3231],[5,"RwLock",3600],[10,"DataSourceLifeCycle",3381],[5,"MockNodeImpl",3428],[17,"Storage"],[8,"SignatureKey",0],[8,"MockTransaction",3428],[8,"MockHeader",3428],[8,"MockPayload",3428],[15,"Custom",339],[15,"Availability",339],[15,"Node",339],[15,"Status",339],[15,"MerklizedState",339],[15,"Error",345],[15,"InvalidTransactionIndex",1194],[15,"Custom",1194],[15,"FetchLeaf",1194],[15,"FetchBlock",1194],[15,"FetchTransaction",1194],[15,"Request",1194],[6,"Storage",1671],[15,"NoStorage",1753],[5,"TestMerkleTreeMigration",2096],[15,"Custom",2601],[15,"Request",2601],[15,"Query",2601],[15,"NoSuchMetric",2824],[15,"NoSuchSubgroup",2824],[15,"Prometheus",2824],[15,"QueryVid",3222],[15,"QueryWindow",3222],[15,"Custom",3222],[15,"Request",3222],[15,"Query",3222],[15,"Internal",3375],[15,"Request",3375],[8,"MockQuorumProposal",3428],[8,"MockMerkleTree",3428],[8,"MockStorage",3428]],"b":[[149,"impl-Display-for-Leaf%3CTYPES%3E"],[150,"impl-Debug-for-Leaf%3CTYPES%3E"],[151,"impl-Debug-for-Error"],[152,"impl-Display-for-Error"],[156,"impl-Debug-for-QueryError"],[157,"impl-Display-for-QueryError"],[159,"impl-From%3CError%3E-for-Error"],[160,"impl-From%3CError%3E-for-Error"],[162,"impl-From%3CError%3E-for-Error"],[163,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[164,"impl-From%3CError%3E-for-Error"],[714,"impl-Display-for-LeafId%3CTypes%3E"],[715,"impl-Debug-for-LeafId%3CTypes%3E"],[716,"impl-Display-for-BlockId%3CTypes%3E"],[717,"impl-Debug-for-BlockId%3CTypes%3E"],[719,"impl-Display-for-InconsistentLeafError%3CTypes%3E"],[720,"impl-Debug-for-InconsistentLeafError%3CTypes%3E"],[733,"impl-Debug-for-Error"],[734,"impl-Display-for-Error"],[737,"impl-From%3CCommitment%3CLeaf%3CTypes%3E%3E%3E-for-LeafId%3CTypes%3E"],[738,"impl-From%3Cusize%3E-for-LeafId%3CTypes%3E"],[740,"impl-From%3Cusize%3E-for-BlockId%3CTypes%3E"],[741,"impl-From%3CCommitment%3C%3CTypes+as+NodeType%3E::BlockHeader%3E%3E-for-BlockId%3CTypes%3E"],[760,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[761,"impl-From%3CRequestError%3E-for-Error"],[1222,"impl-NodeDataSource%3CTypes%3E-for-ExtensibleDataSource%3CD,+U%3E"],[1223,"impl-StatusDataSource-for-ExtensibleDataSource%3CD,+U%3E"],[1239,"impl-FetchingDataSource%3CTypes,+FileSystemStorage%3CTypes%3E,+P%3E"],[1240,"impl-DataSourceLifeCycle-for-FetchingDataSource%3CMockTypes,+FileSystemStorage%3CMockTypes%3E,+P%3E"],[1354,"impl-StatusDataSource-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1355,"impl-NodeDataSource%3CTypes%3E-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1536,"impl-FetchingDataSource%3CTypes,+SqlStorage,+P%3E"],[1537,"impl-DataSourceLifeCycle-for-FetchingDataSource%3CMockTypes,+SqlStorage,+P%3E"],[1681,"impl-NodeDataSource%3CMockTypes%3E-for-DataSource"],[1682,"impl-StatusDataSource-for-DataSource"],[1823,"impl-ToSql-for-LTree"],[1824,"impl-FromSql%3C\'a%3E-for-LTree"],[1838,"impl-AsRef%3Cdyn+Error+%2B+Send+%2B+Sync%3E-for-Error"],[1839,"impl-AsRef%3Cdyn+Error%3E-for-Error"],[1919,"impl-Display-for-Error"],[1920,"impl-Debug-for-Error"],[1921,"impl-Debug-for-Migration"],[1922,"impl-Display-for-Migration"],[2252,"impl-Provider%3CTypes,+LeafRequest%3E-for-AnyProvider%3CTypes%3E"],[2253,"impl-Provider%3CTypes,+PayloadRequest%3E-for-AnyProvider%3CTypes%3E"],[2254,"impl-Provider%3CTypes,+VidCommonRequest%3E-for-AnyProvider%3CTypes%3E"],[2255,"impl-Provider%3CTypes,+PayloadRequest%3E-for-QueryServiceProvider%3CVer%3E"],[2256,"impl-Provider%3CTypes,+LeafRequest%3E-for-QueryServiceProvider%3CVer%3E"],[2257,"impl-Provider%3CTypes,+VidCommonRequest%3E-for-QueryServiceProvider%3CVer%3E"],[2523,"impl-Display-for-Snapshot%3CTypes,+T%3E"],[2524,"impl-Debug-for-Snapshot%3CTypes,+T%3E"],[2525,"impl-Debug-for-Error"],[2526,"impl-Display-for-Error"],[2530,"impl-From%3CQueryError%3E-for-Error"],[2531,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[2532,"impl-From%3CRequestError%3E-for-Error"],[2696,"impl-Debug-for-MetricsError"],[2697,"impl-Display-for-MetricsError"],[3007,"impl-Display-for-Error"],[3008,"impl-Debug-for-Error"],[3020,"impl-From%3CQueryError%3E-for-Error"],[3022,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[3023,"impl-From%3CRequestError%3E-for-Error"],[3298,"impl-Debug-for-Error"],[3299,"impl-Display-for-Error"],[3302,"impl-From%3CRequestError%3E-for-Error"],[3304,"impl-From%3CString%3E-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
