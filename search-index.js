var searchIndex = JSON.parse('{\
"hotshot_query_service":{"doc":"The HotShot Query Service is a minimal, generic query â€¦","t":"NGNGEGDCGINGLLLLLLLLAMLLLLLLLLLKALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFLMLALMLLLLLLKLLLLMLLMMMMIGDGDQNQDNDNENQNNNQNEDNNDQGGDQNQDNDNDNNNNDNDENDNDGNDINDEDGGGGQDILLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLKKKLLLLLLLLLLLLLLLLMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMKLMMLLLLLLLLLLLLMLMMMMMMLLLLLLLLLLLLLMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMQCIAKKDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEQNDDNIILLMLLLLLLLLLLKLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKKLLLLLKLLLMLLLLLLLLLLLLLLMM","n":["Availability","Block","Custom","Deltas","Error","Leaf","Options","QueryableBlock","QuorumCertificate","Resolvable","Status","Transaction","__clone_box","as_any","as_any","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","availability","availability","backtrace","borrow","borrow","borrow_mut","borrow_mut","catch_all","cause","clone","clone_into","commitment","data_source","default","deref","deref","deref_mut","deref_mut","description","deserialize","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","in_current_span","init","init","internal","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_genesis","leaf_commitment","run_standalone_service","serialize","signatures","source","status","status","status","to_owned","to_string","try_from","try_from","try_into","try_into","try_resolve","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","view_number","vzip","vzip","message","source","source","status","AvailabilityDataSource","BlockHash","BlockHeaderQueryData","BlockId","BlockQueryData","BlockRange","BlockStream","BlockStream","BlockStreamSnafu","Custom","CustomSnafu","Err","Error","Error","Error","Hash","Hash","Hash","InclusionProof","InconsistentBlock","InconsistentBlockError","InconsistentLeafError","InconsistentQc","InvalidTransactionIndex","InvalidTransactionIndexSnafu","Iter","LeafHash","LeafId","LeafQueryData","LeafRange","LeafStream","LeafStream","LeafStreamSnafu","Missing","MissingSnafu","NotFound","NotFoundSnafu","Number","Number","Number","Ok","Options","QueryBlock","QueryBlockSnafu","QueryError","QueryLeaf","QueryLeafSnafu","QueryProposals","QueryProposalsSnafu","QueryResult","QueryTransaction","QueryTransactionSnafu","QueryableBlock","Request","RequestSnafu","ResourceId","Snafu","Timestamp","TransactionHash","TransactionInclusionProof","TransactionIndex","TransactionIndex","TransactionQueryData","UpdateAvailabilityData","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","backtrace","backtrace","backtrace","block","block_hash","block_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","by_hash","by_hash","cause","cause","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","count_proposals","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enumerate","enumerate","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_block","get_block_range","get_block_with_transaction","get_hash","get_leaf","get_leaf_range","get_proposals","group_id","hash","hash","hash","hash","hash","header","header","header","header","header","header","height","height","height","height","height","height","height","in_current_span","in_current_span","in_current_span","in_current_span","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_block","insert_leaf","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_empty","is_empty","is_empty","iter","leaf","leaf","len","len","message","message","new","new","nth","nth","nth_transaction","nth_transaction","nth_transaction_with_proof","nth_transaction_with_proof","partial_cmp","proof","proof","proposer","proposer","qc","qc","reason","reason","resource","resource","resource","serialize","serialize","serialize","serialize","serialize","serialize","size","size","source","source","source","source","status","status","subscribe_blocks","subscribe_leaves","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","transaction","transaction","transaction","transaction","transaction_by_hash","transaction_by_hash","transaction_by_hash_with_proof","transaction_by_hash_with_proof","transaction_with_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","height","height","height","index","message","proposer","reason","reason","resource","resource","resource","source","source","source","source","source","status","block","leaf","leaf","qc","message","Error","FileSystemDataSource","UpdateDataSource","fs","metrics","update","FileSystemDataSource","as_any","as_any_mut","as_bits","as_mut","as_mut_bits","as_ref","block_height","borrow","borrow_mut","commit_version","count_proposals","create","create_with_store","deref","deref_mut","drop","encode_hex","encode_hex_upper","export_metrics","fmt","from","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_proposals","init","insert_block","insert_leaf","into","into_any","into_any_arc","into_any_rc","mempool_info","metrics","metrics","open","open_with_store","revert_version","skip_version","subscribe_blocks","subscribe_leaves","success_rate","try_as_bits","try_as_mut_bits","try_from","try_into","type_id","update","vzip","Error","Error","Internal","MempoolQueryData","Options","Request","StatusDataSource","UpdateStatusData","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","cmp","compare","default","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","export_metrics","extensions","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","group_id","hash","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","memory_footprint","mempool_info","metrics","partial_cmp","serialize","serialize","source","status","success_rate","to_owned","to_owned","to_string","transaction_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","reason","source"],"q":[[0,"hotshot_query_service"],[88,"hotshot_query_service::Error"],[92,"hotshot_query_service::availability"],[833,"hotshot_query_service::availability::Error"],[850,"hotshot_query_service::availability::InconsistentBlockError"],[854,"hotshot_query_service::availability::QueryError"],[855,"hotshot_query_service::data_source"],[861,"hotshot_query_service::data_source::fs"],[913,"hotshot_query_service::status"],[1027,"hotshot_query_service::status::Error"],[1029,"dyn_clone::sealed"],[1030,"core::any"],[1031,"core::error"],[1032,"clap_builder::builder::command"],[1033,"snafu::backtrace_shim"],[1034,"core::option"],[1035,"http_types::status_code"],[1036,"alloc::string"],[1037,"commit"],[1038,"core::result"],[1039,"serde::de"],[1040,"core::fmt"],[1041,"core::fmt"],[1042,"clap_builder"],[1043,"clap_builder::util::id"],[1044,"color_eyre::section"],[1045,"core::fmt"],[1046,"core::marker"],[1047,"alloc::boxed"],[1048,"alloc::sync"],[1049,"alloc::rc"],[1050,"hotshot::types::handle"],[1051,"core::future::future"],[1052,"hotshot_types::traits::node_implementation"],[1053,"hotshot_types::traits::node_implementation"],[1054,"core::any"],[1055,"commit"],[1056,"core::cmp"],[1057,"hotshot_types::traits::signature_key"],[1058,"core::pin"],[1059,"tide_disco::api"],[1060,"tide_disco::api"],[1061,"core::iter::traits::iterator"],[1062,"core::cmp"],[1063,"core::ops::range"],[1064,"core::hash"],[1065,"core::marker"],[1066,"hotshot_types::event"],[1067,"bitvec::slice"],[1068,"bitvec::order"],[1069,"atomic_store::error"],[1070,"std::path"],[1071,"atomic_store::atomic_store"],[1072,"core::iter::traits::collect"],[1073,"bitvec::ptr::span"]],"d":["","Block of data appened to a chain by consensus.","","State change indicated by a <code>Leaf</code>.","","Leaf type appended to a chain by consensus.","","","Certificate justifying a <code>Leaf</code>.","A reference to a <code>T</code> which can be resolved into a whole <code>T</code>.","","Item within a <code>Block</code>.","","","","","","","","","","","","","","","","","","","","Get a commitment to the underlying object.","Persistent storage and sources of data consumed by APIs.","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","If this QC is for the genesis block","commitment to previous leaf","Run an instance of the HotShot Query service with no â€¦","","assembled signature for certificate aggregation","","","","","","","","","","","Get the underlying object if it is available without â€¦","","","","","Which view this QC relates to","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BlockStream</code> variant","","SNAFU context selector for the <code>Error::Custom</code> variant","Contains the error value","","There was an error while trying to fetch the requested â€¦","","","","","A proof that a certain transaction exists in the block.","","","","","","SNAFU context selector for the â€¦","Enumerate the transactions in this block.","","","","","","","SNAFU context selector for the <code>Error::LeafStream</code> variant","The requested resource exists but is not currently â€¦","SNAFU context selector for the <code>QueryError::Missing</code> variant","The requested resource does not exist or is not known to â€¦","SNAFU context selector for the <code>QueryError::NotFound</code> variant","","","","Contains the success value","","","SNAFU context selector for the <code>Error::QueryBlock</code> variant","","","SNAFU context selector for the <code>Error::QueryLeaf</code> variant","","SNAFU context selector for the <code>Error::QueryProposals</code> â€¦","","","SNAFU context selector for the <code>Error::QueryTransaction</code> â€¦","A block whose contents (e.g. individual transactions) can â€¦","","SNAFU context selector for the <code>Error::Request</code> variant","","SNAFU context selector for the <code>QueryError::Error</code> variant","","","","","An index which can be used to efficiently retrieve a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Get the index of the transaction with a given hash, if it â€¦","Get the index of the transaction with a given hash, if it â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumerate the transactions in the block with their indices.","Enumerate the transactions in the block with their indices.","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the block containing a transaction with the given â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this block is empty of transactions.","Whether this block is empty of transactions.","","List the transaction indices in the block.","","","The number of transactions in the block.","","","","Collect information about a <code>Leaf</code>.","Collect information about a <code>Block</code>.","Get the index of the <code>nth</code> transaction.","Get the index of the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction, along with an inclusion proof.","Get the <code>nth</code> transaction, along with an inclusion proof.","","Get an inclusion proof for a transaction with a given â€¦","Get an inclusion proof for a transaction with a given â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a transaction by its block-specific index.","Get a transaction by its block-specific index.","","","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get a transaction by its block-specific index, along with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An extension trait for types which implement the update â€¦","","Get a handle for populating status metrics.","Update query state based on a new consensus event.","A data source for the APIs provided in this crate, backed â€¦","","","","","","","","","","Commit the current state to persistent storage.","","Create a new FileSystemDataSource with storage at <code>path</code>.","Create a new FileSystemDataSource using a persistent â€¦","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent â€¦","Revert changes made to persistent storage since the last â€¦","Advance the version of the persistent store without â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Export all available metrics in the Prometheus text format.","Additional API specification files to merge with â€¦","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,0,6,0,0,0,0,0,0,0,6,0,6,6,12,6,12,6,12,12,0,12,6,6,12,6,12,6,6,6,6,106,0,12,6,12,6,12,6,6,6,12,6,6,6,6,6,6,12,12,12,12,6,6,6,12,6,6,12,6,12,6,12,6,12,88,88,0,6,88,6,0,6,12,6,6,6,12,6,12,106,6,12,12,12,88,6,12,107,108,109,107,0,0,0,0,0,36,20,36,0,20,0,110,0,41,111,78,84,57,112,43,0,0,43,20,0,112,0,0,0,36,20,36,0,41,0,41,0,78,84,57,110,0,20,0,0,20,0,20,0,0,20,0,0,20,0,0,0,0,0,0,0,112,0,0,57,48,49,50,41,45,42,44,60,43,47,61,62,63,64,65,52,54,55,56,20,69,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,41,42,43,20,69,69,41,42,43,20,44,45,47,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,48,49,50,52,54,55,56,112,112,41,42,43,20,57,48,49,50,41,45,42,44,60,43,47,61,62,63,64,65,52,54,55,56,20,57,48,49,50,41,45,42,44,60,43,47,61,62,63,64,65,52,54,55,56,20,57,57,36,69,0,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,41,42,43,20,41,45,44,60,47,20,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,112,112,57,45,44,60,47,57,57,57,57,45,45,45,45,44,44,44,44,60,60,60,60,47,47,47,47,69,48,49,50,52,54,55,56,57,57,48,49,50,41,41,45,42,42,44,60,43,43,47,61,62,63,64,65,52,54,55,56,20,20,57,57,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,20,20,69,69,36,36,36,57,36,36,36,69,57,45,44,60,47,57,41,42,44,43,20,45,44,60,47,52,54,55,41,42,43,20,52,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,111,111,20,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,48,49,50,61,62,63,64,65,52,54,55,56,112,112,44,112,45,42,112,44,50,56,45,44,112,112,112,112,112,112,57,112,112,45,65,45,42,54,55,62,63,64,41,45,44,60,47,20,44,60,41,42,43,20,20,56,36,36,45,44,57,48,49,50,41,45,42,44,60,43,47,61,62,63,64,65,52,54,55,56,20,57,41,42,43,20,112,112,44,47,112,112,112,112,112,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,69,69,57,48,49,50,41,45,42,44,60,43,47,69,61,62,63,64,65,52,54,55,56,20,113,114,115,113,116,117,114,115,118,119,120,121,118,119,120,117,116,122,123,122,123,124,38,0,0,0,38,38,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,37,19,0,0,19,0,0,104,19,105,104,105,19,104,105,19,19,105,105,19,37,104,105,19,104,105,19,19,104,19,104,19,104,104,104,105,0,104,105,19,104,105,19,19,104,19,104,105,19,104,104,104,104,104,37,105,104,19,19,104,105,19,19,19,105,105,104,105,104,19,19,104,105,19,104,105,19,104,105,19,104,105,19,104,105,19,104,37,125,104,104,19,19,19,37,104,19,19,104,104,105,19,104,105,19,104,105,19,105,105,104,105,19,126,127],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,4,[]],[5,5],[5,5],0,0,[6,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[9,10],6],[6,[[8,[4]]]],[6,6],[[-1,-2],2,[],[]],[-1,[[11,[-2]]],[],[]],0,[[],12],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[6,14],[-1,[[15,[6]]],16],[13,2],[13,2],[[6,17],18],[[6,17],18],[19,6],[[[2,[10,9]]],6],[-1,-1,[]],[20,6],[-1,-1,[]],[21,[[15,[12,22]]]],[21,[[15,[12,22]]]],[[],[[8,[23]]]],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],[-1,[],[]],[[],13],[[],13],[-1,6,25],[-1,-2,[],[]],[-1,-2,[],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],0,0,[[12,-3,[32,[-1,-2]]],[[0,[33,26,27]]],34,[[35,[-1]]],[[36,[-1,-2]],37,[38,[-1,-2]]]],[[6,-1],15,39],0,[6,[[8,[4]]]],0,[6,9],0,[-1,-2,[],[]],[-1,10,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2,-1]]],[],[]],[-1,40,[]],[-1,40,[]],[[12,21],[[15,[2,22]]]],[[12,21],[[15,[2,22]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[41,[[8,[7]]]],[[[42,[-1,-2]]],[[8,[7]]],34,[[35,[-1]]]],[[[43,[-1,-2]]],[[8,[7]]],34,[[35,[-1]]]],[20,[[8,[7]]]],[[[44,[-1]]],[],34],[[[45,[-1,-2]]],[[46,[-1]]],34,[[35,[-1]]]],[[[47,[-1]]],[[46,[-1]]],34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[48,41],[49,41],[[[50,[-1]]],41,[[51,[10]]]],[[[52,[-1,-2]]],20,[[51,[53]]],[[51,[53]]]],[[[54,[-1,-2]]],20,[[51,[53]]],[[51,[10]]]],[[[55,[-1,-2]]],20,[[51,[53]]],[[51,[10]]]],[[[56,[-1,-2]]],20,[[51,[10]]],[[51,[9]]]],[[-1,11],8,[]],[[-1,11],8,[]],[41,[[8,[4]]]],[[[42,[-1,-2]]],[[8,[4]]],34,[[35,[-1]]]],[[[43,[-1,-2]]],[[8,[4]]],34,[[35,[-1]]]],[20,[[8,[4]]]],[[[57,[-1]]],[[57,[-1]]],58],[48,48],[49,49],[[[50,[-1]]],[[50,[-1]]],59],[41,41],[[[45,[-1,-2]]],[[45,[-1,-2]]],[59,34],[59,[35,[-1]]]],[[[42,[-1,-2]]],[[42,[-1,-2]]],[59,34],[59,[35,[-1]]]],[[[44,[-1]]],[[44,[-1]]],[59,34]],[[[60,[-1]]],[[60,[-1]]],[59,34]],[[[43,[-1,-2]]],[[43,[-1,-2]]],[59,34],[59,[35,[-1]]]],[[[47,[-1]]],[[47,[-1]]],[59,34]],[61,61],[[[62,[-1]]],[[62,[-1]]],59],[[[63,[-1]]],[[63,[-1]]],59],[[[64,[-1]]],[[64,[-1]]],59],[[[65,[-1]]],[[65,[-1]]],59],[[[52,[-1,-2]]],[[52,[-1,-2]]],59,59],[[[54,[-1,-2]]],[[54,[-1,-2]]],59,59],[[[55,[-1,-2]]],[[55,[-1,-2]]],59,59],[[[56,[-1,-2]]],[[56,[-1,-2]]],59,59],[20,20],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[57,[-1]],[57,[-1]]],66,58],[[-1,-2],66,[],[]],[[-1,67],[[68,[[29,[33]]]]],[]],[[],69],[69,[[15,[[70,[-1,20]],71]]],[26,27,72]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[41,14],[[[42,[-1,-2]]],14,34,[[35,[-1]]]],[[[43,[-1,-2]]],14,34,[[35,[-1]]]],[20,14],[-1,[[15,[41]]],16],[-1,[[15,[[45,[-2,-3]]]]],16,34,[[35,[-2]]]],[-1,[[15,[[44,[-2]]]]],16,34],[-1,[[15,[[60,[-2]]]]],16,34],[-1,[[15,[[47,[-2]]]]],16,34],[-1,[[15,[20]]],16],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[-1,[[29,[73]]],[]],[-1,[[29,[73]]],[]],[[[57,[-1]],[57,[-1]]],74,58],[[[45,[-1,-2]],[45,[-1,-2]]],74,[75,34],[75,[35,[-1]]]],[[[44,[-1]],[44,[-1]]],74,[75,34]],[[[60,[-1]],[60,[-1]]],74,[75,34]],[[[47,[-1]],[47,[-1]]],74,[75,34]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],0,[48,[[15,[-1,41]]],[]],[49,[[15,[-1,41]]],[]],[[[50,[-1]]],[[15,[-2,41]]],[[51,[10]]],[]],[[[52,[-1,-2]]],[[15,[-3,20]]],[[51,[53]]],[[51,[53]]],[]],[[[54,[-1,-2]]],[[15,[-3,20]]],[[51,[53]]],[[51,[10]]],[]],[[[55,[-1,-2]]],[[15,[-3,20]]],[[51,[53]]],[[51,[10]]],[]],[[[56,[-1,-2]]],[[15,[-3,20]]],[[51,[10]]],[[51,[9]]],[]],[[[57,[-1]],17],18,58],[[[57,[-1]],17],18,58],[[48,17],18],[[49,17],18],[[[50,[-1]],17],18,76],[[41,17],18],[[41,17],18],[[[45,[-1,-2]],17],18,[76,34],[76,[35,[-1]]]],[[[42,[-1,-2]],17],18,34,[[35,[-1]]]],[[[42,[-1,-2]],17],18,[76,34],[76,[35,[-1]]]],[[[44,[-1]],17],18,[76,34]],[[[60,[-1]],17],18,[76,34]],[[[43,[-1,-2]],17],18,34,[[35,[-1]]]],[[[43,[-1,-2]],17],18,[76,34],[76,[35,[-1]]]],[[[47,[-1]],17],18,[76,34]],[[61,17],18],[[[62,[-1]],17],18,76],[[[63,[-1]],17],18,76],[[[64,[-1]],17],18,76],[[[65,[-1]],17],18,76],[[[52,[-1,-2]],17],18,76,76],[[[54,[-1,-2]],17],18,76,76],[[[55,[-1,-2]],17],18,76,76],[[[56,[-1,-2]],17],18,76,76],[[20,17],18],[[20,17],18],[[[11,[-1]]],[[57,[-1]]],58],[13,[[57,[-1]]],58],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[10,9]]],20],[77,20],[-1,-1,[]],[21,[[15,[69,22]]]],[21,[[15,[69,22]]]],[[-1,-3],[[68,[[29,[33]]]]],[],[],[[51,[[78,[-2]]]],26,27]],[[-1,-2],[[68,[[29,[33]]]]],[],[[79,[13]],26]],[[-1,[80,[-2]]],[[68,[[29,[33]]]]],[],[]],[[-1,-2],53,[81,82],83],[[-1,-4],[[68,[[29,[33]]]]],[],[],[],[[51,[[84,[-2,-3]]]],26,27]],[[-1,-2],[[68,[[29,[33]]]]],[],[[79,[13]],26]],[[-1,67,[8,[13]]],[[68,[[29,[33]]]]],[]],[[],[[8,[23]]]],[[[57,[-1]],-2],2,58,85],[[[45,[-1,-2]]],[[86,[-1,-2]]],34,[[35,[-1]]]],[[[44,[-1]]],[[46,[-1]]],34],[[[60,[-1]]],[[46,[-1]]],34],[[[47,[-1]]],[[80,[-1]]],34],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],[[[44,[-1]]],[[60,[-1]]],34],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],[[[45,[-1,-2]]],53,34,[[35,[-1]]]],[[[44,[-1]]],53,34],[[[60,[-1]]],53,34],[[[47,[-1]]],53,34],0,0,0,[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[-1,[44,[-2]]],[[68,[[29,[33]]]]],[],[]],[[-1,[45,[-2,-3]]],[[68,[[29,[33]]]]],[],[],[]],[-1,20,25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[48,41],[49,41],[[[50,[-1]]],41,[[51,[10]]]],[61,20],[[[62,[-1]]],20,[[51,[10]]]],[[[63,[-1]]],20,[[51,[10]]]],[[[64,[-1]]],20,[[51,[10]]]],[[[65,[-1]]],20,[[51,[67]]]],[[[52,[-1,-2]]],20,[[51,[53]]],[[51,[53]]]],[[[54,[-1,-2]]],20,[[51,[53]]],[[51,[10]]]],[[[55,[-1,-2]]],20,[[51,[53]]],[[51,[10]]]],[[[56,[-1,-2]]],20,[[51,[10]]],[[51,[9]]]],[-1,74,[]],[-1,74,[]],[[[44,[-1]]],74,34],[-1,[],[]],[[[45,[-1,-2]]],[[87,[-1,-2]]],34,[[35,[-1]]]],0,[-1,13,[]],[[[44,[-1]]],13,34],0,0,[[[87,[-1,-2]],[88,[-1,-2]]],[[15,[[45,[-1,-2]],[42,[-1,-2]]]]],34,[[35,[-1]]]],[[[87,[-1,-2]],[88,[-1,-2]],[89,[-1]]],[[15,[[44,[-1]],[43,[-1,-2]]]]],34,[[35,[-1]]]],[[-1,13],8,[]],[[-1,13],8,[]],[[-1,13],8,[]],[[-1,13],8,[]],[[-1,13],[[8,[2]]],[]],[[-1,13],[[8,[2]]],[]],[[[57,[-1]],[57,[-1]]],[[8,[66]]],58],[-1,8,[]],[-1,8,[]],[[[45,[-1,-2]]],67,34,[[35,[-1]]]],0,[[[45,[-1,-2]]],[[88,[-1,-2]]],34,[[35,[-1]]]],0,0,0,0,0,0,[[41,-1],15,39],[[[45,[-1,-2]],-3],15,34,[[35,[-1]]],39],[[[44,[-1]],-2],15,34,39],[[[60,[-1]],-2],15,34,39],[[[47,[-1]],-2],15,34,39],[[20,-1],15,39],[[[44,[-1]]],53,34],[[[60,[-1]]],53,34],[41,[[8,[4]]]],[[[42,[-1,-2]]],[[8,[4]]],34,[[35,[-1]]]],[[[43,[-1,-2]]],[[8,[4]]],34,[[35,[-1]]]],[20,[[8,[4]]]],[20,9],0,[[-1,13],[[68,[[29,[33]]]]],[]],[[-1,13],[[68,[[29,[33]]]]],[]],[[[45,[-1,-2]]],90,34,[[35,[-1]]]],[[[44,[-1]]],90,34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,8,[]],[-1,8,[]],[[[44,[-1]],[91,[-1]]],[[8,[[47,[-1]]]]],34],[[[47,[-1]]],[[92,[-1]]],34],[[-1,11],8,[]],[[-1,11],8,[]],[[-1,11],[[8,[2]]],[]],[[-1,11],[[8,[2]]],[]],[-1,[[8,[2]]],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[[69,21],[[15,[2,22]]]],[[69,21],[[15,[2,22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[29,[93]]],[]],[[-1,[94,[-2,[87,[-2,-3]]]]],[[68,[[29,[33]]]]],[],[],[]],0,[-1,3,[]],[-1,3,[]],[-1,[[95,[-2,-3]]],[],[],96],[[[97,[-1,-2,-3]]],-3,34,[[35,[-1]]],[]],[-1,[[95,[-2,-3]]],[],[],96],[[[97,[-1,-2,-3]]],-3,34,[[35,[-1]]],[]],[[[97,[-1,-2,-3]]],[[68,[[29,[33]]]]],34,[[35,[-1]]],27],[-1,-2,[],[]],[-1,-2,[],[]],[[[97,[-1,-2,-3]]],[[15,[2,98]]],34,[[35,[-1]]],[]],[[[97,[-1,-2,-3]],67],[[68,[[29,[33]]]]],34,[[35,[-1]]],[26,27]],[[99,-1],[[15,[[97,[-2,-3,-1]],98]]],[],34,[[35,[-2]]]],[[100,-1],[[15,[[97,[-2,-3,-1]],98]]],[],34,[[35,[-2]]]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-2,[],[[102,[101]]]],[-1,-2,[],[[102,[101]]]],[[[97,[-1,-2,-3]]],[[68,[[29,[33]]]]],34,[[35,[-1]]],27],[[[97,[-1,-2,-3]],17],18,34,[[35,[-1]]],76],[-1,-1,[]],[[[97,[-1,-2,-3]],-4],[[68,[[29,[33]]]]],34,[[35,[-1]]],[26,27],[[51,[[78,[-1]]]],26,27]],[[[97,[-1,-2,-3]],-4],[[68,[[29,[33]]]]],34,[[35,[-1]]],[26,27],[[79,[13]],26]],[[[97,[-1,-2,-3]],[80,[-1]]],[[68,[[29,[33]]]]],34,[[35,[-1]]],[26,27]],[[[97,[-1,-2,-3]],-4],[[68,[[29,[33]]]]],34,[[35,[-1]]],[26,27],[[51,[[84,[-1,-2]]]],26,27]],[[[97,[-1,-2,-3]],-4],[[68,[[29,[33]]]]],34,[[35,[-1]]],[26,27],[[79,[13]],26]],[[[97,[-1,-2,-3]],67,[8,[13]]],[[68,[[29,[33]]]]],34,[[35,[-1]]],[26,27]],[[],13],[[[97,[-1,-2,-3]],[44,[-1]]],[[68,[[29,[33]]]]],34,[[35,[-1]]],26],[[[97,[-1,-2,-3]],[45,[-1,-2]]],[[68,[[29,[33]]]]],34,[[35,[-1]]],26],[-1,-2,[],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[97,[-1,-2,-3]]],[[68,[[29,[33]]]]],34,[[35,[-1]]],27],[[[97,[-1,-2,-3]]],[[29,[93]]],34,[[35,[-1]]],[]],[-1,[[29,[93,28]]],[]],[[99,-1],[[15,[[97,[-2,-3,-1]],98]]],[],34,[[35,[-2]]]],[[100,-1],[[15,[[97,[-2,-3,-1]],98]]],[],34,[[35,[-2]]]],[[[97,[-1,-2,-3]]],[[15,[2,98]]],34,[[35,[-1]]],[]],[[[97,[-1,-2,-3]]],[[15,[2,98]]],34,[[35,[-1]]],[]],[[[97,[-1,-2,-3]],13],[[68,[[29,[33]]]]],34,[[35,[-1]]],[26,27]],[[[97,[-1,-2,-3]],13],[[68,[[29,[33]]]]],34,[[35,[-1]]],[26,27]],[[[97,[-1,-2,-3]]],[[68,[[29,[33]]]]],34,[[35,[-1]]],27],[-1,[[15,[[95,[-2,-3]],[103,[-2]]]]],[],[],96],[-1,[[15,[[95,[-2,-3]],[103,[-2]]]]],[],[],96],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,40,[]],[[-1,[94,[-2]]],[[68,[[29,[33,28]]]]],[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,4,[]],[5,5],[5,5],[19,[[8,[7]]]],[-1,[[68,[[29,[33]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,[[8,[4]]]],[104,104],[19,19],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[104,104],66],[[-1,-2],66,[],[]],[[],104],[[],105],[105,[[15,[[70,[-1,19]],71]]],[26,27,72]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[19,14],[-1,[[15,[104]]],16],[-1,[[15,[19]]],16],[13,2],[13,2],[13,2],[[104,104],74],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[-1,[[68,[[29,[33]]]]],[]],0,[[104,17],18],[[19,17],18],[[19,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,19],[77,19],[21,[[15,[105,22]]]],[21,[[15,[105,22]]]],[[-1,-2],53,[81,82],83],[[],[[8,[23]]]],[[104,-1],2,85],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],[-1,[],[]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[29,[-1,28]]],[[29,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[30,[-1,28]]],[[30,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],[[[31,[-1,28]]],[[31,[3,28]]],[]],0,[-1,[[68,[[29,[33]]]]],[]],[-1,[[29,[93]]],[]],[[104,104],[[8,[66]]]],[[104,-1],15,39],[[19,-1],15,39],[19,[[8,[4]]]],[19,9],[-1,[[68,[[29,[33]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,10,[]],0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[[105,21],[[15,[2,22]]]],[[105,21],[[15,[2,22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[3,"Private",1029],[15,"tuple"],[8,"Any",1030],[8,"Error",1031],[3,"Command",1032],[4,"Error",0],[3,"Backtrace",1033],[4,"Option",1034],[4,"StatusCode",1035],[3,"String",1036],[3,"Commitment",1037],[3,"Options",0],[15,"usize"],[15,"str"],[4,"Result",1038],[8,"Deserializer",1039],[3,"Formatter",1040],[6,"Result",1040],[4,"Error",913],[4,"Error",92],[3,"ArgMatches",1041],[6,"Error",1042],[3,"Id",1043],[3,"IndentedSection",1044],[8,"Display",1040],[8,"Send",1045],[8,"Sync",1045],[3,"Global",1046],[3,"Box",1047],[3,"Arc",1048],[3,"Rc",1049],[3,"SystemContextHandle",1050],[8,"Future",1051],[8,"NodeType",1052],[8,"NodeImplementation",1052],[8,"AvailabilityDataSource",92],[8,"StatusDataSource",913],[8,"UpdateDataSource",855],[8,"Serializer",1053],[3,"TypeId",1030],[4,"QueryError",92],[3,"InconsistentLeafError",92],[4,"InconsistentBlockError",92],[3,"BlockQueryData",92],[3,"LeafQueryData",92],[6,"BlockHash",92],[3,"TransactionQueryData",92],[3,"NotFoundSnafu",92],[3,"MissingSnafu",92],[3,"Snafu",92],[8,"Into",1054],[3,"InvalidTransactionIndexSnafu",92],[15,"u64"],[3,"LeafStreamSnafu",92],[3,"BlockStreamSnafu",92],[3,"CustomSnafu",92],[4,"ResourceId",92],[8,"Committable",1037],[8,"Clone",1055],[3,"BlockHeaderQueryData",92],[3,"RequestSnafu",92],[3,"QueryLeafSnafu",92],[3,"QueryBlockSnafu",92],[3,"QueryTransactionSnafu",92],[3,"QueryProposalsSnafu",92],[4,"Ordering",1056],[3,"EncodedPublicKey",1057],[3,"Pin",1058],[3,"Options",92],[3,"Api",1059],[4,"ApiError",1059],[8,"ReadState",1060],[8,"Iterator",1061],[15,"bool"],[8,"PartialEq",1056],[8,"Debug",1040],[4,"RequestError",1062],[6,"BlockId",92],[8,"RangeBounds",1063],[6,"TransactionHash",92],[8,"Hash",1064],[8,"Sized",1045],[8,"BuildHasher",1064],[6,"LeafId",92],[8,"Hasher",1064],[6,"LeafHash",92],[6,"Leaf",0],[6,"QuorumCertificate",0],[6,"Block",0],[6,"Timestamp",92],[6,"TransactionIndex",92],[6,"Transaction",0],[8,"Metrics",1065],[3,"Event",1066],[3,"BitSlice",1067],[8,"BitOrder",1068],[3,"FileSystemDataSource",861],[4,"PersistenceError",1069],[3,"Path",1070],[3,"AtomicStoreLoader",1071],[15,"char"],[8,"FromIterator",1072],[4,"BitSpanError",1073],[3,"MempoolQueryData",913],[3,"Options",913],[8,"Resolvable",0],[13,"Custom",88],[13,"Availability",88],[13,"Status",88],[6,"QueryResult",92],[8,"UpdateAvailabilityData",92],[8,"QueryableBlock",92],[13,"InvalidTransactionIndex",833],[13,"LeafStream",833],[13,"BlockStream",833],[13,"Custom",833],[13,"QueryProposals",833],[13,"QueryLeaf",833],[13,"QueryBlock",833],[13,"QueryTransaction",833],[13,"Request",833],[13,"InconsistentBlock",850],[13,"InconsistentQc",850],[13,"Error",854],[8,"UpdateStatusData",913],[13,"Internal",1027],[13,"Request",1027]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
