var searchIndex = new Map(JSON.parse('[\
["hotshot_query_service",{"doc":"The HotShot Query Service is a minimal, generic query â€¦","t":"PPPGPIFIPFPPFPFIGIKIFPIIIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNQQQQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCOOOOHNNNNNCNNOCNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNONNNNNNNOOOOOOKIGFRFPFGRGPFPFPFPPRFPFRIGFRPPFPFRPKKPPFIIIIRFFKFRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNMMMMMMNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNOMNNONNNNNNNNNNNNNNNNNNNNNNNNONOOONNNNNNNNNNNNNNONNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOERFEIFEKKNNNNNNNNNNCNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNCNNNNNMNNCCCNNNNNNNNNMNNNHHKFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHIEFFEIENNNNNQENCNEHKEEECMMMMMMMMMMCCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNORKKFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKFKEENNNNNNNNNNNNNNNNNNNCCMMNNNNNNNFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKRFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOEPFGPFEKFPPFFPFPFFNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONMOONNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNOOOOOOOOGPFFPKKNNNNONNNNNNNNNNMNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNMNMNNNNNNNNNONNNNNNNNNNNNNNOOCCHHKIFSRKNNNNMMNNNNNNNNMNNNNNNNNMNNNNNNNNNIIIFIIIFNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONHNNOONNONNNNONNNNNNOONN","n":["Availability","Custom","Err","Error","Error","Header","Leaf","Metadata","Missing","MissingSnafu","Node","NotFound","NotFoundSnafu","Ok","Options","Payload","QueryError","QueryResult","Resolvable","SignatureKey","Snafu","Status","Transaction","VidCommitment","VidCommon","VidShare","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args_for_update","availability","availability","backtrace","backtrace","block_header","block_payload","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","catch_all","cause","cause","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commitment","commitment","create_random_transaction","data_source","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fail","fail","fail","fetching","fill_block_payload","fill_block_payload_unchecked","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_stored_view","genesis","get_block_header","get_block_payload","get_hash","get_height","get_justify_qc","get_parent_commitment","get_payload_commitment","get_proposer_id","get_view_number","group_id","hash","header","header","header","in_current_span","in_current_span","include_migrations","init","init","init","init","init","init","init","instantiate_availability_tests","instantiate_data_source_tests","instantiate_node_tests","instantiate_persistence_tests","instantiate_status_tests","internal","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","justify_qc","message","metrics","node","node","parent_commitment","port","proposer_id","run_standalone_service","serialize","serialize","serialize","source","source","status","status","status","status","testing","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","message","source","source","source","status","message","AvailabilityDataSource","BlockHash","BlockId","BlockQueryData","BlockRange","BlockSummaryQueryData","Custom","CustomSnafu","Error","Error","Fetch","FetchBlock","FetchBlockSnafu","FetchLeaf","FetchLeafSnafu","FetchTransaction","FetchTransactionSnafu","Hash","Hash","InclusionProof","InconsistentLeafError","InvalidTransactionIndex","InvalidTransactionIndexSnafu","Iter","LeafHash","LeafId","LeafQueryData","LeafRange","Number","Number","Options","PayloadHash","PayloadQueryData","PayloadRange","Pending","QueryableHeader","QueryablePayload","Ready","Request","RequestSnafu","Timestamp","TransactionHash","TransactionInclusionProof","TransactionIndex","TransactionIndex","TransactionQueryData","TransactionSummaryQueryData","UpdateAvailabilityData","VidCommonQueryData","VidCommonRange","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","backtrace","block_hash","block_hash","block_hash","block_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","by_hash","by_hash","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","common","compare","compare","context","data","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enumerate","enumerate","enumerate","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fail","fail","fail","fetch_timeout","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","genesis","genesis","genesis","genesis","get_block","get_block_range","get_block_with_transaction","get_hash","get_hash","get_leaf","get_leaf_range","get_payload","get_payload_range","get_vid_common","get_vid_common_range","group_id","hash","hash","hash","hash","hash","hash","hash","header","header","header","header","header","header","header","height","height","height","height","height","height","height","in_current_span","in_current_span","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_block","insert_leaf","insert_vid","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_future","is_empty","is_empty","is_empty","iter","leaf","leaf","len","len","map","message","metadata","new","new","new","nth","nth","nth_transaction","nth_transaction","nth_transaction_with_proof","nth_transaction_with_proof","num_transactions","num_transactions","partial_cmp","partial_cmp","payload","payload_hash","payload_hash","payload_hash","proof","proof","proposer","proposer","proposer","qc","qc_leaf","resolve","resource","resource","resource","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","size","size","source","source","status","status","subscribe_blocks","subscribe_blocks","subscribe_leaves","subscribe_leaves","subscribe_payloads","subscribe_payloads","subscribe_vid_common","subscribe_vid_common","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","transaction","transaction","transaction","transaction","transaction_by_hash","transaction_by_hash","transaction_by_hash","transaction_by_hash_with_proof","transaction_by_hash_with_proof","transaction_with_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_context","with_timeout","height","index","message","resource","resource","resource","source","status","AvailabilityProvider","Error","ExtensibleDataSource","FetchingDataSource","FileSystemDataSource","MetricsDataSource","SqlDataSource","UpdateDataSource","VersionedDataSource","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","as_mut","as_ref","availability_tests","block_height","block_height","block_height","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commit","connect","connect","connect","count_proposals","count_transactions","create","create","create","create","create_with_store","default","deref","deref","deref_mut","deref_mut","drop","drop","fetching","fmt","fmt","from","from","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_vid_common","get_vid_common_range","handle_event","handle_event","handle_event","init","init","inner","inner_mut","insert_block","insert_leaf","insert_vid","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","metrics","metrics","new","node_tests","open","open_with_store","payload_size","persistence_tests","populate_metrics","populate_metrics","reset","reset","reset","revert","revert","skip_version","sql","status_tests","storage","sync_status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update","vid_share","vzip","vzip","test_range","test_update","AvailabilityProvider","Builder","FetchingDataSource","Pruner","StorageReadGuard","StorageWriteGuard","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_height","block_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone_into","clone_into","commit","connect","count_proposals","count_transactions","create","create_with_store","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_proactive_fetching","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_vid_common","get_vid_common_range","init","init","init","init","init","insert_block","insert_leaf","insert_vid","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","metrics","new","open","open_with_store","payload_size","populate_metrics","revert","skip_version","storage","storage_mut","sync_status","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vid_share","vzip","vzip","vzip","vzip","vzip","with_major_scan_interval","with_minor_scan_interval","with_proactive_range_chunk_size","with_range_chunk_size","with_retry_delay","test_counters","test_proposer_queries","test_sync_status","test_vid_monotonicity","test_vid_recovery","test_vid_shares","test_reset","test_revert","Builder","Config","Error","Migration","Query","SqlDataSource","Transaction","client","connect","connect","create","handle_event","include_migrations","postgres","reset","testing","transaction","TmpDb","test_metrics","AvailabilityStorage","FileSystemStorage","NoStorage","SqlStorage","fs","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_vid_common","get_vid_common_range","no_storage","pruning","sql","FileSystemStorage","as_any","as_any_mut","block_height","borrow","borrow_mut","commit","count_proposals","count_transactions","create","create_with_store","deref","deref_mut","drop","fmt","from","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_vid_common","get_vid_common_range","init","insert_block","insert_leaf","insert_vid","into","into_any","into_any_arc","into_any_rc","open","open_with_store","payload_size","revert","skip_version","sync_status","try_from","try_into","type_id","vid_share","vzip","NoStorage","__clone_box","__clone_box","as_any","as_any_mut","block_height","borrow","borrow_mut","clone","clone_into","commit","count_proposals","count_transactions","default","deref","deref_mut","drop","fmt","from","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_vid_common","get_vid_common_range","init","insert_block","insert_leaf","insert_vid","into","into_any","into_any_arc","into_any_rc","payload_size","revert","sync_status","testing","to_owned","try_from","try_into","type_id","vid_share","vzip","DataSource","NoStorage","NoStorage","Sql","Sql","Storage","as_any","as_any","as_any_mut","as_any_mut","block_height","block_height","borrow","borrow","borrow_mut","borrow_mut","commit","connect","count_proposals","count_transactions","create","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_vid_common","get_vid_common_range","handle_event","init","init","insert_block","insert_leaf","insert_vid","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","metrics","payload_size","populate_metrics","reset","revert","setup","sync_status","try_from","try_from","try_into","try_into","type_id","type_id","vid_share","vzip","vzip","fetch_from_port","Error","PruneStorage","PrunedHeightStorage","PrunerCfg","PrunerConfig","__clone_box","__clone_box","as_any","as_any_mut","batch_size","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_disk_usage","get_pruning_config","init","interval","into","into_any","into_any_arc","into_any_rc","load_pruned_height","max_usage","minimum_retention","new","prune","pruning_threshold","save_pruned_height","set_pruning_config","target_retention","to_owned","try_from","try_into","type_id","validate","vzip","with_batch_size","with_interval","with_max_usage","with_minimum_retention","with_pruning_threshold","with_target_retention","Config","Error","Migration","Query","SqlStorage","Transaction","__clone_box","__clone_box","__clone_box","__clone_box","applied_on","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","backtrace","block_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","chain","checksum","client","client","client","clone","clone","clone_into","clone_into","cmp","commit","compare","connect","connect","context","count_proposals","count_transactions","database","default","default_migrations","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast_mut","downcast_ref","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","execute","execute_many","execute_many_with_retries","execute_one","execute_one_with_retries","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get_block","get_block_range","get_block_with_transaction","get_disk_usage","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","get_pruning_config","get_vid_common","get_vid_common_range","header","header","host","include_dir","include_migrations","init","init","init","init","init","insert_block","insert_leaf","insert_vid","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","load_pruned_height","migrations","msg","name","new","no_migrations","partial_cmp","password","payload_size","port","postgres","prefix","prune","pruner_cfg","query","query_one","query_one_static","query_opt","query_opt_static","query_static","reset_schema","revert","root_cause","save_pruned_height","schema","set_pruning_config","sql","sync_status","testing","tls","to_owned","to_owned","to_string","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unapplied","upsert","user","version","vid_share","vzip","vzip","vzip","vzip","vzip","TmpDb","as_any","as_any_mut","borrow","borrow_mut","config","deref","deref_mut","drop","drop","fmt","from","host","init","init","into","into_any","into_any_arc","into_any_rc","port","try_from","try_into","type_id","vzip","Callback","Fetcher","LocalCallback","Provider","Request","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","provider","request","run","run","spawn_fetch","to_owned","try_from","try_into","type_id","vzip","with_retry_delay","AnyProvider","NoFetching","Provider","QueryServiceProvider","TestProvider","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fail","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","new","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unblock","unfail","vzip","vzip","vzip","vzip","with_block_provider","with_leaf_provider","with_provider","with_vid_common_provider","LeafRequest","PayloadRequest","Request","Response","VidCommonRequest","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Counter","Gauge","Histogram","Label","MetricsError","NoSuchMetric","NoSuchSubgroup","Prometheus","PrometheusMetrics","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_point","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_counter","create_gauge","create_histogram","create_label","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","export","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get","get","get_counter","get_gauge","get_histogram","get_label","get_subgroup","header","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mean","sample_count","set","set","source","subgroup","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","vzip","vzip","label","namespace","path","source","BlockId","Custom","CustomSnafu","Error","InvalidSignatureKey","InvalidSignatureKeySnafu","LeafQueryData","NodeDataSource","Options","Query","QueryProposals","QueryProposalsSnafu","QuerySnafu","QueryVid","QueryVidSnafu","Request","RequestSnafu","SyncStatus","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","count_proposals","count_transactions","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","fully_synced","get_hash","get_proposals","group_id","hash","header","in_current_span","init","init","init","init","init","init","init","init","init","internal","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","is_fully_synced","message","missing_blocks","missing_leaves","missing_vid_common","missing_vid_shares","partial_cmp","payload_size","proposer","pruned_height","serialize","serialize","source","status","status","sync_status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vid_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","block","message","proposer","source","source","source","source","status","Error","Internal","MempoolQueryData","Options","Request","StatusDataSource","UpdateStatusData","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","cmp","compare","consensus_metrics","consensus_metrics","default","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","elapsed_time_since_last_decide","elapsed_time_since_last_decide","eq","equivalent","equivalent","equivalent","equivalent","extensions","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","group_id","hash","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","memory_footprint","mempool_info","mempool_info","metrics","partial_cmp","populate_metrics","serialize","serialize","source","status","success_rate","success_rate","to_owned","to_owned","to_string","transaction_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","reason","source","consensus","mocks","setup_test","sleep","DataSourceLifeCycle","MockDataSource","MockNetwork","NUM_NODES","Storage","TestableDataSource","as_any","as_any_mut","borrow","borrow_mut","connect","create","data_source","data_source_index","deref","deref_mut","drop","drop","from","handle","handle_event","init","init","into","into_any","into_any_arc","into_any_rc","num_nodes","proposer","reset","setup","shut_down","start","storage","submit_transaction","try_from","try_into","type_id","vzip","MockHeader","MockMembership","MockNetwork","MockNodeImpl","MockPayload","MockQuorumProposal","MockTransaction","MockTypes","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","block_header","block_number","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","get_hash","get_hash","hash","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","iter","justify_qc","len","mock_transaction","partial_cmp","partial_cmp","payload_commitment","proposer_id","serialize","serialize","timeout_certificate","timestamp","to_owned","to_owned","transaction_with_proof","transactions","try_from","try_from","try_into","try_into","type_id","type_id","upgrade_certificate","view_number","vzip","vzip"],"q":[[0,"hotshot_query_service"],[283,"hotshot_query_service::Error"],[288,"hotshot_query_service::QueryError"],[289,"hotshot_query_service::availability"],[1004,"hotshot_query_service::availability::Error"],[1012,"hotshot_query_service::data_source"],[1127,"hotshot_query_service::data_source::availability_tests"],[1129,"hotshot_query_service::data_source::fetching"],[1279,"hotshot_query_service::data_source::node_tests"],[1285,"hotshot_query_service::data_source::persistence_tests"],[1287,"hotshot_query_service::data_source::sql"],[1304,"hotshot_query_service::data_source::sql::testing"],[1305,"hotshot_query_service::data_source::status_tests"],[1306,"hotshot_query_service::data_source::storage"],[1324,"hotshot_query_service::data_source::storage::fs"],[1370,"hotshot_query_service::data_source::storage::no_storage"],[1418,"hotshot_query_service::data_source::storage::no_storage::testing"],[1487,"hotshot_query_service::data_source::storage::no_storage::testing::Storage"],[1488,"hotshot_query_service::data_source::storage::pruning"],[1537,"hotshot_query_service::data_source::storage::sql"],[1747,"hotshot_query_service::data_source::storage::sql::testing"],[1771,"hotshot_query_service::fetching"],[1806,"hotshot_query_service::fetching::provider"],[1924,"hotshot_query_service::fetching::request"],[2020,"hotshot_query_service::metrics"],[2195,"hotshot_query_service::metrics::MetricsError"],[2199,"hotshot_query_service::node"],[2485,"hotshot_query_service::node::Error"],[2493,"hotshot_query_service::status"],[2614,"hotshot_query_service::status::Error"],[2616,"hotshot_query_service::testing"],[2620,"hotshot_query_service::testing::consensus"],[2659,"hotshot_query_service::testing::mocks"],[2753,"dyn_clone::sealed"],[2754,"dyn_clone::sealed"],[2755,"core::error"],[2756,"clap_builder::builder::command"],[2757,"snafu::backtrace_shim"],[2758,"core::option"],[2759,"alloc::string"],[2760,"core::convert"],[2761,"tide_disco::status"],[2762,"core::clone"],[2763,"hotshot_types::traits::node_implementation"],[2764,"commit"],[2765,"commit"],[2766,"core::result"],[2767,"serde::de"],[2768,"hotshot_types::data"],[2769,"core::fmt"],[2770,"core::fmt"],[2771,"clap_builder"],[2772,"hotshot_types::traits::storage"],[2773,"core::hash"],[2774,"core::marker"],[2775,"core::hash"],[2776,"hotshot_types::simple_certificate"],[2777,"hotshot_types::simple_certificate"],[2778,"core::hash"],[2779,"core::fmt"],[2780,"alloc::sync"],[2781,"alloc::rc"],[2782,"hotshot::types::handle"],[2783,"hotshot_types::traits::node_implementation"],[2784,"serde::ser"],[2785,"core::cmp"],[2786,"core::cmp"],[2787,"snafu"],[2788,"tide_disco::api"],[2789,"tide_disco::request"],[2790,"core::future::future"],[2791,"core::pin"],[2792,"futures_core::stream"],[2793,"core::marker"],[2794,"core::ops::function"],[2795,"hotshot_types::simple_certificate"],[2796,"std::path"],[2797,"anyhow"],[2798,"atomic_store::atomic_store"],[2799,"hotshot_types::event"],[2800,"core::default"],[2801,"hotshot_types::traits::metrics"],[2802,"async_lock::rwlock"],[2803,"async_lock::rwlock"],[2804,"time::offset_date_time"],[2805,"std::backtrace"],[2806,"anyhow"],[2807,"tokio_postgres::to_statement"],[2808,"core::iter::traits::collect"],[2809,"tokio_postgres::config"],[2810,"refinery_core::runner"],[2811,"refinery_core::error"],[2812,"postgres_types"],[2813,"url"],[2814,"hotshot_types::traits::metrics"],[2815,"async_lock::rwlock"]],"d":["","","Contains the error value","","There was an error while trying to fetch the requested â€¦","","This is the consensus-internal analogous concept to a â€¦","","The requested resource exists but is not currently â€¦","SNAFU context selector for the <code>QueryError::Missing</code> variant","","The requested resource does not exist or is not known to â€¦","SNAFU context selector for the <code>QueryError::NotFound</code> variant","Contains the success value","","","","","A reference to a <code>T</code> which can be resolved into a whole <code>T</code>.","","SNAFU context selector for the <code>QueryError::Error</code> variant","","Item within a <code>Payload</code>.","VID commitment type","VID common type","VID share type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Queries for HotShot chain state.","","","","Block header.","Optional block payload.","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","Get a commitment to the underlying object.","","","Persistent storage and sources of data consumed by APIs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Fetching missing data from remote providers.","Fill this leaf with the block payload.","Fill this leaf with the block payload, without checking â€¦","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create a leaf from information stored about a view.","Create a new leaf from its components.","The block header contained in this leaf.","Optional block payload.","","Height of this leaf in the chain.","The QC linking this leaf to its parent in the chain.","Commitment to this leafâ€™s parent.","A commitment to the block payload contained in this leaf.","Identity of the network participant who proposed this leaf.","Time when this leaf was created.","","","","","","","","Embed migrations from the given directory into the current â€¦","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Per spec, justification","","","A nodeâ€™s view of a HotShot chain","","The hash of the parent <code>Leaf</code> So we can ask if it extends","","the proposer id of the leaf","Run an instance of the HotShot Query service with no â€¦","","","","","","Queries for node-specific state and uncommitted data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the underlying object if it is available without â€¦","","","","","","","","","","","CurView from leader when proposing leaf","","","","","","","","","","","","","","An interface for querying a HotShot blockchain.","A block hash is the hash of the block header.","","","","","","SNAFU context selector for the <code>Error::Custom</code> variant","","","An in-progress request to fetch some data.","","SNAFU context selector for the <code>Error::FetchBlock</code> variant","","SNAFU context selector for the <code>Error::FetchLeaf</code> variant","","SNAFU context selector for the <code>Error::FetchTransaction</code> â€¦","","","A proof that a certain transaction exists in the block.","","","SNAFU context selector for the â€¦","Enumerate the transactions in this block.","","","","","","","","","","","","","A block payload whose contents (e.g. individual â€¦","","","SNAFU context selector for the <code>Error::Request</code> variant","","","","","An index which can be used to efficiently retrieve a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Get the index of the transaction with a given hash, if it â€¦","Get the index of the transaction with a given hash, if it â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>Fetch</code> to a <code>Result</code> with the provided error â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumerate the transactions in the block with their indices.","Enumerate the transactions in the block with their indices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Timeout for failing requests due to missing data.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the block containing a transaction with the given â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this block is empty of transactions.","Whether this block is empty of transactions.","","List the transaction indices in the block.","","","The number of transactions in the block.","","Transform the result of this fetch.","","","Collect information about a <code>Leaf</code>.","","","Get the index of the <code>nth</code> transaction.","Get the index of the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction, along with an inclusion proof.","Get the <code>nth</code> transaction, along with an inclusion proof.","","","","","","","","","Get an inclusion proof for a transaction with a given â€¦","Get an inclusion proof for a transaction with a given â€¦","","","","","","Wait for the data to become available, if it is not â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a transaction by its block-specific index.","Get a transaction by its block-specific index.","","","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get a transaction by its block-specific index, along with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the requested data if it is available immediately.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>Fetch</code> to a <code>Result</code> with the provided error â€¦","Wait for the requested data to become available, but only â€¦","","","","","","","","","","","Wrapper to add extensibility to an existing data source.","","A data source for the APIs provided in this crate, backed â€¦","A minimal data source for the status API provided in this â€¦","","An extension trait for types which implement the update â€¦","A data source with an atomic transaction-based â€¦","","","","","","","","","","","Generic tests we can instantiate for all the availability â€¦","","","","","","","","","","","","Atomically commit to all outstanding modifications to the â€¦","","","","","","","Create a new FileSystemDataSource with storage at <code>path</code>.","","","","Create a new FileSystemDataSource using a persistent â€¦","","","","","","","","Asynchronous retrieval of missing data.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Access the underlying data source.","Mutably access the underlying data source.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Generic tests we can instantiate for all the node data â€¦","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent â€¦","","Generic tests we can instantiate for any data source with â€¦","","","","","","Erase all oustanding modifications to the data.","","Advance the version of the persistent store without â€¦","","Generic tests we can instantiate for all the status data â€¦","Persistent storage for data sources.","","","","","","","","","","Update query state based on a new consensus event.","","","","","","A provider which can be used as a fetcher by the â€¦","Builder for <code>FetchingDataSource</code> with configuration.","The most basic kind of data source.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a <code>FetchingDataSource</code> with these options.","Build a <code>FetchingDataSource</code> with the given <code>storage</code> and â€¦","","","","","","Connect to a remote database.","","","Create a new FileSystemDataSource with storage at <code>path</code>.","Create a new FileSystemDataSource using a persistent â€¦","","","","","","","","","","","","","","Run without proactive fetching.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Construct a new builder with the given storage and fetcher â€¦","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent â€¦","","","","Advance the version of the persistent store without â€¦","Obtain direct, read-only access to the underlying local â€¦","Obtain direct, mutable access the underlying local storage.","","","","Access the transaction which is accumulating all â€¦","","","","","","","","","","","","","","","","","","","","","","Set the interval (denominated in minor scans) between â€¦","Set the time interval between minor proactive fetching â€¦","Set the number of items to process at a time when scanning â€¦","Set the number of items to process at a time when loading â€¦","Set the maximum delay between retries of fetches.","","","","","","","","","","","The <code>Error</code> type, a wrapper around a dynamic error type.","Represents a schema migration to be run on the database, â€¦","","A data source for the APIs provided in this crate, backed â€¦","","","Connect to a remote database.","","","","Embed migrations from the given directory into the current â€¦","","","","Access the transaction which is accumulating all â€¦","","","Persistent storage for a HotShot blockchain.","","","","","","","","","","","","","","","","","","Storage for the APIs provided in this crate, backed by a â€¦","","","","","","","","","Create a new FileSystemStorage with storage at <code>path</code>.","Create a new FileSystemStorage using a persistent storage â€¦","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","Open an existing FileSystemStorage from storage at <code>path</code>.","Open an existing FileSystemStorage using a persistent â€¦","","","Advance the version of the persistent store without â€¦","","","","","","","Mock storage implementation which doesnâ€™t actually store â€¦","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Either Postgres or no storage.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the block containing a transaction with the given â€¦","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of blocks to remove in a single pruning operation.","","","","","","","","","","Returns the argument unchanged.","","","","Pruning interval","Calls <code>U::from(self)</code>.","","","","","Maximum disk usage (in basis points).","Minimum data retention period","","","Disk space threshold (in bytes).","","","Target data retention period","","","","","","","","","","","","","Postgres client config.","The <code>Error</code> type, a wrapper around a dynamic error type.","Represents a schema migration to be run on the database, â€¦","","Storage for the APIs provided in this crate, backed by a â€¦","An atomic SQL transaction.","","","","","Get the timestamp from when the Migration was applied. <code>None</code>â€¦","","","","","","","","","","","","","Get the backtrace for this Error.","","","","","","","","","","","","Connect to the database, setting options on the underlying â€¦","An iterator of the chain of source errors contained by â€¦","Get the Migration checksum. Checksum is formed from the â€¦","","","","","","","","","","","Connect to the database with this config.","Connect to a remote database.","Wrap the error value with additional context.","","","Set the name of the database to connect to.","","The migrations requied to build the default schema for â€¦","","","","","","","","","","","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","","","","","","","","","","","","Execute a statement against the underlying database.","Execute a statement that is expected to modify at least â€¦","Execute a statement that is expected to modify at least â€¦","Execute a statement that is expected to modify exactly one â€¦","Execute a statement that is expected to modify exactly one â€¦","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Set the hostname of the database server.","Embed the contents of a directory in your crate.","Embed migrations from the given directory into the current â€¦","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","","Add custom migrations to run when connecting to the â€¦","Create a new error object from a printable error message.","Get the Migration Name","Create a new error object from any error type.","Skip all migrations when connecting to the database.","","Set a password for connecting to the database.","","Set the port on which to connect to the database.","","Get the Prefix","","","","Query the underlying SQL database, returning exactly one â€¦","Query the underlying SQL database with no parameters, â€¦","Query the underlying SQL database, returning zero or one â€¦","Query the underlying SQL database with no parameters, â€¦","Query the underlying SQL database with no parameters.","Reset the schema on connection.","","The lowest level cause of this error â€” this errorâ€™s â€¦","","Set the name of the schema to use for queries.","","","","","Use TLS for an encrypted connection to the database.","","","","","Access the transaction which is accumulating all â€¦","","","","","","","","","","","","","","","","Create an unapplied migration, name and version are parsed â€¦","","Set the DB user to connect as.","Get the Migration version","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","A callback to process the result of a request.","Management of concurrent requests to fetch resources.","A callback to process the result of a request.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Asynchronous fetching from external data availability â€¦","Requests for fetching resources.","","","Fetch a resource, if it is not already being fetched.","","","","","","","Adaptor combining multiple data availability providers.","Trivial <code>Provider</code> where fetching always fails.","A provider which is able to satisfy requests for data of â€¦","Data availability provider backed by another instance of â€¦","Adaptor to add test-only functionality to an existing â€¦","","","","","","","","","","","","","","","","","Delay fetch requests until <code>unblock</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cause subsequent requests to fail.","Fetch a resource.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow blocked fetch requests to proceed.","Stop requests from failing as a result of a previous call â€¦","","","","","Add a sub-provider which fetches blocks.","Add a sub-provider which fetches leaves.","Add a sub-provider which fetches both blocks and leaves.","Add a sub-provider which fetches VID common data.","A request for a leaf with a given height.","A request for a payload with a given commitment.","A request for a resource.","The type of resource that will be returned as a successful â€¦","A request for VID common data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","A Counter metric.","A Gauge metric.","A Histogram metric.","A Label metric.","","","","","A Prometheus-based implementation of a Metrics registry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a counter in this sub-group by name.","Get a gauge in this sub-group by name.","Get a histogram in this sub-group by name.","Get a label in this sub-group by name.","Get a (possibly nested) subgroup of this group by its path.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::Custom</code> variant","","","SNAFU context selector for the <code>Error::InvalidSignatureKey</code> â€¦","","","","","","SNAFU context selector for the <code>Error::QueryProposals</code> â€¦","SNAFU context selector for the <code>Error::Query</code> variant","","SNAFU context selector for the <code>Error::QueryVid</code> variant","","SNAFU context selector for the <code>Error::Request</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codedditional API specification files to merge with â€¦","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Backing storage for the data source.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","Setup runs after setting up the network but before â€¦","","","","","","","","","","","","","","","","","","","","","","","","","The block header to append","Block number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Per spec, justification","","","","","VID commitment to the payload.","the propser id","","","Possible timeout certificate.  Only present if the â€¦","","","","","List of transactions.","","","","","","","Possible upgrade certificate, which the leader may â€¦","CurView from leader when proposing leaf","",""],"i":[7,7,159,0,10,0,0,0,10,0,7,10,0,159,0,0,0,0,0,0,0,7,0,0,0,0,17,17,7,7,11,11,12,12,13,13,10,10,17,7,11,12,13,10,25,17,7,11,12,13,10,25,7,10,25,25,0,25,7,10,17,17,17,7,11,12,13,10,25,17,7,11,12,13,10,25,11,12,13,7,7,10,17,7,11,12,13,10,17,7,11,12,13,10,17,21,17,17,0,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,7,10,17,7,10,17,7,11,12,13,10,25,17,17,17,17,17,11,12,13,0,17,17,17,17,7,7,11,12,13,10,10,17,7,7,7,7,7,11,12,13,10,25,25,25,17,17,17,17,17,17,17,17,17,17,17,25,17,17,7,10,7,10,0,17,7,11,12,13,10,25,0,0,0,0,0,7,17,7,11,12,13,10,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,11,12,13,17,13,0,0,25,17,25,17,0,17,7,10,7,10,0,7,10,25,0,17,7,11,12,13,10,17,7,10,17,7,11,12,13,10,25,17,7,11,12,13,10,25,21,17,17,7,11,12,13,10,25,25,25,17,17,7,11,12,13,10,25,230,231,232,233,230,234,0,0,0,0,58,0,37,0,0,123,0,37,0,37,0,37,0,88,89,81,0,37,0,81,0,0,0,58,88,89,0,89,0,58,96,0,0,96,37,0,0,0,0,0,81,0,0,0,0,58,88,88,89,89,68,68,67,67,90,90,70,70,71,71,72,72,91,91,92,92,93,93,73,73,74,74,75,75,76,76,77,77,37,37,102,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,67,37,102,102,67,37,68,70,71,72,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,73,74,75,76,77,81,81,67,37,88,89,68,67,90,70,71,72,91,92,93,73,74,75,76,77,37,88,89,68,67,90,70,71,72,91,92,93,73,74,75,76,77,37,88,89,71,88,89,96,70,102,0,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,67,37,68,90,70,71,72,91,92,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,81,81,90,88,89,68,90,70,71,72,91,92,88,88,88,88,89,89,89,89,68,68,68,68,90,90,90,90,70,70,70,70,71,71,71,71,72,72,72,72,91,91,91,91,92,92,92,92,102,73,74,75,76,77,102,88,88,89,89,68,67,67,90,70,71,72,91,92,93,73,74,75,76,77,37,37,96,88,88,88,89,89,89,68,67,90,70,70,71,72,91,91,92,102,93,73,74,75,76,77,37,37,37,102,102,68,90,70,71,58,58,58,88,89,58,58,58,58,58,58,102,88,89,68,90,70,72,91,88,89,68,67,90,91,37,68,90,70,71,72,91,76,67,37,76,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,123,123,123,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,93,73,74,75,76,77,96,81,81,90,81,68,67,81,90,96,77,90,68,90,71,81,81,81,81,81,81,90,91,88,89,90,68,90,71,81,81,68,90,91,68,67,96,73,74,75,68,90,70,71,72,91,92,37,90,70,91,67,37,37,77,58,58,58,58,58,58,58,58,130,88,89,68,67,90,70,71,72,91,92,93,73,74,75,76,77,37,88,89,67,37,81,81,90,72,81,81,90,81,81,81,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,102,102,96,88,89,68,67,90,70,71,72,91,92,102,93,73,74,75,76,77,37,96,96,235,235,236,237,238,239,240,236,0,62,0,0,0,0,0,0,0,132,132,133,133,132,133,132,133,132,132,0,132,132,133,132,133,132,133,132,133,132,133,62,132,135,132,133,132,132,135,135,132,133,135,133,132,133,132,133,132,133,0,132,133,132,133,132,132,132,132,132,132,132,132,132,132,135,132,133,132,133,132,132,132,132,132,132,133,132,133,132,133,132,133,132,133,132,0,135,135,132,0,132,133,135,132,133,62,132,135,0,0,0,132,132,133,132,133,132,133,132,133,61,132,132,133,0,0,0,0,0,0,0,0,145,145,148,148,146,145,148,153,154,146,145,148,153,154,145,145,146,145,148,153,154,146,145,148,153,154,146,145,145,148,145,148,145,145,145,145,145,145,146,145,148,153,153,154,154,146,145,148,153,154,154,146,146,145,148,153,154,145,148,146,145,148,153,153,154,154,145,145,145,145,145,145,145,145,145,145,146,145,148,153,154,145,145,145,146,145,148,153,154,146,145,148,153,154,146,145,148,153,154,146,145,148,153,154,145,146,145,145,145,145,145,145,145,145,145,145,148,145,146,145,148,153,154,146,145,148,153,154,146,145,148,153,154,145,146,145,148,153,154,146,146,146,146,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,160,160,160,160,0,0,160,0,160,0,0,0,0,0,0,0,147,147,147,147,147,147,147,147,147,147,0,0,0,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,0,162,162,162,162,162,162,0,241,163,241,163,0,241,163,241,163,163,163,241,163,241,163,163,163,163,163,163,241,163,241,163,241,163,241,163,163,163,163,163,163,163,163,163,163,163,163,241,163,163,163,163,241,163,241,163,241,163,241,163,163,163,163,163,163,163,163,241,163,241,163,241,163,163,241,163,242,168,0,0,0,0,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,166,167,165,165,165,165,165,165,168,165,165,165,166,165,168,167,165,165,165,165,165,165,165,165,165,165,165,165,165,0,0,0,0,0,0,170,170,149,149,170,151,170,158,149,157,151,170,158,149,157,151,151,151,157,151,170,158,149,157,151,170,158,149,157,149,151,170,174,158,157,170,149,170,149,170,157,170,149,157,151,157,157,149,149,0,151,151,170,158,149,157,151,151,170,158,149,157,151,151,151,151,151,170,158,149,157,157,170,170,170,170,170,158,158,158,158,158,151,151,170,170,149,157,151,151,151,170,158,149,149,157,149,157,157,157,157,157,157,157,157,157,157,157,157,157,151,170,149,0,0,151,170,158,149,157,157,157,157,151,170,158,149,157,151,170,158,149,157,151,170,158,149,157,151,170,158,149,157,151,157,149,151,170,151,149,170,149,157,149,0,170,157,149,174,174,174,174,174,174,149,157,151,157,149,157,170,157,0,149,170,149,151,170,157,151,170,158,149,157,151,170,158,149,157,151,170,158,149,157,170,158,149,170,157,151,170,158,149,157,0,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,0,0,0,0,0,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,0,0,187,188,186,186,186,186,186,186,186,0,0,0,0,0,192,192,193,193,191,191,194,194,192,193,191,194,192,193,191,194,191,192,193,191,194,192,193,191,194,192,193,191,194,192,193,191,194,192,194,192,193,191,194,192,193,191,194,192,193,191,194,191,190,192,192,192,193,193,193,191,194,192,193,191,194,192,193,191,194,192,193,191,194,192,193,191,194,192,193,191,194,192,193,191,194,192,193,191,194,193,191,192,193,191,194,192,193,191,194,192,193,191,194,192,193,191,194,191,191,192,193,191,194,192,192,192,192,0,0,0,189,0,195,195,197,197,196,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,195,195,195,197,197,197,197,196,196,196,196,195,197,196,195,197,196,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,195,197,196,0,0,0,0,0,202,202,202,0,143,143,199,199,203,203,200,200,204,204,199,200,202,143,199,203,200,204,202,143,199,203,200,204,202,202,202,143,199,203,200,204,202,143,199,203,200,204,202,143,199,203,200,204,143,199,203,200,204,143,143,143,143,143,202,143,199,203,200,204,202,143,199,203,200,204,202,202,143,199,203,200,204,143,202,202,143,199,203,200,204,202,202,143,199,203,200,204,199,203,204,143,143,143,143,143,202,202,202,143,199,203,200,204,202,143,199,203,200,204,202,143,199,203,200,204,202,143,199,203,200,204,202,143,199,203,200,204,200,200,203,204,202,143,200,143,199,203,200,204,202,202,143,199,203,200,204,202,143,199,203,200,204,202,143,199,203,200,204,203,202,143,199,203,200,204,243,243,244,245,0,38,0,0,38,0,0,0,0,38,38,0,0,38,0,38,0,0,213,213,214,214,215,215,216,216,217,217,211,211,212,212,38,38,218,213,218,214,215,216,217,211,212,38,213,218,214,215,216,217,211,212,38,38,218,218,38,217,59,213,218,214,215,216,217,211,212,38,213,218,214,215,216,217,211,212,38,211,212,38,213,214,215,216,217,211,212,38,213,214,215,216,217,211,212,38,213,213,59,59,218,0,213,218,214,215,216,217,211,212,38,213,218,214,215,216,217,211,212,38,38,213,38,213,218,214,215,216,217,211,212,38,213,213,213,213,213,218,211,212,213,214,215,216,217,211,212,38,38,213,218,214,215,216,217,211,212,38,38,38,38,218,218,213,213,59,218,213,38,38,213,218,214,215,216,217,211,212,38,38,213,218,214,215,216,217,211,212,38,213,218,214,215,216,217,211,212,38,213,218,214,215,216,217,211,212,38,213,218,214,215,216,217,211,212,38,214,215,216,217,211,212,213,212,213,213,213,213,213,59,216,213,213,38,38,38,212,59,213,214,215,216,217,211,212,38,38,213,218,214,215,216,217,211,212,38,213,218,214,215,216,217,211,212,38,213,218,214,215,216,217,211,212,38,218,218,59,213,218,214,215,216,217,211,212,38,246,247,248,249,250,248,246,247,0,36,0,0,36,0,0,219,219,36,36,220,219,220,36,219,220,36,36,220,220,36,60,219,220,36,219,220,36,36,219,36,219,36,219,219,60,60,219,220,0,219,220,36,219,220,36,36,219,36,219,220,36,60,60,219,219,219,219,219,220,219,36,36,219,220,36,36,36,220,220,219,220,219,36,36,219,220,36,219,220,36,219,220,36,219,220,36,219,220,36,219,60,60,60,219,221,219,36,36,36,60,60,219,36,36,219,219,220,36,219,220,36,219,220,36,220,220,219,220,36,251,252,0,0,0,0,0,0,0,0,223,0,164,164,164,164,223,223,164,164,164,164,164,164,164,164,223,164,164,164,164,164,164,164,164,223,223,164,164,164,164,164,164,164,164,0,0,0,0,0,0,0,0,139,139,224,224,139,224,139,224,253,229,139,224,139,224,139,224,139,224,139,224,139,224,139,224,139,224,139,224,139,224,139,224,139,224,139,139,139,139,224,224,224,224,139,224,139,224,139,224,139,224,139,224,139,224,139,224,139,224,139,224,227,253,227,0,139,224,229,253,139,224,253,229,139,224,227,227,139,224,139,224,139,224,253,253,139,224],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],0,0,[7,[[9,[8]]]],[10,[[9,[8]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,10],[12,10],[[[13,[-1]]],10,[[15,[14]]]],[[16,14],7],[7,[[9,[5]]]],[10,[[9,[5]]]],[[[17,[-1]]],[[17,[-1]]],[18,19]],[7,7],[11,11],[12,12],[[[13,[-1]]],[[13,[-1]]],18],[10,10],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[17,[-1]]],[[20,[[17,[-1]]]]],19],[21,[[20,[-1]]],22],[-1,[[20,[-2]]],[],[]],[[[17,[-1]],23,24],[],19],0,[[],25],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[7,27],[10,27],[-1,[[28,[[17,[-2]]]]],29,19],[-1,[[28,[7]]],29],[-1,[[28,[10]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[[17,[-1]],[17,[-1]]],30,19],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[11,[[28,[-1,10]]],[]],[12,[[28,[-1,10]]],[]],[[[13,[-1]]],[[28,[-2,10]]],[[15,[14]]],[]],0,[[[17,[-1]],26],[[28,[2,31]]],19],[[[17,[-1]]],2,19],[[[17,[-1]],32],[[28,[2,33]]],[34,19]],[[[17,[-1]],32],[[28,[2,33]]],19],[[7,32],35],[[7,32],35],[[11,32],35],[[12,32],35],[[[13,[-1]],32],35,34],[[10,32],35],[[10,32],35],[-1,-1,[]],[36,7],[[[2,[14,16]]],7],[-1,-1,[]],[37,7],[38,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[39,[[28,[25,40]]]],[39,[[28,[25,40]]]],[[[41,[-1]]],[[17,[-1]]],19],[[],[[17,[-1]]],19],[[[17,[-1]]],[],19],[[[17,[-1]]],9,19],[[-1,-2],24,[42,43],44],[[[17,[-1]]],24,19],[[[17,[-1]]],[[47,[-1,[45,[-1]],46]]],19],[[[17,[-1]]],[[20,[[17,[-1]]]]],19],[[[17,[-1]]],[],19],[[[17,[-1]]],[],19],[[[17,[-1]]],[],19],[[],[[9,[48]]]],[[[17,[-1]],-2],2,19,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[-1,[],[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,[-1,7,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[11,-1],10,[]],[[12,-1],10,[]],[[[13,[-1]],-2],10,[[15,[14]]],[]],0,0,0,0,0,0,0,0,[[25,-2,[57,[-1,-3]]],[[28,[2,7]]],19,[[58,[-1]],[59,[-1]],60,[61,[-1]],62,52,53],[[63,[-1]]]],[[[17,[-1]],-2],28,[19,64],65],[[7,-1],28,65],[[10,-1],28,65],[7,[[9,[5]]]],[10,[[9,[5]]]],0,[7,16],[10,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[21,[[28,[-1,21]]],22],[-1,[[28,[-2,-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[25,39],[[28,[2,40]]]],[[25,39],[[28,[2,40]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],[[[67,[-1]]],[[9,[8]]],19],[37,[[9,[8]]]],[[[68,[-1]]],[[69,[-1]]],19],[[[70,[-1]]],[[69,[-1]]],19],[[[71,[-1]]],[[69,[-1]]],19],[[[72,[-1]]],[[69,[-1]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[73,[-1]]],37,[[15,[14]]]],[[[74,[-1]]],37,[[15,[14]]]],[[[75,[-1]]],37,[[15,[14]]]],[[[76,[-1,-2]]],37,[[15,[24]]],[[15,[24]]]],[[[77,[-1,-2]]],37,[[15,[14]]],[[15,[16]]]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[-1]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[-1]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[67,[-1]]],[[9,[5]]],19],[37,[[9,[5]]]],[[[88,[-1]]],[[88,[-1]]],19],[[[89,[-1]]],[[89,[-1]]],19],[[[68,[-1]]],[[68,[-1]]],[18,19]],[[[67,[-1]]],[[67,[-1]]],[18,19]],[[[90,[-1]]],[[90,[-1]]],[18,19]],[[[70,[-1]]],[[70,[-1]]],[18,19]],[[[71,[-1]]],[[71,[-1]]],[18,19]],[[[72,[-1]]],[[72,[-1]]],[18,19]],[[[91,[-1]]],[[91,[-1]]],[18,19]],[[[92,[-1]]],[[92,[-1]]],[18,19]],[93,93],[[[73,[-1]]],[[73,[-1]]],18],[[[74,[-1]]],[[74,[-1]]],18],[[[75,[-1]]],[[75,[-1]]],18],[[[76,[-1,-2]]],[[76,[-1,-2]]],18,18],[[[77,[-1,-2]]],[[77,[-1,-2]]],18,18],[37,37],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[88,[-1]],[88,[-1]]],94,19],[[[89,[-1]],[89,[-1]]],94,19],[[[71,[-1]]],95,19],[[-1,-2],94,[],[]],[[-1,-2],94,[],[]],[[[96,[-1]],-3],[[28,[-1,-2]]],[],[5,97],[[100,[-2],[[98,[99]]]]]],[[[70,[-1]]],[[101,[-1]]],19],[[],102],[102,[[28,[[103,[-1,37]],104]]],[52,53,105]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[67,[-1]]],27,19],[37,27],[-1,[[28,[[68,[-2]]]]],29,19],[-1,[[28,[[90,[-2]]]]],29,19],[-1,[[28,[[70,[-2]]]]],29,19],[-1,[[28,[[71,[-2]]]]],29,19],[-1,[[28,[[72,[-2]]]]],29,19],[-1,[[28,[[91,[-2]]]]],29,19],[-1,[[28,[[92,[-2]]]]],29,19],[-1,[[28,[37]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],[[54,[87]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],[[54,[87]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[90,[-1]]],[[0,[[87,[],[[86,[[2,[[106,[-1]],[107,[-1]]]]]]]]]]],19],[[[88,[-1]],[88,[-1]]],30,19],[[[89,[-1]],[89,[-1]]],30,19],[[[68,[-1]],[68,[-1]]],30,[82,19]],[[[90,[-1]],[90,[-1]]],30,[82,19]],[[[70,[-1]],[70,[-1]]],30,[82,19]],[[[71,[-1]],[71,[-1]]],30,[82,19]],[[[72,[-1]],[72,[-1]]],30,[82,19]],[[[91,[-1]],[91,[-1]]],30,[82,19]],[[[92,[-1]],[92,[-1]]],30,[82,19]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[[[73,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[74,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[75,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[76,[-1,-2]]],[[28,[-3,37]]],[[15,[24]]],[[15,[24]]],[]],[[[77,[-1,-2]]],[[28,[-3,37]]],[[15,[14]]],[[15,[16]]],[]],0,[[[88,[-1]],32],35,19],[[[88,[-1]],32],35,19],[[[89,[-1]],32],35,19],[[[89,[-1]],32],35,19],[[[68,[-1]],32],35,[34,19]],[[[67,[-1]],32],35,[34,19]],[[[67,[-1]],32],35,19],[[[90,[-1]],32],35,[34,19]],[[[70,[-1]],32],35,[34,19]],[[[71,[-1]],32],35,[34,19]],[[[72,[-1]],32],35,[34,19]],[[[91,[-1]],32],35,[34,19]],[[[92,[-1]],32],35,[34,19]],[[93,32],35],[[[73,[-1]],32],35,34],[[[74,[-1]],32],35,34],[[[75,[-1]],32],35,34],[[[76,[-1,-2]],32],35,34,34],[[[77,[-1,-2]],32],35,34,34],[[37,32],35],[[37,32],35],[-1,-1,[]],[[[108,[-1]]],[[88,[-1]]],19],[26,[[88,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[26,[[89,[-1]]],19],[[[69,[-1]]],[[89,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[90,[-1]]],[[70,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[90,[-1]]],[[91,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[109,37],[[[2,[14,16]]],37],[39,[[28,[102,40]]]],[39,[[28,[102,40]]]],[[],[[68,[-1]]],19],[[],[[90,[-1]]],19],[[],[[70,[-1]]],19],[[],[[71,[-1]]],19],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[15,[[89,[-2]]]],52,53]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[118,[26]],52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],[119,[-2]]],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[15,[[88,[-2]]]],52,53]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[118,[26]],52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[15,[[89,[-2]]]],52,53]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[118,[26]],52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[15,[[89,[-2]]]],52,53]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],-6],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52],[[118,[26]],52]],[[],[[9,[48]]]],[[[88,[-1]],-2],2,19,49],[[[89,[-1]],-2],2,19,49],[[[68,[-1]]],[[108,[-1]]],19],[[[90,[-1]]],[[69,[-1]]],19],[[[70,[-1]]],120,19],[[[72,[-1]]],[[119,[-1]]],19],[[[91,[-1]]],[[69,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[68,[-1]]],[[121,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[90,[-1]]],[[121,[-1]]],19],[[[91,[-1]]],[[121,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[68,[-1]]],24,19],[[[90,[-1]]],24,19],[[[70,[-1]]],24,19],[[[71,[-1]]],24,19],[[[72,[-1]]],24,19],[[[91,[-1]]],24,19],0,[-1,[],[]],[-1,[],[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[123,[],[[122,[-1]]]],[90,[-2]]],[[115,[[54,[114]]]]],[5,34,52,53],19],[[[123,[],[[122,[-1]]]],[68,[-2]]],[[115,[[54,[114]]]]],[5,34,52,53],19],[[[123,[],[[122,[-1]]]],[71,[-2]],[9,[124]]],[[115,[[54,[114]]]]],[5,34,52,53],19],[-1,37,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[93,-1],37,[]],[[[73,[-1]],-2],37,[[15,[14]]],[]],[[[74,[-1]],-2],37,[[15,[14]]],[]],[[[75,[-1]],-2],37,[[15,[14]]],[]],[[[76,[-1,-2]],-3],37,[[15,[24]]],[[15,[24]]],[]],[[[77,[-1,-2]],-3],37,[[15,[14]]],[[15,[16]]],[]],[[[96,[-1]]],-2,52,[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],30,[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],30,[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[90,[-1]]],30,19],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],-2,[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[68,[-1]]],[[17,[-1]]],19],0,[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4],26,[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[90,[-1]]],26,19],[[[96,[-1]],-3],[[96,[-2]]],[],[],[52,[126,[-1],[[125,[-2]]]]]],0,[[[90,[-1]]],[[127,[-1]]],19],[[[17,[-1]],[128,[-1]]],[[28,[[68,[-1]],[67,[-1]]]]],19],[[[121,[-1]],[101,[-1]]],[[90,[-1]]],19],[[[121,[-1]],95],[[71,[-1]]],19],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[-1]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[-1]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[[2,[-5,-3]]]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,26],[[9,[[2,[-5,-3]]]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[90,[-1]]],24,19],[[[91,[-1]]],24,19],[[[88,[-1]],[88,[-1]]],[[9,[94]]],19],[[[89,[-1]],[89,[-1]]],[[9,[94]]],19],[[[90,[-1]]],[[101,[-1]]],19],[[[68,[-1]]],120,19],[[[90,[-1]]],120,19],[[[71,[-1]]],120,19],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,-1],[[9,[-3]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,-1],[[9,[-3]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[]],[[[68,[-1]]],[[129,[-1]]],19],[[[90,[-1]]],[[129,[-1]]],19],[[[91,[-1]]],[[129,[-1]]],19],[[[68,[-1]]],[[128,[-1]]],19],0,[[[96,[-1]]],-1,52],0,0,0,[[[68,[-1]],-2],28,19,65],[[[90,[-1]],-2],28,19,65],[[[70,[-1]],-2],28,19,65],[[[71,[-1]],-2],28,19,65],[[[72,[-1]],-2],28,19,65],[[[91,[-1]],-2],28,19,65],[[[92,[-1]],-2],28,19,65],[[37,-1],28,65],[[[90,[-1]]],24,19],[[[70,[-1]]],24,19],[[[91,[-1]]],24,19],[[[67,[-1]]],[[9,[5]]],19],[37,[[9,[5]]]],[37,16],0,[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[[[58,[],[[110,[-1]],[111,[-3]],[112,[-4]],[113,[-5]]]],26],[[115,[[54,[114]]]]],[[116,[],[[86,[[96,[[68,[-2]]]]]]]],117,52],19,[[116,[],[[86,[[96,[[90,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[70,[-2]]]]]]]],117,52],[[116,[],[[86,[[96,[[71,[-2]]]]]]]],117,52]],[130,24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,-1],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,-1],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[90,[-1]],[106,[-1]]],[[9,[[72,[-1]]]]],19],[[[72,[-1]]],[[107,[-1]]],19],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[-5]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[90,[-1]],[20,[[107,[-1]]]]],[[9,[[106,[-1]]]]],19],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[[2,[-5,-3]]]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,[20,[-5]]],[[9,[[2,[-5,-3]]]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[[[81,[],[[78,[-1]],[79,[-2]],[80,[-3]]]],-4,-1],[[9,[[2,[-5,-3]]]]],[18,34,82,83,84,64,85,52,53],[[87,[],[[86,[-1]]]]],[18,34,82,83,64,85],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[[[96,[-1]]],[[28,[-1,[96,[-1]]]]],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[102,39],[[28,[2,40]]]],[[102,39],[[28,[2,40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[96,[-1]],-4],[[28,[-1,-2]]],[],[5,97],[[100,[-2],[[98,[99]]]]],[[126,[],[[125,[-3]]]]]],[[[96,[-1]],131],[[9,[-1]]],52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[132,[-1,-2]]],-2,[],[]],[[[132,[-1,-2]]],-2,[],[]],0,[[[132,[-1,-2]]],[[115,[[54,[114]]]]],[60,52,53],[52,53]],[[[132,[-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[133,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[132,[-1,-2]]],[[132,[-1,-2]]],18,18],[133,133],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[62,[],[[122,[-1]]]]],[[115,[[54,[114]]]]],[5,34,52,53]],[[[132,[-1,-2]]],[[115,[[54,[114]]]]],[62,52],52],[-1,[[115,[[54,[114]]]]],[]],[-1,[[115,[[54,[114]]]]],[]],[-1,[[115,[[54,[114]]]]],[]],[[[132,[-2,-3]],[129,[-1]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[[132,[-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[134,-2],[[136,[[135,[-1,-2]]]]],19,[[137,[-1]]]],[26,[[115,[[54,[114]]]]]],[26,[[115,[[54,[114]]]]]],[26,[[115,[[54,[114]]]]]],[[138,-2],[[136,[[135,[-1,-2]]]]],19,[[137,[-1]]]],[[],133],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],0,[[[132,[-1,-2]],32],35,34,34],[[133,32],35],[-1,-1,[]],[-1,-1,[]],[[[132,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[89,[-1]]]],52,53]],[[[132,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[118,[26]],52]],[[[132,[-2,-3]],[119,[-1]]],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53]],[[[132,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[88,[-1]]]],52,53]],[[[132,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[118,[26]],52]],[[[132,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[89,[-1]]]],52,53]],[[[132,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[118,[26]],52]],[[[132,[-2,-3]],[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[[132,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[89,[-1]]]],52,53]],[[[132,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[58,[-1]],52,53],[52,53],[[118,[26]],52]],[[[135,[139,-1]],[140,[139]]],[[115,[[54,[114]]]]],[[137,[139]],141]],[[[132,[-1,-2]],[140,[139]]],[[115,[[54,[114]]]]],142,[141,52,53]],[[133,[140,[139]]],[[115,[[54,[114]]]]]],[[],26],[[],26],[[[132,[-1,-2]]],-1,[],[]],[[[132,[-1,-2]]],-1,[],[]],[[[132,[-2,-3]],[90,[-1]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[[[132,[-2,-3]],[68,[-1]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[[[132,[-2,-3]],[71,[-1]],[9,[124]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[132,[-1,-2]]],143,[60,52,53],[52,53]],[133,143],[[-1,-2],[[132,[-1,-2]]],[],[]],0,[[134,-2],[[136,[[135,[-1,-2]]]]],19,[[137,[-1]]]],[[138,-2],[[136,[[135,[-1,-2]]]]],19,[[137,[-1]]]],[[[132,[-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],0,[-1,[[54,[144]]],[]],[-1,[[54,[144]]],[]],[-1,[[115,[[54,[114]]]]],[]],[-1,[[115,[[54,[114]]]]],[]],[-1,[[115,[[54,[114]]]]],[]],[[[62,[],[[122,[-1]]]]],[[115,[[54,[114]]]]],[5,34,52,53]],[[[132,[-1,-2]]],[[115,[[54,[114]]]]],[62,52],52],[[[135,[-1,-2]]],[[136,[2]]],19,[[137,[-1]]]],0,0,0,[[[132,[-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[[61,[140,[-1]]],[[115,[[54,[114]]]]],19],[[[132,[-2,-3]],-4],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53],[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[145,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[[145,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[146,[-1,-2,-3]]],[[136,[[145,[-1,-2,-3]]]]],19,[[59,[-1]],[147,[-1]]],[[137,[-1]]]],[[-2,-3],[[146,[-1,-2,-3]]],19,[[59,[-1]],[147,[-1]]],[[137,[-1]]]],[[[145,[-1,-2,-3]]],[[145,[-1,-2,-3]]],19,[],[]],[[[148,[-1,-2,-3]]],[[148,[-1,-2,-3]]],19,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[145,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[62,52,53],[52,53]],[[149,-2],[[28,[[150,[-1,-2]],151]]],19,[[137,[-1]]]],[[[145,[-1,-2,-3]],[129,[-1]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[[145,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[134,-2],[[136,[[145,[-1,[152,[-1]],-2]]]]],19,[[137,[-1]]]],[[138,-2],[[136,[[145,[-1,[152,[-1]],-2]]]]],19,[[137,[-1]]]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[153,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[[[154,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[154,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[[[146,[-1,-2,-3]]],[[146,[-1,-2,-3]]],[],[],[]],[26,2],[26,2],[26,2],[26,2],[26,2],[[[145,[-1,-2,-3]],32],35,19,34,34],[[[148,[-1,-2,-3]],32],35,19,34,34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[155,[[0,[-1,-2]]]]],[[153,[-1,-2]]],19,[]],[[[156,[[0,[-1,-2]]]]],[[154,[-1,-2]]],19,[]],[-1,-1,[]],[[[145,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[147,[-1]]],[[137,[-1]]],[[15,[[89,[-1]]]],52,53]],[[[145,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[147,[-1]]],[[137,[-1]]],[[118,[26]],52]],[[[145,[-1,-2,-3]],[119,[-1]]],[[115,[[54,[114]]]]],19,[[147,[-1]]],[[137,[-1]]]],[[[145,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[147,[-1]]],[[137,[-1]]],[[15,[[88,[-1]]]],52,53]],[[[145,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[147,[-1]]],[[137,[-1]]],[[118,[26]],52]],[[[145,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[147,[-1]]],[[137,[-1]]],[[15,[[89,[-1]]]],52,53]],[[[145,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[147,[-1]]],[[137,[-1]]],[[118,[26]],52]],[[[145,[-1,-2,-3]],[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[[[145,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[147,[-1]]],[[137,[-1]]],[[15,[[89,[-1]]]],52,53]],[[[145,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[147,[-1]]],[[137,[-1]]],[[118,[26]],52]],[[],26],[[],26],[[],26],[[],26],[[],26],[[[145,[-1,-2,-3]],[90,[-1]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[[[145,[-1,-2,-3]],[68,[-1]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[[[145,[-1,-2,-3]],[71,[-1]],[9,[124]]],[[115,[[54,[114]]]]],19,[[123,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[145,[-1,-2,-3]]],143,19,[[59,[-1]],52,53],[52,53]],[[-1,-2],[[146,[-3,-1,-2]]],[],[],[]],[[134,-2],[[136,[[145,[-1,[152,[-1]],-2]]]]],19,[[137,[-1]]]],[[138,-2],[[136,[[145,[-1,[152,[-1]],-2]]]]],19,[[137,[-1]]]],[[[145,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,[[54,[144]]],[]],[[[145,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[62,52,53],[52,53]],[[[145,[-1,[152,[-1]],-2]]],[[136,[2]]],19,[[137,[-1]]]],[[[145,[-1,-2,-3]]],[[153,[-1,-2]]],19,[],[]],[[[145,[-1,-2,-3]]],[[154,[-1,-2]]],19,[],[]],[[[145,[-1,-2,-3]]],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[[[145,[-1,157,-2]]],[[159,[158]]],19,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[[145,[-1,-2,-3]],-4],[[115,[[54,[114]]]]],19,[[59,[-1]],52,53],[52,53],[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[146,[-1,-2,-3]],26],[[146,[-1,-2,-3]]],[],[],[]],[[[146,[-1,-2,-3]],131],[[146,[-1,-2,-3]]],[],[],[]],[[[146,[-1,-2,-3]],26],[[146,[-1,-2,-3]]],[],[],[]],[[[146,[-1,-2,-3]],26],[[146,[-1,-2,-3]]],[],[],[]],[[[146,[-1,-2,-3]],131],[[146,[-1,-2,-3]]],[],[],[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,[[[160,[-1,-2]]],[[115,[[54,[114]]]]],19,[52,53]],[[149,-2],[[28,[[150,[-1,-2]],151]]],19,[[137,[-1]]]],[-1,[[115,[[54,[114]]]]],[]],[26,[[115,[[54,[114]]]]]],[[[160,[139,-1]],[140,[139]]],[[115,[[54,[114]]]]],[[137,[139]],141]],0,0,[-1,[[115,[[54,[114]]]]],[]],0,[[[160,[-1,-2]]],[[159,[158]]],19,[]],0,[[],2],0,0,0,0,0,[[147,[89,[-1]]],[[115,[[54,[114]]]]],19],[[147,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[147,[119,[-1]]],[[115,[[54,[114]]]]],19],[[147,[89,[-1]]],[[115,[[54,[114]]]]],19],[[147,[88,[-1]]],[[115,[[54,[114]]]]],19],[[147,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[147,[89,[-1]]],[[115,[[54,[114]]]]],19],[[147,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[147,[89,[-1]]],[[115,[[54,[114]]]]],19],[[147,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],0,0,0,0,[-1,4,[]],[-1,4,[]],[[[152,[-1]]],[[115,[[54,[114]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[[[152,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]],[129,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]]],[[115,[[54,[114]]]]],19],[134,[[28,[[152,[-1]],161]]],19],[138,[[28,[[152,[-1]],161]]],19],[26,-1,[]],[26,-1,[]],[26,2],[[[152,[-1]],32],35,19],[-1,-1,[]],[[[152,[-1]],[89,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]],-2],[[115,[[54,[114]]]]],19,[[118,[26]],52]],[[[152,[-1]],[119,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]],[89,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]],[88,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]],-2],[[115,[[54,[114]]]]],19,[[118,[26]],52]],[[[152,[-1]],[89,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]],-2],[[115,[[54,[114]]]]],19,[[118,[26]],52]],[[[152,[-1]],[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19],[[[152,[-1]],[89,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]],-2],[[115,[[54,[114]]]]],19,[[118,[26]],52]],[[],26],[[[152,[-1]],[90,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]],[68,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]],[71,[-1]],[9,[124]]],[[115,[[54,[114]]]]],19],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[134,[[28,[[152,[-1]],161]]],19],[138,[[28,[[152,[-1]],161]]],19],[[[152,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]]],[[115,[[54,[114]]]]],19],[[[152,[-1]]],[[28,[2,161]]],19],[[[152,[-1]]],[[115,[[54,[114]]]]],19],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[[[152,[-1]],-2],[[115,[[54,[114]]]]],19,[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[162,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[162,162],[[-1,-2],2,[],[]],[162,[[115,[[54,[114]]]]]],[[162,[129,[-1]]],[[115,[[54,[114]]]]],19],[162,[[115,[[54,[114]]]]]],[[],162],[26,-1,[]],[26,-1,[]],[26,2],[[162,32],35],[-1,-1,[]],[[162,[89,[-1]]],[[115,[[54,[114]]]]],19],[[162,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[162,[119,[-1]]],[[115,[[54,[114]]]]],19],[[162,[89,[-1]]],[[115,[[54,[114]]]]],19],[[162,[88,[-1]]],[[115,[[54,[114]]]]],19],[[162,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[162,[89,[-1]]],[[115,[[54,[114]]]]],19],[[162,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[162,[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19],[[162,[89,[-1]]],[[115,[[54,[114]]]]],19],[[162,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[],26],[[162,[90,[-1]]],[[115,[[54,[114]]]]],19],[[162,[68,[-1]]],[[115,[[54,[114]]]]],19],[[162,[71,[-1]],[9,[124]]],[[115,[[54,[114]]]]],19],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[162,[[115,[[54,[114]]]]]],[162,[[115,[[54,[114]]]]]],[162,[[115,[[54,[114]]]]]],0,[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[[162,-2],[[115,[[54,[114]]]]],19,[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[163,[[115,[[54,[114]]]]]],[163,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[163,[[115,[[54,[114]]]]]],[-1,[[115,[[54,[114]]]]],[]],[[163,[129,[139]]],[[115,[[54,[114]]]]]],[163,[[115,[[54,[114]]]]]],[26,[[115,[[54,[114]]]]]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],[-1,-1,[]],[-1,-1,[]],[[163,-1],[[115,[[54,[114]]]]],[[15,[[89,[139]]]],52,53]],[[163,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[163,[119,[139]]],[[115,[[54,[114]]]]]],[[163,-1],[[115,[[54,[114]]]]],[[15,[[88,[139]]]],52,53]],[[163,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[163,-1],[[115,[[54,[114]]]]],[[15,[[89,[139]]]],52,53]],[[163,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[163,[129,[139]],[9,[26]]],[[115,[[54,[114]]]]]],[[163,-1],[[115,[[54,[114]]]]],[[15,[[89,[139]]]],52,53]],[[163,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[163,[140,[139]]],[[115,[[54,[114]]]]]],[[],26],[[],26],[[163,[90,[139]]],[[115,[[54,[114]]]]]],[[163,[68,[139]]],[[115,[[54,[114]]]]]],[[163,[71,[139]],[9,[124]]],[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[163,143],[163,[[115,[[54,[114]]]]]],[-1,[[54,[144]]],[]],[-1,[[115,[[54,[114]]]]],[]],[163,[[115,[[54,[114]]]]]],[[[164,[163]]],[[115,[[54,[114]]]]]],[163,[[115,[[54,[114]]]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[[163,-1],[[115,[[54,[114]]]]],[[15,[[89,[139]]]],52,53]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[165,24],[-1,-2,[],[]],[-1,-2,[],[]],[165,165],[[-1,-2],2,[],[]],[[],165],[26,-1,[]],[26,-1,[]],[26,2],[[165,32],35],[-1,-1,[]],[166,[[115,[[54,[114]]]]]],[167,[[9,[165]]]],[[],26],[165,131],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[168,[],[[122,[-1]]]]],[[115,[[54,[114]]]]],[5,34,52,53]],[165,169],[165,131],[[],165],[166,[[115,[[54,[114]]]]]],[165,[[9,[24]]]],[[[168,[],[[122,[-1]]]],24],[[115,[[54,[114]]]]],[5,34,52,53]],[[167,165],2],[165,131],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[165,[[136,[2]]]],[-1,-2,[],[]],[[165,24],165],[[165,131],165],[[165,169],165],[[165,131],165],[[165,24],165],[[165,131],165],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[170,[[9,[171]]]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[151,5],[151,5],[151,172],[157,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[149,-2],[[28,[[150,[-1,-2]],151]]],19,[[137,[-1]]]],[151,173],[170,24],[174,[[115,[[54,[114]]]]]],[158,[[115,[[54,[114]]]]]],[157,[[115,[[54,[114]]]]]],[170,170],[149,149],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[170,170],94],[157,[[115,[[54,[114]]]]]],[[-1,-2],94,[],[]],[[149,-2],[[28,[[160,[-1,-2]],151]]],19,[[137,[-1]]]],[149,[[28,[157,151]]]],[[151,-1],151,[51,52,53]],[[157,[129,[-1]]],[[115,[[54,[114]]]]],19],[157,[[115,[[54,[114]]]]]],[[149,27],149],[[],149],[[],[[175,[170]]]],[151],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[151],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[151,[[28,[-1,151]]],[51,34,52,53]],[151,[[9,[-1]]],[51,34,52,53]],[151,[[9,[-1]]],[51,34,52,53]],[26,2],[151,2],[26,2],[26,2],[26,2],[26,2],[157,2],[[170,170],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[158,-1,-2],[[159,[24]]],[43,176],177],[[158,-1,-2],[[159,[24]]],[43,176,51],177],[[158,-1,-2],[[159,[24]]],[43,176,51],[177,18]],[[158,-1,-2],[[159,[2]]],[43,176,51],177],[[158,-1,-2],[[159,[2]]],[43,176,51],[177,18]],[[151,32],[[28,[2,33]]]],[[151,32],[[28,[2,33]]]],[[170,32],[[28,[2,33]]]],[[170,32],[[28,[2,33]]]],[[149,32],35],[[157,32],35],[178,-1,[]],[-1,151,[5,52,53]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[179,149],[-1,-1,[]],[27,[[28,[149,-1]]],[]],[[157,[89,[-1]]],[[115,[[54,[114]]]]],19],[[157,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[157,[119,[-1]]],[[115,[[54,[114]]]]],19],[157,[[115,[[54,[114]]]]]],[[157,[89,[-1]]],[[115,[[54,[114]]]]],19],[[157,[88,[-1]]],[[115,[[54,[114]]]]],19],[[157,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[157,[89,[-1]]],[[115,[[54,[114]]]]],19],[[157,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[157,[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19],[157,[[9,[165]]]],[[157,[89,[-1]]],[[115,[[54,[114]]]]],19],[[157,-1],[[115,[[54,[114]]]]],[[118,[26]],52]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[149,-1],149,[[15,[14]]]],0,0,[[],26],[[],26],[[],26],[[],26],[[],26],[[157,[90,[-1]]],[[115,[[54,[114]]]]],19],[[157,[68,[-1]]],[[115,[[54,[114]]]]],19],[[157,[71,[-1]],[9,[124]]],[[115,[[54,[114]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[151,30],[157,[[115,[[54,[114]]]]]],[[149,-1],149,[[177,[],[[86,[170]]]]]],[-1,151,[51,34,52,53]],[170,27],[-1,151,[5,52,53]],[149,149],[[170,170],[[9,[94]]]],[[149,27],149],[157,[[115,[[54,[114]]]]]],[[149,169],149],0,[170,180],[157,[[115,[[54,[114]]]]]],[[149,165],[[28,[149,151]]]],[[174,-1,-2],[[115,[[54,[114]]]]],[43,176,53],[177,52]],[[174,-1,-2],[[115,[[54,[114]]]]],[43,176,53],[177,52]],[[174,-1],[[115,[[54,[114]]]]],[43,176,53]],[[174,-1,-2],[[115,[[54,[114]]]]],[43,176,53],[177,52]],[[174,-1],[[115,[[54,[114]]]]],[43,176,53]],[[174,-1],[[115,[[54,[114]]]]],[43,176,53]],[149,149],[157,[[115,[[54,[114]]]]]],[151,5],[[157,24],[[115,[[54,[114]]]]]],[[149,-1],149,[[15,[14]]]],[[157,165],2],[170,[[9,[27]]]],[157,[[115,[[54,[114]]]]]],0,[149,149],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[157,[[159,[158]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[27,27],[[28,[170,181]]]],[[158,27,[182,[27]],-1,-3],[[159,[2]]],[[177,[],[[86,[27]]]]],[183,18],[[177,[],[[86,[[182,[-2]]]]]]]],[[149,27],149],[170,184],[[157,-2],[[115,[[54,[114]]]]],19,[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[185,149],[26,-1,[]],[26,-1,[]],[26,2],[185,2],[[185,32],35],[-1,-1,[]],[185,14],[[],185],[[],26],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[185,169],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[186,[-1,-2]]],[[186,[-1,-2]]],[],[]],[[-1,-2],2,[],[]],[[],[[186,[-1,-2]]],[],[]],[26,-1,[]],[26,-1,[]],[26,2],[[[186,[-1,-2]],32],35,[],[]],[-1,-1,[]],[[],26],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],0,0,[[187,-1],2,[]],[[188,-1],[[0,[[114,[],[[125,[2]]]],52]]],[]],[[[186,[-2,-3]],-2,-4,-5],2,[],[[189,[-1]]],188,[[190,[-1,-2]]],[[177,[],[[86,[-3]]]],52]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],[[[186,[-1,-2]],131],[[186,[-1,-2]]],[],[]],0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[191,[-1]]],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[192,[-1]]],[[192,[-1]]],19],[193,193],[[[191,[-1]]],[[191,[-1]]],[]],[194,194],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],[[192,[-1]]],19],[[],194],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],[26,2],[26,2],[[[191,[-1]]],2,[]],[[190,-2],[[115,[[54,[114]]]]],[],[[189,[-1]]]],[[[192,[-1]],195],[[115,[[54,[114]]]]],19],[[[192,[-1]],196],[[115,[[54,[114]]]]],19],[[[192,[-1]],197],[[115,[[54,[114]]]]],19],[[193,197],[[115,[[54,[114]]]]]],[[193,195],[[115,[[54,[114]]]]]],[[193,196],[[115,[[54,[114]]]]]],[[[191,[-3]],-2],[[115,[[54,[114]]]]],19,[[189,[-1]]],[[190,[-1,-2]],53]],[[194,-2],[[115,[[54,[114]]]]],[],[52,[189,[-1]]]],[[[192,[-1]],32],35,19],[[193,32],35],[[[191,[-1]],32],35,34],[[194,32],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],26],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[198,193],[-1,[[191,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[[191,[-1]]],2,[]],[[[191,[-1]]],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[192,[-1]],-2],[[192,[-1]]],19,[[190,[-1,195]],34]],[[[192,[-1]],-2],[[192,[-1]]],19,[[190,[-1,196]],34]],[[[192,[-1]],-2],[[192,[-1]]],19,[[137,[-1]],34]],[[[192,[-1]],-2],[[192,[-1]]],19,[[190,[-1,197]],34]],0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[195,195],[197,197],[196,196],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],[26,2],[[195,195],30],[[197,197],30],[[196,196],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[195,32],35],[[197,32],35],[[196,32],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[26,196],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[195,-1],2,49],[[197,-1],2,49],[[196,-1],2,49],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[199,26],2],[[200,201],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[202,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[202,[[9,[5]]]],[143,143],[199,199],[203,203],[200,200],[204,204],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[143,14,[9,[14]]],[[54,[205]]]],[[143,14,[9,[14]]],[[54,[206]]]],[[143,14,[9,[14]]],[[54,[207]]]],[[143,14],[[54,[208]]]],[[],143],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[202,27],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[143,[[28,[14,-1]]],[]],[[202,32],35],[[202,32],35],[[143,32],35],[[199,32],35],[[203,32],35],[[200,32],35],[[204,32],35],[-1,-1,[]],[209,202],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[199,26],[203,26],[204,14],[[143,27],[[28,[199,202]]]],[[143,27],[[28,[203,202]]]],[[143,27],[[28,[200,202]]]],[[143,27],[[28,[204,202]]]],[[143,-1],[[28,[143,202]]],177],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[200,201],[200,26],[[203,26],2],[[204,14],2],[202,[[9,[5]]]],[[143,14],[[54,[144]]]],[200,201],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[203,210],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[6,6],[6,6],[38,[[9,[8]]]],0,[59,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[211,38],[[[212,[-1,-2]]],38,[[15,[14]]],[[15,[16]]]],[38,[[9,[5]]]],[213,213],[214,214],[215,215],[[[216,[-1]]],[[216,[-1]]],18],[[[217,[-1]]],[[217,[-1]]],18],[211,211],[[[212,[-1,-2]]],[[212,[-1,-2]]],18,18],[38,38],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[213,213],94],[[-1,-2],94,[],[]],[[59,[129,[-1]]],[[115,[[54,[114]]]]],19],[59,[[115,[[54,[114]]]]]],[[],218],[218,[[28,[[103,[-1,38]],104]]],[52,53,105]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[38,27],[-1,[[28,[213]]],29],[-1,[[28,[38]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[213,213],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[211,[[28,[-1,38]]],[]],[[[212,[-1,-2]]],[[28,[-3,38]]],[[15,[14]]],[[15,[16]]],[]],[[213,32],35],[[214,32],35],[[215,32],35],[[[216,[-1]],32],35,34],[[[217,[-1]],32],35,34],[[211,32],35],[[[212,[-1,-2]],32],35,34,34],[[38,32],35],[[38,32],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[109,38],[10,38],[[[2,[14,16]]],38],[-1,-1,[]],[39,[[28,[218,40]]]],[39,[[28,[218,40]]]],[[],213],[[-1,-2],24,[42,43],44],[[59,[129,[-1]],[9,[26]]],[[115,[[54,[114]]]]],19],[[],[[9,[48]]]],[[213,-1],2,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[-1,38,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[214,-1],38,[]],[[215,-1],38,[]],[[[216,[-1]],-2],38,[[15,[14]]],[]],[[[217,[-1]],-2],38,[[15,[14]]],[]],[[211,-1],38,[]],[[[212,[-1,-2]],-3],38,[[15,[14]]],[[15,[16]]],[]],[213,30],0,0,0,0,0,[[213,213],[[9,[94]]]],[59,[[115,[[54,[114]]]]]],0,0,[[213,-1],28,65],[[38,-1],28,65],[38,[[9,[5]]]],[38,16],0,[59,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[218,39],[[28,[2,40]]]],[[218,39],[[28,[2,40]]]],[[59,-2],[[115,[[54,[114]]]]],19,[[15,[[89,[-1]]]],52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[6,6],[6,6],[36,[[9,[8]]]],[60,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,[[9,[5]]]],[219,219],[36,36],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[219,219],94],[[-1,-2],94,[],[]],[60,[[159,[143]]]],[60,[[159,[143]]]],[[],219],[[],220],[220,[[28,[[103,[-1,36]],104]]],[52,53,105]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[36,27],[-1,[[28,[219]]],29],[-1,[[28,[36]]],29],[26,2],[26,2],[26,2],[60,[[115,[[54,[114]]]]]],[60,[[115,[[54,[114]]]]]],[[219,219],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[[219,32],35],[[36,32],35],[[36,32],35],[-1,-1,[]],[-1,-1,[]],[109,36],[-1,-1,[]],[14,36],[39,[[28,[220,40]]]],[39,[[28,[220,40]]]],[[-1,-2],24,[42,43],44],[[],[[9,[48]]]],[[219,-1],2,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],0,[60,[[115,[[54,[114]]]]]],[60,[[115,[[54,[114]]]]]],[60,143],[[219,219],[[9,[94]]]],[221,[[54,[144]]]],[[219,-1],28,65],[[36,-1],28,65],[36,[[9,[5]]]],[36,16],[60,[[115,[[54,[114]]]]]],[60,[[115,[[54,[114]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],0,[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[220,39],[[28,[2,40]]]],[[220,39],[[28,[2,40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],2],[131,2],0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[115,[[54,[114]]]]],[]],[26,[[115,[[54,[114]]]]]],[[[164,[-1]]],[[55,[[222,[-1]]]]],223],[[[164,[-1]],26],[[55,[[222,[-1]]]]],223],[26,-1,[]],[26,-1,[]],[26,2],[[[164,[-1]]],2,223],[-1,-1,[]],[[[164,[-1]]],[[57,[139,224]]],223],[[[223,[],[[225,[-1]]]],[140,[139]]],[[115,[[54,[114]]]]],[52,53]],[[],[[164,[-1]]],[223,221]],[[],26],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[164,[-1]]],26,223],[[[164,[-1]],26],[[129,[139]]],223],[-1,[[115,[[54,[114]]]]],[]],[[[164,[[223,[],[[225,[-1]]]]]]],[[115,[[54,[114]]]]],[52,53]],[[[164,[-1]]],2,223],[[[164,[-1]]],2,223],[[[164,[-1]]],[],223],[[[164,[-1]],226],2,223],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,139],[224,224],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[139,139],94],[[224,224],94],[[-1,-2],94,[],[]],[[-1,-2],94,[],[]],[[],139],[[],224],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[-1,[[28,[139]]],29],[-1,[[28,[224]]],29],[26,2],[26,2],[[139,139],30],[[224,224],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[139,32],35],[[224,32],35],[-1,-1,[]],[-1,-1,[]],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[139,-1],2,49],[[224,-1],2,49],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[227,-1],-2,[],[]],0,[[227,-1],26,[]],[[[175,[228]]],226],[[139,139],[[9,[94]]]],[[224,224],[[9,[94]]]],0,0,[[139,-1],28,65],[[224,-1],28,65],0,[229,24],[-1,-2,[],[]],[-1,-2,[],[]],[[227,-1,-2],[[9,[[2,[-3,-4]]]]],[],[],[],[]],0,[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Private",2753],[1,"tuple"],[5,"Private",2753],[10,"Any",2754],[10,"Error",2755],[5,"Command",2756],[6,"Error",0],[5,"Backtrace",2757],[6,"Option",2758],[6,"QueryError",0],[5,"NotFoundSnafu",0],[5,"MissingSnafu",0],[5,"Snafu",0],[5,"String",2759],[10,"Into",2760],[6,"StatusCode",2761],[5,"Leaf",0],[10,"Clone",2762],[10,"NodeType",2763],[5,"Commitment",2764],[10,"Resolvable",0],[10,"Committable",2764],[10,"RngCore",2765],[1,"u64"],[5,"Options",0],[1,"usize"],[1,"str"],[6,"Result",2766],[10,"Deserializer",2767],[1,"bool"],[6,"BlockError",2768],[5,"Formatter",2769],[5,"Error",2769],[10,"Debug",2769],[8,"Result",2769],[6,"Error",2493],[6,"Error",289],[6,"Error",2199],[5,"ArgMatches",2770],[8,"Error",2771],[5,"StoredView",2772],[10,"Hash",2773],[10,"Sized",2774],[10,"BuildHasher",2773],[5,"QuorumData",2775],[5,"SuccessThreshold",2776],[5,"SimpleCertificate",2776],[5,"Id",2777],[10,"Hasher",2773],[5,"IndentedSection",2778],[10,"Display",2769],[10,"Send",2774],[10,"Sync",2774],[5,"Box",2779],[5,"Arc",2780],[5,"Rc",2781],[5,"SystemContextHandle",2782],[10,"AvailabilityDataSource",289],[10,"NodeDataSource",2199],[10,"StatusDataSource",2493],[10,"UpdateDataSource",1012],[10,"VersionedDataSource",1012],[10,"NodeImplementation",2763],[10,"Serialize",2783],[10,"Serializer",2783],[5,"TypeId",2754],[5,"InconsistentLeafError",289],[5,"LeafQueryData",289],[8,"BlockHash",289],[5,"PayloadQueryData",289],[5,"VidCommonQueryData",289],[5,"TransactionQueryData",289],[5,"FetchLeafSnafu",289],[5,"FetchBlockSnafu",289],[5,"FetchTransactionSnafu",289],[5,"InvalidTransactionIndexSnafu",289],[5,"CustomSnafu",289],[17,"TransactionIndex"],[17,"Iter"],[17,"InclusionProof"],[10,"QueryablePayload",289],[10,"PartialEq",2784],[10,"Eq",2784],[10,"Ord",2784],[10,"DeserializeOwned",2767],[17,"Item"],[10,"Iterator",2785],[6,"LeafId",289],[6,"BlockId",289],[5,"BlockQueryData",289],[5,"BlockSummaryQueryData",289],[5,"TransactionSummaryQueryData",289],[5,"RequestSnafu",289],[6,"Ordering",2784],[8,"VidCommon",0],[6,"Fetch",289],[10,"ErrorCompat",2786],[17,"Source"],[5,"NoneError",2786],[10,"IntoError",2786],[8,"Payload",0],[5,"Options",289],[5,"Api",2787],[6,"ApiError",2787],[10,"ReadState",2788],[8,"TransactionIndex",289],[8,"Transaction",0],[8,"LeafHash",289],[6,"RequestError",2789],[17,"LeafRange"],[17,"BlockRange"],[17,"PayloadRange"],[17,"VidCommonRange"],[10,"Future",2790],[5,"Pin",2791],[10,"Stream",2792],[10,"Unpin",2774],[10,"RangeBounds",2793],[8,"TransactionHash",289],[8,"VidCommitment",0],[8,"Header",0],[17,"Error"],[10,"UpdateAvailabilityData",289],[8,"VidShare",0],[17,"Output"],[10,"FnOnce",2794],[8,"Metadata",0],[8,"QuorumCertificate",2776],[8,"SignatureKey",0],[10,"QueryableHeader",289],[5,"Duration",2795],[5,"ExtensibleDataSource",1012],[5,"MetricsDataSource",1012],[5,"Path",2796],[8,"FileSystemDataSource",1012],[8,"Result",2797],[10,"AvailabilityProvider",1129],[5,"AtomicStoreLoader",2798],[5,"MockTypes",2659],[5,"Event",2799],[10,"Default",2800],[10,"TestableDataSource",2620],[5,"PrometheusMetrics",2020],[10,"Metrics",2801],[5,"FetchingDataSource",1129],[5,"Builder",1129],[10,"AvailabilityStorage",1306],[5,"Pruner",1129],[5,"Config",1537],[8,"Builder",1287],[5,"Error",1537],[5,"FileSystemStorage",1324],[5,"StorageReadGuard",1129],[5,"StorageWriteGuard",1129],[5,"RwLockReadGuard",2802],[5,"RwLockWriteGuard",2802],[5,"SqlStorage",1537],[5,"Transaction",1537],[8,"QueryResult",0],[8,"SqlDataSource",1287],[6,"PersistenceError",2803],[5,"NoStorage",1370],[6,"DataSource",1418],[5,"MockNetwork",2620],[5,"PrunerCfg",1488],[10,"PruneStorage",1488],[10,"PrunerConfig",1488],[10,"PrunedHeightStorage",1488],[1,"u16"],[5,"Migration",1537],[5,"OffsetDateTime",2804],[5,"Backtrace",2805],[5,"Chain",2797],[10,"Query",1537],[5,"Vec",2806],[10,"ToStatement",2807],[10,"IntoIterator",2808],[1,"never"],[5,"Config",2809],[6,"Type",2810],[5,"Error",2811],[1,"array"],[10,"BorrowToSql",2812],[1,"u32"],[5,"TmpDb",1747],[5,"Fetcher",1771],[10,"LocalCallback",1771],[10,"Callback",1771],[10,"Request",1924],[10,"Provider",1806],[5,"TestProvider",1806],[5,"AnyProvider",1806],[5,"QueryServiceProvider",1806],[5,"NoFetching",1806],[5,"PayloadRequest",1924],[5,"LeafRequest",1924],[5,"VidCommonRequest",1924],[5,"Url",2813],[5,"Counter",2020],[5,"Histogram",2020],[1,"f64"],[6,"MetricsError",2020],[5,"Gauge",2020],[5,"Label",2020],[10,"Counter",2801],[10,"Gauge",2801],[10,"Histogram",2801],[10,"Label",2801],[6,"Error",2814],[1,"i64"],[5,"InvalidSignatureKeySnafu",2199],[5,"CustomSnafu",2199],[5,"SyncStatus",2199],[5,"RequestSnafu",2199],[5,"QuerySnafu",2199],[5,"QueryProposalsSnafu",2199],[5,"QueryVidSnafu",2199],[5,"Options",2199],[5,"MempoolQueryData",2493],[5,"Options",2493],[10,"UpdateStatusData",2493],[5,"RwLock",2802],[10,"DataSourceLifeCycle",2620],[5,"MockNodeImpl",2659],[17,"Storage"],[8,"MockTransaction",2659],[8,"MockPayload",2659],[1,"u8"],[8,"MockHeader",2659],[15,"Custom",283],[15,"Availability",283],[15,"Node",283],[15,"Status",283],[15,"Error",288],[15,"InvalidTransactionIndex",1004],[15,"Custom",1004],[15,"FetchLeaf",1004],[15,"FetchBlock",1004],[15,"FetchTransaction",1004],[15,"Request",1004],[6,"Storage",1418],[15,"NoStorage",1487],[15,"NoSuchMetric",2195],[15,"NoSuchSubgroup",2195],[15,"Prometheus",2195],[15,"QueryVid",2485],[15,"Custom",2485],[15,"QueryProposals",2485],[15,"Request",2485],[15,"Query",2485],[15,"Internal",2614],[15,"Request",2614],[8,"MockQuorumProposal",2659]],"b":[[137,"impl-Debug-for-Leaf%3CTYPES%3E"],[138,"impl-Display-for-Leaf%3CTYPES%3E"],[139,"impl-Display-for-Error"],[140,"impl-Debug-for-Error"],[144,"impl-Display-for-QueryError"],[145,"impl-Debug-for-QueryError"],[147,"impl-From%3CError%3E-for-Error"],[148,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[150,"impl-From%3CError%3E-for-Error"],[151,"impl-From%3CError%3E-for-Error"],[634,"impl-Debug-for-LeafId%3CTypes%3E"],[635,"impl-Display-for-LeafId%3CTypes%3E"],[636,"impl-Display-for-BlockId%3CTypes%3E"],[637,"impl-Debug-for-BlockId%3CTypes%3E"],[639,"impl-Debug-for-InconsistentLeafError%3CTypes%3E"],[640,"impl-Display-for-InconsistentLeafError%3CTypes%3E"],[653,"impl-Display-for-Error"],[654,"impl-Debug-for-Error"],[656,"impl-From%3CCommitment%3CLeaf%3CTypes%3E%3E%3E-for-LeafId%3CTypes%3E"],[657,"impl-From%3Cusize%3E-for-LeafId%3CTypes%3E"],[660,"impl-From%3Cusize%3E-for-BlockId%3CTypes%3E"],[661,"impl-From%3CCommitment%3C%3CTypes+as+NodeType%3E::BlockHeader%3E%3E-for-BlockId%3CTypes%3E"],[680,"impl-From%3CRequestError%3E-for-Error"],[681,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[1032,"impl-StatusDataSource-for-ExtensibleDataSource%3CD,+U%3E"],[1033,"impl-NodeDataSource%3CTypes%3E-for-ExtensibleDataSource%3CD,+U%3E"],[1050,"impl-FetchingDataSource%3CTypes,+FileSystemStorage%3CTypes%3E,+P%3E"],[1051,"impl-DataSourceLifeCycle-for-FetchingDataSource%3CMockTypes,+FileSystemStorage%3CMockTypes%3E,+P%3E"],[1149,"impl-NodeDataSource%3CTypes%3E-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1150,"impl-StatusDataSource-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1295,"impl-FetchingDataSource%3CTypes,+SqlStorage,+P%3E"],[1296,"impl-DataSourceLifeCycle-for-FetchingDataSource%3CMockTypes,+SqlStorage,+P%3E"],[1428,"impl-StatusDataSource-for-DataSource"],[1429,"impl-NodeDataSource%3CMockTypes%3E-for-DataSource"],[1558,"impl-AsRef%3Cdyn+Error%3E-for-Error"],[1559,"impl-AsRef%3Cdyn+Error+%2B+Send+%2B+Sync%3E-for-Error"],[1625,"impl-Debug-for-Error"],[1626,"impl-Display-for-Error"],[1627,"impl-Debug-for-Migration"],[1628,"impl-Display-for-Migration"],[1860,"impl-Provider%3CTypes,+PayloadRequest%3E-for-AnyProvider%3CTypes%3E"],[1861,"impl-Provider%3CTypes,+LeafRequest%3E-for-AnyProvider%3CTypes%3E"],[1862,"impl-Provider%3CTypes,+VidCommonRequest%3E-for-AnyProvider%3CTypes%3E"],[1863,"impl-Provider%3CTypes,+VidCommonRequest%3E-for-QueryServiceProvider"],[1864,"impl-Provider%3CTypes,+PayloadRequest%3E-for-QueryServiceProvider"],[1865,"impl-Provider%3CTypes,+LeafRequest%3E-for-QueryServiceProvider"],[2103,"impl-Debug-for-MetricsError"],[2104,"impl-Display-for-MetricsError"],[2346,"impl-Display-for-Error"],[2347,"impl-Debug-for-Error"],[2356,"impl-From%3CRequestError%3E-for-Error"],[2357,"impl-From%3CQueryError%3E-for-Error"],[2358,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[2555,"impl-Debug-for-Error"],[2556,"impl-Display-for-Error"],[2559,"impl-From%3CRequestError%3E-for-Error"],[2561,"impl-From%3CString%3E-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
