var searchIndex = new Map(JSON.parse('[\
["hotshot_query_service",{"doc":"The HotShot Query Service is a minimal, generic query â€¦","t":"PPPGPIFIPFPPFPFIGIKIFPINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCOOOOHNNNNNCNNONNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNONNNNNNNOOOOOOKIGFRFPFGRGPFPFPFPPRFPFRIGFRPPFPFRPKPPFIIIIRFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNMMMMNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNOMNNONNNNNNNNNNNNNNNNNNNNNNONOOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOERFEIFEKKNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNCCNNNNNNNNNMNNKGFFPFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIEFFEIENNQENKEECMMMMMMMMCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFKEENNNNNNNNNNNNNNNNNNNCCMMNNNNNNNFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOPFGRPFEKFPPFFPFFPFKNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONONNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOGPFFPKKNNNNONNNNNNNNNNMNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNMNMNNNNNNNNNONNNNNNNNNNNNNNOO","n":["Availability","Custom","Err","Error","Error","Header","Leaf","Metadata","Missing","MissingSnafu","Node","NotFound","NotFoundSnafu","Ok","Options","Payload","QueryError","QueryResult","Resolvable","SignatureKey","Snafu","Status","Transaction","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args_for_update","availability","availability","backtrace","backtrace","block_header","block_payload","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","catch_all","cause","cause","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commitment","commitment","create_random_transaction","data_source","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fail","fail","fail","fetching","fill_block_payload","fill_block_payload_unchecked","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_stored_view","genesis","get_block_header","get_block_payload","get_hash","get_height","get_justify_qc","get_parent_commitment","get_payload_commitment","get_proposer_id","get_view_number","group_id","hash","header","header","header","in_current_span","in_current_span","include_migrations","init","init","init","init","init","init","init","instantiate_data_source_tests","internal","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","justify_qc","message","metrics","node","node","parent_commitment","port","proposer_id","run_standalone_service","serialize","serialize","serialize","source","source","status","status","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","message","source","source","source","status","message","AvailabilityDataSource","BlockHash","BlockId","BlockQueryData","BlockRange","BlockSummaryQueryData","Custom","CustomSnafu","Error","Error","Fetch","FetchBlock","FetchBlockSnafu","FetchLeaf","FetchLeafSnafu","FetchTransaction","FetchTransactionSnafu","Hash","Hash","InclusionProof","InconsistentLeafError","InvalidTransactionIndex","InvalidTransactionIndexSnafu","Iter","LeafHash","LeafId","LeafQueryData","LeafRange","Number","Number","Options","PayloadHash","PayloadQueryData","PayloadRange","Pending","QueryablePayload","Ready","Request","RequestSnafu","Timestamp","TransactionHash","TransactionInclusionProof","TransactionIndex","TransactionIndex","TransactionQueryData","TransactionSummaryQueryData","UpdateAvailabilityData","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","backtrace","block_hash","block_hash","block_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","by_hash","by_hash","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","context","data","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enumerate","enumerate","enumerate","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fail","fail","fail","fetch_timeout","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","genesis","genesis","get_block","get_block_range","get_block_with_transaction","get_hash","get_hash","get_leaf","get_leaf_range","get_payload","get_payload_range","group_id","hash","hash","hash","hash","hash","hash","hash","header","header","header","header","header","header","header","height","height","height","height","height","height","in_current_span","in_current_span","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_block","insert_leaf","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_future","is_empty","is_empty","is_empty","iter","leaf","leaf","len","len","map","message","metadata","new","new","nth","nth","nth_transaction","nth_transaction","nth_transaction_with_proof","nth_transaction_with_proof","num_transactions","num_transactions","partial_cmp","partial_cmp","payload","payload_hash","payload_hash","proof","proof","proposer","proposer","proposer","qc","qc_leaf","resolve","resource","resource","resource","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","size","size","source","source","status","status","subscribe_blocks","subscribe_blocks","subscribe_leaves","subscribe_leaves","subscribe_payloads","subscribe_payloads","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","transaction","transaction","transaction","transaction","transaction_by_hash","transaction_by_hash","transaction_by_hash","transaction_by_hash_with_proof","transaction_by_hash_with_proof","transaction_with_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_context","with_timeout","height","index","message","resource","resource","resource","source","status","AvailabilityProvider","Error","ExtensibleDataSource","FetchingDataSource","FileSystemDataSource","MetricsDataSource","SqlDataSource","UpdateDataSource","VersionedDataSource","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","as_mut","as_ref","block_height","block_height","block_height","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commit","count_proposals","create","create_with_store","default","deref","deref","deref_mut","deref_mut","drop","drop","fetching","fmt","fmt","from","from","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","init","init","inner","inner_mut","insert_block","insert_leaf","insert_leaf","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","metrics","metrics","new","open","open_with_store","populate_metrics","populate_metrics","revert","revert","skip_version","sql","storage","sync_status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","AvailabilityProvider","BlockRequest","Builder","FetchingDataSource","Id","StorageReadGuard","StorageWriteGuard","WithTransaction","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_height","block_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone_into","clone_into","cmp","commit","compare","connect","count_proposals","create","create_with_store","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_proactive_fetching","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_block","get_block_range","get_block_with_transaction","get_hash","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","hash","header","init","init","init","init","init","insert_block","insert_leaf","insert_leaf","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","metrics","new","open","open_with_store","partial_cmp","populate_metrics","revert","skip_version","storage","storage_mut","sync_status","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_major_scan_interval","with_minor_scan_interval","with_proactive_range_chunk_size","with_range_chunk_size","with_retry_delay","Builder","Config","Error","Migration","Query","SqlDataSource","Transaction","client","connect","include_migrations","postgres","transaction","AvailabilityStorage","FileSystemStorage","SqlStorage","fs","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","sql","FileSystemStorage","as_any","as_any_mut","block_height","borrow","borrow_mut","commit","count_proposals","create","create_with_store","deref","deref_mut","drop","fmt","from","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","init","insert_block","insert_leaf","insert_leaf","into","into_any","into_any_arc","into_any_rc","open","open_with_store","revert","skip_version","sync_status","try_from","try_into","type_id","vzip","Config","Error","Migration","Query","SqlStorage","Transaction","__clone_box","__clone_box","__clone_box","__clone_box","applied_on","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","backtrace","block_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","chain","checksum","client","client","client","clone","clone","clone_into","clone_into","cmp","commit","compare","connect","connect","context","count_proposals","database","default","default_migrations","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast_mut","downcast_ref","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","execute","execute_many","execute_many_with_retries","execute_one","execute_one_with_retries","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","header","header","host","include_dir","include_migrations","init","init","init","init","init","insert_block","insert_leaf","insert_leaf","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","migrations","msg","name","new","no_migrations","partial_cmp","password","port","postgres","prefix","query","query_one","query_one_static","query_opt","query_opt_static","query_static","reset_schema","revert","root_cause","schema","sql","sync_status","tls","to_owned","to_owned","to_string","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unapplied","upsert","user","version","vzip","vzip","vzip","vzip","vzip","Callback","Fetcher","LocalCallback","Provider","Request","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","provider","request","run","run","spawn_fetch","to_owned","try_from","try_into","type_id","vzip","with_retry_delay","AnyProvider","NoFetching","Provider","QueryServiceProvider","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fetch","fetch","fetch","fetch","fetch","fetch","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_block_provider","with_leaf_provider","with_provider","LeafRequest","PayloadRequest","Request","Response","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","get_hash","get_hash","hash","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Counter","Gauge","Histogram","Label","MetricsError","NoSuchMetric","NoSuchSubgroup","Prometheus","PrometheusMetrics","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_point","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_counter","create_gauge","create_histogram","create_label","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","export","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get","get","get_counter","get_gauge","get_histogram","get_label","get_subgroup","header","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mean","sample_count","set","set","source","subgroup","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","vzip","vzip","label","namespace","path","source","Custom","CustomSnafu","Error","Error","InvalidSignatureKey","InvalidSignatureKeySnafu","LeafQueryData","NodeDataSource","Options","Query","QueryProposals","QueryProposalsSnafu","QuerySnafu","Request","RequestSnafu","SyncStatus","SyncStatus","SyncStatusSnafu","UpdateNodeData","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","count_proposals","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","get_proposals","group_id","hash","header","in_current_span","init","init","init","init","init","init","init","init","init","insert_leaf","internal","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","message","missing_blocks","missing_leaves","partial_cmp","proposer","serialize","serialize","source","status","status","sync_status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","message","proposer","source","source","source","source","status","Error","Internal","MempoolQueryData","Options","Request","StatusDataSource","UpdateStatusData","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","cmp","compare","consensus_metrics","consensus_metrics","default","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","extensions","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","group_id","hash","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","memory_footprint","mempool_info","mempool_info","metrics","partial_cmp","populate_metrics","serialize","serialize","source","status","success_rate","success_rate","to_owned","to_owned","to_string","transaction_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","reason","source"],"q":[[0,"hotshot_query_service"],[275,"hotshot_query_service::Error"],[280,"hotshot_query_service::QueryError"],[281,"hotshot_query_service::availability"],[950,"hotshot_query_service::availability::Error"],[958,"hotshot_query_service::data_source"],[1052,"hotshot_query_service::data_source::fetching"],[1215,"hotshot_query_service::data_source::sql"],[1227,"hotshot_query_service::data_source::storage"],[1240,"hotshot_query_service::data_source::storage::fs"],[1281,"hotshot_query_service::data_source::storage::sql"],[1478,"hotshot_query_service::fetching"],[1513,"hotshot_query_service::fetching::provider"],[1598,"hotshot_query_service::fetching::request"],[1663,"hotshot_query_service::metrics"],[1838,"hotshot_query_service::metrics::MetricsError"],[1842,"hotshot_query_service::node"],[2120,"hotshot_query_service::node::Error"],[2127,"hotshot_query_service::status"],[2246,"hotshot_query_service::status::Error"],[2248,"dyn_clone::sealed"],[2249,"dyn_clone::sealed"],[2250,"core::error"],[2251,"clap_builder::builder::command"],[2252,"snafu::backtrace_shim"],[2253,"core::option"],[2254,"alloc::string"],[2255,"core::convert"],[2256,"tide_disco::status"],[2257,"core::clone"],[2258,"hotshot_types::traits::node_implementation"],[2259,"commit"],[2260,"commit"],[2261,"core::result"],[2262,"serde::de"],[2263,"hotshot_types::data"],[2264,"core::fmt"],[2265,"core::fmt"],[2266,"clap_builder"],[2267,"hotshot_types::traits::storage"],[2268,"core::hash"],[2269,"core::marker"],[2270,"core::hash"],[2271,"hotshot_types::simple_certificate"],[2272,"hotshot_types::simple_certificate"],[2273,"core::hash"],[2274,"core::fmt"],[2275,"alloc::sync"],[2276,"alloc::rc"],[2277,"hotshot::types::handle"],[2278,"hotshot_types::traits::node_implementation"],[2279,"serde::ser"],[2280,"core::cmp"],[2281,"core::cmp"],[2282,"snafu"],[2283,"tide_disco::api"],[2284,"tide_disco::request"],[2285,"core::future::future"],[2286,"core::pin"],[2287,"futures_core::stream"],[2288,"core::marker"],[2289,"hotshot_types::data"],[2290,"hotshot_types::simple_certificate"],[2291,"std::path"],[2292,"anyhow"],[2293,"atomic_store::atomic_store"],[2294,"hotshot_types::traits::metrics"],[2295,"hotshot_types::event"],[2296,"async_lock::rwlock"],[2297,"async_lock::rwlock"],[2298,"time::offset_date_time"],[2299,"std::backtrace"],[2300,"anyhow"],[2301,"tokio_postgres::to_statement"],[2302,"core::iter::traits::collect"],[2303,"tokio_postgres::config"],[2304,"refinery_core::runner"],[2305,"refinery_core::error"],[2306,"postgres_types"],[2307,"url"],[2308,"hotshot_types::traits::metrics"]],"d":["","","Contains the error value","","There was an error while trying to fetch the requested â€¦","","This is the consensus-internal analogous concept to a â€¦","","The requested resource exists but is not currently â€¦","SNAFU context selector for the <code>QueryError::Missing</code> variant","","The requested resource does not exist or is not known to â€¦","SNAFU context selector for the <code>QueryError::NotFound</code> variant","Contains the success value","","","","","A reference to a <code>T</code> which can be resolved into a whole <code>T</code>.","","SNAFU context selector for the <code>QueryError::Error</code> variant","","Item within a <code>Payload</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Queries for HotShot chain state.","","","","Block header.","Optional block payload.","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","Get a commitment to the underlying object.","","","Persistent storage and sources of data consumed by APIs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Fetching missing data from remote providers.","Fill this leaf with the block payload.","Fill this leaf with the block payload, without checking â€¦","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create a leaf from information stored about a view.","Create a new leaf from its components.","The block header contained in this leaf.","Optional block payload.","","Height of this leaf in the chain.","The QC linking this leaf to its parent in the chain.","Commitment to this leafâ€™s parent.","A commitment to the block payload contained in this leaf.","Identity of the network participant who proposed this leaf.","Time when this leaf was created.","","","","","","","","Embed migrations from the given directory into the current â€¦","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Per spec, justification","","","A nodeâ€™s view of a HotShot chain","","The hash of the parent <code>Leaf</code> So we can ask if it extends","","the proposer id of the leaf","Run an instance of the HotShot Query service with no â€¦","","","","","","Queries for node-specific state and uncommitted data.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the underlying object if it is available without â€¦","","","","","","","","","","","CurView from leader when proposing leaf","","","","","","","","","","","","","","An interface for querying a HotShot blockchain.","A block hash is the hash of the block header.","","","","","","SNAFU context selector for the <code>Error::Custom</code> variant","","","An in-progress request to fetch some data.","","SNAFU context selector for the <code>Error::FetchBlock</code> variant","","SNAFU context selector for the <code>Error::FetchLeaf</code> variant","","SNAFU context selector for the <code>Error::FetchTransaction</code> â€¦","","","A proof that a certain transaction exists in the block.","","","SNAFU context selector for the â€¦","Enumerate the transactions in this block.","","","","","","","","","","","","A block payload whose contents (e.g. individual â€¦","","","SNAFU context selector for the <code>Error::Request</code> variant","","","","","An index which can be used to efficiently retrieve a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Get the index of the transaction with a given hash, if it â€¦","Get the index of the transaction with a given hash, if it â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>Fetch</code> to a <code>Result</code> with the provided error â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumerate the transactions in the block with their indices.","Enumerate the transactions in the block with their indices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Timeout for failing requests due to missing data.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the block containing a transaction with the given â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this block is empty of transactions.","Whether this block is empty of transactions.","","List the transaction indices in the block.","","","The number of transactions in the block.","","Transform the result of this fetch.","","","Collect information about a <code>Leaf</code>.","","Get the index of the <code>nth</code> transaction.","Get the index of the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction, along with an inclusion proof.","Get the <code>nth</code> transaction, along with an inclusion proof.","","","","","","","","Get an inclusion proof for a transaction with a given â€¦","Get an inclusion proof for a transaction with a given â€¦","","","","","","Wait for the data to become available, if it is not â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a transaction by its block-specific index.","Get a transaction by its block-specific index.","","","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get a transaction by its block-specific index, along with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the requested data if it is available immediately.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>Fetch</code> to a <code>Result</code> with the provided error â€¦","Wait for the requested data to become available, but only â€¦","","","","","","","","","","","Wrapper to add extensibility to an existing data source.","","A data source for the APIs provided in this crate, backed â€¦","A minimal data source for the status API provided in this â€¦","","An extension trait for types which implement the update â€¦","A data source with an atomic transaction-based â€¦","","","","","","","","","","","","","","","","","","","","","","Atomically commit to all outstanding modifications to the â€¦","","","Create a new FileSystemDataSource with storage at <code>path</code>.","Create a new FileSystemDataSource using a persistent â€¦","","","","","","","","Asynchronous retrieval of missing data.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Access the underlying data source.","Mutably access the underlying data source.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent â€¦","","","Erase all oustanding modifications to the data.","","Advance the version of the persistent store without â€¦","","Persistent storage for data sources.","","","","","","","","","","Update query state based on a new consensus event.","","","A provider which can be used as a fetcher by the â€¦","A request to fetch a block.","Builder for <code>FetchingDataSource</code> with configuration.","The most basic kind of data source.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a <code>FetchingDataSource</code> with these options.","Build a <code>FetchingDataSource</code> with the given <code>storage</code> and â€¦","","","","","","","","Connect to a remote database.","","Create a new FileSystemDataSource with storage at <code>path</code>.","Create a new FileSystemDataSource using a persistent â€¦","","","","","","","","","","","","","","Run without proactive fetching.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Construct a new builder with the given storage and fetcher â€¦","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent â€¦","","","","Advance the version of the persistent store without â€¦","Obtain direct, read-only access to the underlying local â€¦","Obtain direct, mutable access the underlying local storage.","","","","","Access the transaction which is accumulating all â€¦","","","","","","","","","","","","","","","","","","","","","Set the interval (denominated in minor scans) between â€¦","Set the time interval between minor proactive fetching â€¦","Set the number of items to process at a time when scanning â€¦","Set the number of items to process at a time when loading â€¦","Set the maximum delay between retries of fetches.","","","The <code>Error</code> type, a wrapper around a dynamic error type.","Represents a schema migration to be run on the database, â€¦","","A data source for the APIs provided in this crate, backed â€¦","","","Connect to a remote database.","Embed migrations from the given directory into the current â€¦","","Access the transaction which is accumulating all â€¦","Persistent storage for a HotShot blockchain.","","","","","","","","","","","","","Storage for the APIs provided in this crate, backed by a â€¦","","","","","","","","Create a new FileSystemStorage with storage at <code>path</code>.","Create a new FileSystemStorage using a persistent storage â€¦","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","Open an existing FileSystemStorage from storage at <code>path</code>.","Open an existing FileSystemStorage using a persistent â€¦","","Advance the version of the persistent store without â€¦","","","","","","Postgres client config.","The <code>Error</code> type, a wrapper around a dynamic error type.","Represents a schema migration to be run on the database, â€¦","","Storage for the APIs provided in this crate, backed by a â€¦","An atomic SQL transaction.","","","","","Get the timestamp from when the Migration was applied. <code>None</code>â€¦","","","","","","","","","","","","","Get the backtrace for this Error.","","","","","","","","","","","","Connect to the database, setting options on the underlying â€¦","An iterator of the chain of source errors contained by â€¦","Get the Migration checksum. Checksum is formed from the â€¦","","","","","","","","","","","Connect to the database with this config.","Connect to a remote database.","Wrap the error value with additional context.","","Set the name of the database to connect to.","","The migrations requied to build the default schema for â€¦","","","","","","","","","","","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","","","","","","","","","","","","Execute a statement against the underlying database.","Execute a statement that is expected to modify at least â€¦","Execute a statement that is expected to modify at least â€¦","Execute a statement that is expected to modify exactly one â€¦","Execute a statement that is expected to modify exactly one â€¦","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Set the hostname of the database server.","Embed the contents of a directory in your crate.","Embed migrations from the given directory into the current â€¦","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","Add custom migrations to run when connecting to the â€¦","Create a new error object from a printable error message.","Get the Migration Name","Create a new error object from any error type.","Skip all migrations when connecting to the database.","","Set a password for connecting to the database.","Set the port on which to connect to the database.","","Get the Prefix","","Query the underlying SQL database, returning exactly one â€¦","Query the underlying SQL database with no parameters, â€¦","Query the underlying SQL database, returning zero or one â€¦","Query the underlying SQL database with no parameters, â€¦","Query the underlying SQL database with no parameters.","Reset the schema on connection.","","The lowest level cause of this error â€” this errorâ€™s â€¦","Set the name of the schema to use for queries.","","","Use TLS for an encrypted connection to the database.","","","","","Access the transaction which is accumulating all â€¦","","","","","","","","","","","","","","","","Create an unapplied migration, name and version are parsed â€¦","","Set the DB user to connect as.","Get the Migration version","","","","","","A callback to process the result of a request.","Management of concurrent requests to fetch resources.","A callback to process the result of a request.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Asynchronous fetching from external data availability â€¦","Requests for fetching resources.","","","Fetch a resource, if it is not already being fetched.","","","","","","","Adaptor combining multiple data availability providers.","Trivial <code>Provider</code> where fetching always fails.","A provider which is able to satisfy requests for data of â€¦","Data availability provider backed by another instance of â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch a resource.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Add a sub-provider which fetches blocks.","Add a sub-provider which fetches leaves.","Add a sub-provider which fetches both blocks and leaves.","A request for a leaf with a given height.","A request for a payload with a given commitment.","A request for a resource.","The type of resource that will be returned as a successful â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A Counter metric.","A Gauge metric.","A Histogram metric.","A Label metric.","","","","","A Prometheus-based implementation of a Metrics registry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a counter in this sub-group by name.","Get a gauge in this sub-group by name.","Get a histogram in this sub-group by name.","Get a label in this sub-group by name.","Get a (possibly nested) subgroup of this group by its path.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::Custom</code> variant","","","","SNAFU context selector for the <code>Error::InvalidSignatureKey</code> â€¦","","","","","","SNAFU context selector for the <code>Error::QueryProposals</code> â€¦","SNAFU context selector for the <code>Error::Query</code> variant","","SNAFU context selector for the <code>Error::Request</code> variant","","","SNAFU context selector for the <code>Error::SyncStatus</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[7,7,152,0,10,0,0,0,10,0,7,10,0,152,0,0,0,0,0,0,0,7,0,17,17,7,7,11,11,12,12,13,13,10,10,17,7,11,12,13,10,25,17,7,11,12,13,10,25,7,10,25,25,0,25,7,10,17,17,17,7,11,12,13,10,25,17,7,11,12,13,10,25,11,12,13,7,7,10,17,7,11,12,13,10,17,7,11,12,13,10,17,21,17,17,0,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,7,10,17,7,10,17,7,11,12,13,10,25,17,17,17,17,17,11,12,13,0,17,17,17,17,7,7,11,12,13,10,10,17,7,7,7,7,7,11,12,13,10,25,25,25,17,17,17,17,17,17,17,17,17,17,17,25,17,17,7,10,7,10,0,17,7,11,12,13,10,25,0,7,17,7,11,12,13,10,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,11,12,13,17,13,0,0,25,17,25,17,0,17,7,10,7,10,0,7,10,25,17,7,11,12,13,10,17,7,10,17,7,11,12,13,10,25,17,7,11,12,13,10,25,21,17,17,7,11,12,13,10,25,25,25,17,17,7,11,12,13,10,25,205,206,207,208,205,209,0,0,0,0,58,0,37,0,0,120,0,37,0,37,0,37,0,87,88,80,0,37,0,80,0,0,0,58,87,88,0,88,0,58,94,0,94,37,0,0,0,0,0,80,0,0,0,87,87,88,88,68,68,67,67,89,89,70,70,71,71,90,90,91,91,92,92,72,72,73,73,74,74,75,75,76,76,37,37,100,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,67,37,100,100,67,37,68,70,71,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,72,73,74,75,76,80,80,67,37,87,88,68,67,89,70,71,90,91,92,72,73,74,75,76,37,87,88,68,67,89,70,71,90,91,92,72,73,74,75,76,37,87,88,87,88,94,70,100,0,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,67,37,68,89,70,71,90,91,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,80,80,89,87,88,68,89,70,71,90,91,87,87,87,87,88,88,88,88,68,68,68,68,89,89,89,89,70,70,70,70,71,71,71,71,90,90,90,90,91,91,91,91,100,72,73,74,75,76,100,87,87,88,88,68,67,67,89,70,71,90,91,92,72,73,74,75,76,37,37,94,87,87,87,88,88,88,68,67,89,70,70,71,90,90,91,100,92,72,73,74,75,76,37,37,37,100,100,68,89,58,58,58,87,88,58,58,58,58,100,87,88,68,89,70,71,90,87,88,68,67,89,90,37,68,89,70,71,90,75,67,37,75,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,120,120,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,92,72,73,74,75,76,94,80,80,89,80,68,67,80,89,94,76,89,68,89,80,80,80,80,80,80,89,90,87,88,89,68,89,80,80,68,89,90,68,67,94,72,73,74,68,89,70,71,90,91,37,89,70,90,67,37,37,76,58,58,58,58,58,58,87,88,68,67,89,70,71,90,91,92,72,73,74,75,76,37,87,88,67,37,80,80,89,71,80,80,89,80,80,80,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,100,100,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,94,210,210,211,212,213,214,215,211,0,62,0,0,0,0,0,0,0,127,127,128,128,127,128,127,128,127,127,127,127,128,127,128,127,128,127,128,127,128,62,127,127,130,130,128,127,128,127,128,127,128,0,127,128,127,128,127,127,127,127,127,127,127,127,127,128,127,127,127,127,127,127,128,127,128,127,128,127,128,127,128,127,130,130,127,128,62,127,130,0,0,127,127,128,127,128,127,128,127,128,61,127,128,0,0,0,0,141,0,0,141,138,138,141,141,139,138,146,147,141,139,138,146,147,141,138,138,139,138,146,147,141,139,138,146,147,141,139,138,138,141,138,141,141,138,141,138,138,138,138,139,138,146,146,147,147,141,139,138,146,147,147,141,139,139,138,146,147,141,141,141,141,141,141,138,141,141,139,138,146,146,147,147,141,141,141,141,138,138,138,141,138,138,138,138,138,141,141,139,138,146,147,141,138,138,138,139,138,146,147,141,139,138,146,147,141,139,138,146,147,141,139,138,146,147,141,138,139,138,138,141,138,138,138,138,138,138,138,141,141,138,139,138,146,147,141,139,138,146,147,141,139,138,146,147,141,139,138,146,147,141,139,139,139,139,139,0,0,0,0,0,0,0,153,153,0,0,153,0,0,0,0,140,140,140,140,140,140,140,140,0,0,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,0,0,0,0,0,0,155,155,142,142,155,144,155,151,142,150,144,155,151,142,150,144,144,144,150,144,155,151,142,150,144,155,151,142,150,142,144,155,159,151,150,155,142,155,142,155,150,155,142,150,144,150,142,142,0,144,144,155,151,142,150,144,144,155,151,142,150,144,144,144,144,144,155,151,142,150,150,155,155,155,155,155,151,151,151,151,151,144,144,155,155,142,150,144,144,144,155,151,142,142,150,142,150,150,150,150,150,150,150,150,150,144,155,142,0,0,144,155,151,142,150,150,150,150,144,155,151,142,150,144,155,151,142,150,144,155,151,142,150,144,155,151,142,150,144,142,144,155,144,142,155,142,142,0,155,159,159,159,159,159,159,142,150,144,142,155,150,142,155,142,144,155,150,144,155,151,142,150,144,155,151,142,150,144,155,151,142,150,155,151,142,155,144,155,151,142,150,0,0,0,0,0,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,0,0,172,173,171,171,171,171,171,171,171,0,0,0,0,176,176,177,177,178,178,176,177,178,176,177,178,176,177,178,176,177,178,176,177,178,176,177,178,176,178,176,177,178,176,177,178,176,177,178,175,176,176,177,177,178,176,177,178,176,177,178,176,177,178,176,177,178,176,177,178,176,177,178,176,177,178,177,176,177,178,176,177,178,176,177,178,176,177,178,176,177,178,176,176,176,0,0,0,174,180,180,179,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,180,180,180,179,179,179,179,180,179,180,179,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,0,0,0,0,0,185,185,185,0,135,135,182,182,186,186,183,183,187,187,182,183,185,135,182,186,183,187,185,135,182,186,183,187,185,185,185,135,182,186,183,187,185,135,182,186,183,187,185,135,182,186,183,187,135,182,186,183,187,135,135,135,135,135,185,135,182,186,183,187,185,135,182,186,183,187,185,185,135,182,186,183,187,135,185,185,135,182,186,183,187,185,185,135,182,186,183,187,182,186,187,135,135,135,135,135,185,185,185,135,182,186,183,187,185,135,182,186,183,187,185,135,182,186,183,187,185,135,182,186,183,187,185,135,182,186,183,187,183,183,186,187,185,135,183,135,182,186,183,187,185,185,135,182,186,183,187,185,135,182,186,183,187,185,135,182,186,183,187,186,185,135,182,186,183,187,216,216,217,218,36,0,0,134,36,0,0,0,0,36,36,0,0,36,0,0,36,0,0,196,196,197,197,198,198,199,199,194,194,200,200,195,195,36,36,201,196,201,197,198,199,194,200,195,36,196,201,197,198,199,194,200,195,36,36,201,201,36,59,196,201,197,198,199,194,200,195,36,196,201,197,198,199,194,200,195,36,194,195,36,196,197,198,199,194,200,195,36,196,197,198,199,194,200,195,36,196,196,59,201,0,196,201,197,198,199,194,200,195,36,196,201,197,198,199,194,200,195,36,36,196,36,196,201,197,198,199,194,200,195,36,196,196,196,196,196,201,194,195,196,197,198,199,194,200,195,36,36,196,201,197,198,199,194,200,195,36,36,36,201,201,196,59,201,196,36,36,196,201,197,198,199,194,200,195,36,134,36,196,201,197,198,199,194,200,195,36,196,201,197,198,199,194,200,195,36,196,201,197,198,199,194,200,195,36,196,201,197,198,199,194,200,195,36,197,198,199,194,200,195,195,196,196,196,199,196,36,36,36,195,59,196,197,198,199,194,200,195,36,36,196,201,197,198,199,194,200,195,36,196,201,197,198,199,194,200,195,36,196,201,197,198,199,194,200,195,36,201,201,196,201,197,198,199,194,200,195,36,219,220,221,222,220,223,219,0,38,0,0,38,0,0,202,202,38,38,203,202,203,38,202,203,38,38,203,203,38,60,202,203,38,202,203,38,38,202,38,202,38,202,202,60,60,202,203,0,202,203,38,202,203,38,38,202,38,202,203,38,202,202,202,202,202,203,202,38,38,202,203,38,38,38,203,203,202,203,202,38,38,202,203,38,202,203,38,202,203,38,202,203,38,202,203,38,202,60,60,60,202,204,202,38,38,38,60,60,202,38,38,202,202,203,38,202,203,38,202,203,38,203,203,202,203,38,224,225],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],0,0,[7,[[9,[8]]]],[10,[[9,[8]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,10],[12,10],[[[13,[-1]]],10,[[15,[14]]]],[[16,14],7],[7,[[9,[5]]]],[10,[[9,[5]]]],[[[17,[-1]]],[[17,[-1]]],[18,19]],[7,7],[11,11],[12,12],[[[13,[-1]]],[[13,[-1]]],18],[10,10],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[17,[-1]]],[[20,[[17,[-1]]]]],19],[21,[[20,[-1]]],22],[-1,[[20,[-2]]],[],[]],[[[17,[-1]],23,24],[],19],0,[[],25],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[7,27],[10,27],[-1,[[28,[[17,[-2]]]]],29,19],[-1,[[28,[7]]],29],[-1,[[28,[10]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[[17,[-1]],[17,[-1]]],30,19],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[11,[[28,[-1,10]]],[]],[12,[[28,[-1,10]]],[]],[[[13,[-1]]],[[28,[-2,10]]],[[15,[14]]],[]],0,[[[17,[-1]],26],[[28,[2,31]]],19],[[[17,[-1]]],2,19],[[[17,[-1]],32],[[28,[2,33]]],[34,19]],[[[17,[-1]],32],[[28,[2,33]]],19],[[7,32],35],[[7,32],35],[[11,32],35],[[12,32],35],[[[13,[-1]],32],35,34],[[10,32],35],[[10,32],35],[-1,-1,[]],[36,7],[37,7],[[[2,[14,16]]],7],[-1,-1,[]],[38,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[39,[[28,[25,40]]]],[39,[[28,[25,40]]]],[[[41,[-1]]],[[17,[-1]]],19],[[],[[17,[-1]]],19],[[[17,[-1]]],[],19],[[[17,[-1]]],9,19],[[-1,-2],24,[42,43],44],[[[17,[-1]]],24,19],[[[17,[-1]]],[[47,[-1,[45,[-1]],46]]],19],[[[17,[-1]]],[[20,[[17,[-1]]]]],19],[[[17,[-1]]],[],19],[[[17,[-1]]],[],19],[[[17,[-1]]],[],19],[[],[[9,[48]]]],[[[17,[-1]],-2],2,19,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[-1,[],[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[-1,7,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[11,-1],10,[]],[[12,-1],10,[]],[[[13,[-1]],-2],10,[[15,[14]]],[]],0,0,0,0,0,0,0,0,[[25,-2,[57,[-1,-3]]],[[28,[2,7]]],19,[[58,[-1]],[59,[-1]],60,[61,[-1]],62,52,53],[[63,[-1]]]],[[[17,[-1]],-2],28,[19,64],65],[[7,-1],28,65],[[10,-1],28,65],[7,[[9,[5]]]],[10,[[9,[5]]]],0,[7,16],[10,16],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[21,[[28,[-1,21]]],22],[-1,[[28,[-2,-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[25,39],[[28,[2,40]]]],[[25,39],[[28,[2,40]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],[[[67,[-1]]],[[9,[8]]],19],[37,[[9,[8]]]],[[[68,[-1]]],[[69,[-1]]],19],[[[70,[-1]]],[[69,[-1]]],19],[[[71,[-1]]],[[69,[-1]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[72,[-1]]],37,[[15,[14]]]],[[[73,[-1]]],37,[[15,[14]]]],[[[74,[-1]]],37,[[15,[14]]]],[[[75,[-1,-2]]],37,[[15,[24]]],[[15,[24]]]],[[[76,[-1,-2]]],37,[[15,[14]]],[[15,[16]]]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[-1]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[-1]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[67,[-1]]],[[9,[5]]],19],[37,[[9,[5]]]],[[[87,[-1]]],[[87,[-1]]],19],[[[88,[-1]]],[[88,[-1]]],19],[[[68,[-1]]],[[68,[-1]]],[18,19]],[[[67,[-1]]],[[67,[-1]]],[18,19]],[[[89,[-1]]],[[89,[-1]]],[18,19]],[[[70,[-1]]],[[70,[-1]]],[18,19]],[[[71,[-1]]],[[71,[-1]]],[18,19]],[[[90,[-1]]],[[90,[-1]]],[18,19]],[[[91,[-1]]],[[91,[-1]]],[18,19]],[92,92],[[[72,[-1]]],[[72,[-1]]],18],[[[73,[-1]]],[[73,[-1]]],18],[[[74,[-1]]],[[74,[-1]]],18],[[[75,[-1,-2]]],[[75,[-1,-2]]],18,18],[[[76,[-1,-2]]],[[76,[-1,-2]]],18,18],[37,37],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[87,[-1]],[87,[-1]]],93,19],[[[88,[-1]],[88,[-1]]],93,19],[[-1,-2],93,[],[]],[[-1,-2],93,[],[]],[[[94,[-1]],-3],[[28,[-1,-2]]],[],[5,95],[[98,[-2],[[96,[97]]]]]],[[[70,[-1]]],[[99,[-1]]],19],[[],100],[100,[[28,[[101,[-1,37]],102]]],[52,53,103]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[67,[-1]]],27,19],[37,27],[-1,[[28,[[68,[-2]]]]],29,19],[-1,[[28,[[89,[-2]]]]],29,19],[-1,[[28,[[70,[-2]]]]],29,19],[-1,[[28,[[71,[-2]]]]],29,19],[-1,[[28,[[90,[-2]]]]],29,19],[-1,[[28,[[91,[-2]]]]],29,19],[-1,[[28,[37]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],[[54,[86]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],[[54,[86]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[89,[-1]]],[[0,[[86,[],[[85,[[2,[[104,[-1]],[105,[-1]]]]]]]]]]],19],[[[87,[-1]],[87,[-1]]],30,19],[[[88,[-1]],[88,[-1]]],30,19],[[[68,[-1]],[68,[-1]]],30,[81,19]],[[[89,[-1]],[89,[-1]]],30,[81,19]],[[[70,[-1]],[70,[-1]]],30,[81,19]],[[[71,[-1]],[71,[-1]]],30,[81,19]],[[[90,[-1]],[90,[-1]]],30,[81,19]],[[[91,[-1]],[91,[-1]]],30,[81,19]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[[[72,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[73,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[74,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[75,[-1,-2]]],[[28,[-3,37]]],[[15,[24]]],[[15,[24]]],[]],[[[76,[-1,-2]]],[[28,[-3,37]]],[[15,[14]]],[[15,[16]]],[]],0,[[[87,[-1]],32],35,19],[[[87,[-1]],32],35,19],[[[88,[-1]],32],35,19],[[[88,[-1]],32],35,19],[[[68,[-1]],32],35,[34,19]],[[[67,[-1]],32],35,[34,19]],[[[67,[-1]],32],35,19],[[[89,[-1]],32],35,[34,19]],[[[70,[-1]],32],35,[34,19]],[[[71,[-1]],32],35,[34,19]],[[[90,[-1]],32],35,[34,19]],[[[91,[-1]],32],35,[34,19]],[[92,32],35],[[[72,[-1]],32],35,34],[[[73,[-1]],32],35,34],[[[74,[-1]],32],35,34],[[[75,[-1,-2]],32],35,34,34],[[[76,[-1,-2]],32],35,34,34],[[37,32],35],[[37,32],35],[-1,-1,[]],[-1,-1,[]],[[[106,[-1]]],[[87,[-1]]],19],[26,[[87,[-1]]],19],[26,[[88,[-1]]],19],[[[69,[-1]]],[[88,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[89,[-1]]],[[70,[-1]]],19],[-1,-1,[]],[[[89,[-1]]],[[90,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[107,37],[[[2,[14,16]]],37],[-1,-1,[]],[39,[[28,[100,40]]]],[39,[[28,[100,40]]]],[[],[[68,[-1]]],19],[[],[[89,[-1]]],19],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[15,[[88,[-2]]]],52,53]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[115,[26]],52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],[116,[-2]]],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[15,[[87,[-2]]]],52,53]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[115,[26]],52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[15,[[88,[-2]]]],52,53]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[115,[26]],52]],[[],[[9,[48]]]],[[[87,[-1]],-2],2,19,49],[[[88,[-1]],-2],2,19,49],[[[68,[-1]]],[[106,[-1]]],19],[[[89,[-1]]],[[69,[-1]]],19],[[[70,[-1]]],117,19],[[[71,[-1]]],[[116,[-1]]],19],[[[90,[-1]]],[[69,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[68,[-1]]],[[118,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[89,[-1]]],[[118,[-1]]],19],[[[90,[-1]]],[[118,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[68,[-1]]],24,19],[[[89,[-1]]],24,19],[[[70,[-1]]],24,19],[[[71,[-1]]],24,19],[[[90,[-1]]],24,19],0,[-1,[],[]],[-1,[],[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[120,[],[[119,[-1]]]],[89,[-2]]],[[112,[[54,[111]]]]],[5,34,52,53],19],[[[120,[],[[119,[-1]]]],[68,[-2]]],[[112,[[54,[111]]]]],[5,34,52,53],19],[-1,37,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[92,-1],37,[]],[[[72,[-1]],-2],37,[[15,[14]]],[]],[[[73,[-1]],-2],37,[[15,[14]]],[]],[[[74,[-1]],-2],37,[[15,[14]]],[]],[[[75,[-1,-2]],-3],37,[[15,[24]]],[[15,[24]]],[]],[[[76,[-1,-2]],-3],37,[[15,[14]]],[[15,[16]]],[]],[[[94,[-1]]],-2,52,[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],30,[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],30,[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[89,[-1]]],30,19],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],-2,[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[68,[-1]]],[[17,[-1]]],19],0,[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],26,[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[89,[-1]]],26,19],[[[94,[-1]],-3],[[94,[-2]]],[],[],[52,[122,[-1],[[121,[-2]]]]]],0,[[[89,[-1]]],[[123,[-1]]],19],[[[17,[-1]],[124,[-1]]],[[28,[[68,[-1]],[67,[-1]]]]],19],[[[118,[-1]],[99,[-1]]],[[89,[-1]]],19],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[-1]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[-1]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[[2,[-5,-3]]]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[[2,[-5,-3]]]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[89,[-1]]],24,19],[[[90,[-1]]],24,19],[[[87,[-1]],[87,[-1]]],[[9,[93]]],19],[[[88,[-1]],[88,[-1]]],[[9,[93]]],19],[[[89,[-1]]],[[99,[-1]]],19],[[[68,[-1]]],117,19],[[[89,[-1]]],117,19],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,-1],[[9,[-3]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,-1],[[9,[-3]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[68,[-1]]],[[125,[-1]]],19],[[[89,[-1]]],[[125,[-1]]],19],[[[90,[-1]]],[[125,[-1]]],19],[[[68,[-1]]],[[124,[-1]]],19],0,[[[94,[-1]]],-1,52],0,0,0,[[[68,[-1]],-2],28,19,65],[[[89,[-1]],-2],28,19,65],[[[70,[-1]],-2],28,19,65],[[[71,[-1]],-2],28,19,65],[[[90,[-1]],-2],28,19,65],[[[91,[-1]],-2],28,19,65],[[37,-1],28,65],[[[89,[-1]]],24,19],[[[70,[-1]]],24,19],[[[90,[-1]]],24,19],[[[67,[-1]]],[[9,[5]]],19],[37,[[9,[5]]]],[37,16],0,[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,-1],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,-1],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[89,[-1]],[104,[-1]]],[[9,[[71,[-1]]]]],19],[[[71,[-1]]],[[105,[-1]]],19],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[89,[-1]],[20,[[105,[-1]]]]],[[9,[[104,[-1]]]]],19],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[[2,[-5,-3]]]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[[2,[-5,-3]]]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,-1],[[9,[[2,[-5,-3]]]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[[[94,[-1]]],[[28,[-1,[94,[-1]]]]],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[100,39],[[28,[2,40]]]],[[100,39],[[28,[2,40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[94,[-1]],-4],[[28,[-1,-2]]],[],[5,95],[[98,[-2],[[96,[97]]]]],[[122,[],[[121,[-3]]]]]],[[[94,[-1]],126],[[9,[-1]]],52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[127,[-1,-2]]],-2,[],[]],[[[127,[-1,-2]]],-2,[],[]],[[[127,[-1,-2]]],[[112,[[54,[111]]]]],[60,52,53],[52,53]],[[[127,[-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[128,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[127,[-1,-2]]],[[127,[-1,-2]]],18,18],[128,128],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[62,[],[[119,[-1]]]]],[[112,[[54,[111]]]]],[5,34,52,53]],[[[127,[-1,-2]]],[[112,[[54,[111]]]]],[62,52],52],[[[127,[-2,-3]],[125,[-1]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[129,-2],[[131,[[130,[-1,-2]]]]],19,[[132,[-1]]]],[[133,-2],[[131,[[130,[-1,-2]]]]],19,[[132,[-1]]]],[[],128],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],0,[[[127,[-1,-2]],32],35,34,34],[[128,32],35],[-1,-1,[]],[-1,-1,[]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[88,[-1]]]],52,53]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[115,[26]],52]],[[[127,[-2,-3]],[116,[-1]]],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[87,[-1]]]],52,53]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[115,[26]],52]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[88,[-1]]]],52,53]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[115,[26]],52]],[[[127,[-2,-3]],[125,[-1]],[9,[26]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[],26],[[],26],[[[127,[-1,-2]]],-1,[],[]],[[[127,[-1,-2]]],-1,[],[]],[[[127,[-2,-3]],[89,[-1]]],[[112,[[54,[111]]]]],19,[[120,[-1]],52,53],[52,53]],[[[127,[-2,-3]],[68,[-1]]],[[112,[[54,[111]]]]],19,[[120,[-1]],52,53],[52,53]],[[[127,[-2,-3]],[68,[-1]]],[[112,[[54,[111]]]]],19,[[134,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[127,[-1,-2]]],135,[60,52,53],[52,53]],[128,135],[[-1,-2],[[127,[-1,-2]]],[],[]],[[129,-2],[[131,[[130,[-1,-2]]]]],19,[[132,[-1]]]],[[133,-2],[[131,[[130,[-1,-2]]]]],19,[[132,[-1]]]],[-1,[[54,[136]]],[]],[-1,[[54,[136]]],[]],[[[62,[],[[119,[-1]]]]],[[112,[[54,[111]]]]],[5,34,52,53]],[[[127,[-1,-2]]],[[112,[[54,[111]]]]],[62,52],52],[[[130,[-1,-2]]],[[131,[2]]],19,[[132,[-1]]]],0,0,[[[127,[-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[[61,[137,[-1]]],[[112,[[54,[111]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[138,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[[138,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[139,[-1,-2,-3]]],[[131,[[138,[-1,-2,-3]]]]],19,[[59,[-1]],[134,[-1]],[140,[-1]],62],[[132,[-1]]]],[[-2,-3],[[139,[-1,-2,-3]]],19,[[59,[-1]],[134,[-1]],[140,[-1]],62],[[132,[-1]]]],[[[138,[-1,-2,-3]]],[[138,[-1,-2,-3]]],19,[],[]],[[[141,[-1]]],[[141,[-1]]],19],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[141,[-1]],[141,[-1]]],93,19],[[[138,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[62,52,53],[52,53]],[[-1,-2],93,[],[]],[[142,-2],[[28,[[143,[-1,-2]],144]]],19,[[132,[-1]]]],[[[138,[-1,-2,-3]],[125,[-1]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[129,-2],[[131,[[138,[-1,[145,[-1]],-2]]]]],19,[[132,[-1]]]],[[133,-2],[[131,[[138,[-1,[145,[-1]],-2]]]]],19,[[132,[-1]]]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[146,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[[[147,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[147,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[[[139,[-1,-2,-3]]],[[139,[-1,-2,-3]]],[],[],[]],[26,2],[26,2],[26,2],[26,2],[26,2],[[[141,[-1]],[141,[-1]]],30,19],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[[138,[-1,-2,-3]],32],35,19,34,34],[[[141,[-1]],32],35,19],[[[141,[-1]],32],35,19],[-1,-1,[]],[-1,-1,[]],[[[148,[[0,[-1,-2]]]]],[[146,[-1,-2]]],19,[]],[-1,-1,[]],[[[149,[[0,[-1,-2]]]]],[[147,[-1,-2]]],19,[]],[-1,-1,[]],[[[116,[-1]]],[[141,[-1]]],19],[[[88,[-1]]],[[141,[-1]]],19],[26,[[141,[-1]]],19],[-1,-1,[]],[[[138,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[140,[-1]]],[[132,[-1]]],[[15,[[88,[-1]]]],52,53]],[[[138,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[140,[-1]]],[[132,[-1]]],[[115,[26]],52]],[[[138,[-1,-2,-3]],[116,[-1]]],[[112,[[54,[111]]]]],19,[[140,[-1]]],[[132,[-1]]]],[[-1,-2],24,[42,43],44],[[[138,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[140,[-1]]],[[132,[-1]]],[[15,[[87,[-1]]]],52,53]],[[[138,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[140,[-1]]],[[132,[-1]]],[[115,[26]],52]],[[[138,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[140,[-1]]],[[132,[-1]]],[[15,[[88,[-1]]]],52,53]],[[[138,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[140,[-1]]],[[132,[-1]]],[[115,[26]],52]],[[[138,[-1,-2,-3]],[125,[-1]],[9,[26]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[[141,[-1]],-2],2,19,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[[138,[-1,-2,-3]],[89,[-1]]],[[112,[[54,[111]]]]],19,[[120,[-1]],52,53],[52,53]],[[[138,[-1,-2,-3]],[68,[-1]]],[[112,[[54,[111]]]]],19,[[134,[-1]],52,53],[52,53]],[[[138,[-1,-2,-3]],[68,[-1]]],[[112,[[54,[111]]]]],19,[[120,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[138,[-1,-2,-3]]],135,19,[[59,[-1]],52,53],[52,53]],[[-1,-2],[[139,[-3,-1,-2]]],[],[],[]],[[129,-2],[[131,[[138,[-1,[145,[-1]],-2]]]]],19,[[132,[-1]]]],[[133,-2],[[131,[[138,[-1,[145,[-1]],-2]]]]],19,[[132,[-1]]]],[[[141,[-1]],[141,[-1]]],[[9,[93]]],19],[-1,[[54,[136]]],[]],[[[138,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[62,52,53],[52,53]],[[[138,[-1,[145,[-1]],-2]]],[[131,[2]]],19,[[132,[-1]]]],[[[138,[-1,-2,-3]]],[[146,[-1,-2]]],19,[],[]],[[[138,[-1,-2,-3]]],[[147,[-1,-2]]],19,[],[]],[[[138,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[[[138,[-1,150,-2]]],[[152,[151]]],19,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[139,[-1,-2,-3]],26],[[139,[-1,-2,-3]]],[],[],[]],[[[139,[-1,-2,-3]],126],[[139,[-1,-2,-3]]],[],[],[]],[[[139,[-1,-2,-3]],26],[[139,[-1,-2,-3]]],[],[],[]],[[[139,[-1,-2,-3]],26],[[139,[-1,-2,-3]]],[],[],[]],[[[139,[-1,-2,-3]],126],[[139,[-1,-2,-3]]],[],[],[]],0,0,0,0,0,0,0,[[[153,[-1,-2]]],[[112,[[54,[111]]]]],19,[52,53]],[[142,-2],[[28,[[143,[-1,-2]],144]]],19,[[132,[-1]]]],0,0,[[[153,[-1,-2]]],[[152,[151]]],19,[]],0,0,0,0,[[140,[88,[-1]]],[[112,[[54,[111]]]]],19],[[140,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[140,[116,[-1]]],[[112,[[54,[111]]]]],19],[[140,[88,[-1]]],[[112,[[54,[111]]]]],19],[[140,[87,[-1]]],[[112,[[54,[111]]]]],19],[[140,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[140,[88,[-1]]],[[112,[[54,[111]]]]],19],[[140,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],0,0,[-1,4,[]],[-1,4,[]],[[[145,[-1]]],[[112,[[54,[111]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[[[145,[-1]]],[[112,[[54,[111]]]]],19],[[[145,[-1]],[125,[-1]]],[[112,[[54,[111]]]]],19],[129,[[28,[[145,[-1]],154]]],19],[133,[[28,[[145,[-1]],154]]],19],[26,-1,[]],[26,-1,[]],[26,2],[[[145,[-1]],32],35,19],[-1,-1,[]],[[[145,[-1]],[88,[-1]]],[[112,[[54,[111]]]]],19],[[[145,[-1]],-2],[[112,[[54,[111]]]]],19,[[115,[26]],52]],[[[145,[-1]],[116,[-1]]],[[112,[[54,[111]]]]],19],[[[145,[-1]],[88,[-1]]],[[112,[[54,[111]]]]],19],[[[145,[-1]],[87,[-1]]],[[112,[[54,[111]]]]],19],[[[145,[-1]],-2],[[112,[[54,[111]]]]],19,[[115,[26]],52]],[[[145,[-1]],[88,[-1]]],[[112,[[54,[111]]]]],19],[[[145,[-1]],-2],[[112,[[54,[111]]]]],19,[[115,[26]],52]],[[[145,[-1]],[125,[-1]],[9,[26]]],[[112,[[54,[111]]]]],19],[[],26],[[[145,[-1]],[89,[-1]]],[[112,[[54,[111]]]]],19],[[[145,[-1]],[68,[-1]]],[[112,[[54,[111]]]]],19],[[[145,[-1]],[68,[-1]]],[[112,[[54,[111]]]]],19],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[129,[[28,[[145,[-1]],154]]],19],[133,[[28,[[145,[-1]],154]]],19],[[[145,[-1]]],[[112,[[54,[111]]]]],19],[[[145,[-1]]],[[28,[2,154]]],19],[[[145,[-1]]],[[112,[[54,[111]]]]],19],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[155,[[9,[156]]]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[144,5],[144,5],[144,157],[150,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[142,-2],[[28,[[143,[-1,-2]],144]]],19,[[132,[-1]]]],[144,158],[155,24],[159,[[112,[[54,[111]]]]]],[151,[[112,[[54,[111]]]]]],[150,[[112,[[54,[111]]]]]],[155,155],[142,142],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[155,155],93],[150,[[112,[[54,[111]]]]]],[[-1,-2],93,[],[]],[[142,-2],[[28,[[153,[-1,-2]],144]]],19,[[132,[-1]]]],[142,[[28,[150,144]]]],[[144,-1],144,[51,52,53]],[[150,[125,[-1]]],[[112,[[54,[111]]]]],19],[[142,27],142],[[],142],[[],[[160,[155]]]],[26,-1,[]],[144],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[144],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[144,[[28,[-1,144]]],[51,34,52,53]],[144,[[9,[-1]]],[51,34,52,53]],[144,[[9,[-1]]],[51,34,52,53]],[144,2],[26,2],[26,2],[26,2],[26,2],[26,2],[150,2],[[155,155],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[151,-1,-2],[[152,[24]]],[43,161],162],[[151,-1,-2],[[152,[24]]],[43,161],162],[[151,-1,-2],[[152,[24]]],[43,161],[162,18]],[[151,-1,-2],[[152,[2]]],[43,161],162],[[151,-1,-2],[[152,[2]]],[43,161],[162,18]],[[144,32],[[28,[2,33]]]],[[144,32],[[28,[2,33]]]],[[155,32],[[28,[2,33]]]],[[155,32],[[28,[2,33]]]],[[142,32],35],[[150,32],35],[-1,144,[5,52,53]],[-1,-1,[]],[163,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[164,142],[-1,-1,[]],[27,[[28,[142,-1]]],[]],[[150,[88,[-1]]],[[112,[[54,[111]]]]],19],[[150,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[150,[116,[-1]]],[[112,[[54,[111]]]]],19],[[150,[88,[-1]]],[[112,[[54,[111]]]]],19],[[150,[87,[-1]]],[[112,[[54,[111]]]]],19],[[150,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[150,[88,[-1]]],[[112,[[54,[111]]]]],19],[[150,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[150,[125,[-1]],[9,[26]]],[[112,[[54,[111]]]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[142,-1],142,[[15,[14]]]],0,0,[[],26],[[],26],[[],26],[[],26],[[],26],[[150,[89,[-1]]],[[112,[[54,[111]]]]],19],[[150,[68,[-1]]],[[112,[[54,[111]]]]],19],[[150,[68,[-1]]],[[112,[[54,[111]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[144,30],[[142,-1],142,[[162,[],[[85,[155]]]]]],[-1,144,[51,34,52,53]],[155,27],[-1,144,[5,52,53]],[142,142],[[155,155],[[9,[93]]]],[[142,27],142],[[142,165],142],0,[155,166],[[159,-1,-2],[[112,[[54,[111]]]]],[43,161,53],[162,52]],[[159,-1,-2],[[112,[[54,[111]]]]],[43,161,53],[162,52]],[[159,-1],[[112,[[54,[111]]]]],[43,161,53]],[[159,-1,-2],[[112,[[54,[111]]]]],[43,161,53],[162,52]],[[159,-1],[[112,[[54,[111]]]]],[43,161,53]],[[159,-1],[[112,[[54,[111]]]]],[43,161,53]],[142,142],[150,[[112,[[54,[111]]]]]],[144,5],[[142,-1],142,[[15,[14]]]],[155,[[9,[27]]]],[150,[[112,[[54,[111]]]]]],[142,142],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[150,[[152,[151]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[27,27],[[28,[155,167]]]],[[151,27,[168,[27]],-1,-3],[[152,[2]]],[[162,[],[[85,[27]]]]],[169,18],[[162,[],[[85,[[168,[-2]]]]]]]],[[142,27],142],[155,170],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[171,[-1,-2]]],[[171,[-1,-2]]],[],[]],[[-1,-2],2,[],[]],[[],[[171,[-1,-2]]],[],[]],[26,-1,[]],[26,-1,[]],[26,2],[[[171,[-1,-2]],32],35,[],[]],[-1,-1,[]],[[],26],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],0,0,[[172,-1],2,[]],[[173,-1],[[0,[[111,[],[[121,[2]]]],52]]],[]],[[[171,[-2,-3]],-2,-4,-5],2,[],[[174,[-1]]],173,[[175,[-1,-2]]],[[162,[],[[85,[-3]]]],52]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],[[[171,[-1,-2]],126],[[171,[-1,-2]]],[],[]],0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[176,[-1]]],[[176,[-1]]],19],[177,177],[178,178],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],[[176,[-1]]],19],[[],178],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],[26,2],[[175,-2],[[112,[[54,[111]]]]],[],[[174,[-1]]]],[[[176,[-1]],179],[[112,[[54,[111]]]]],19],[[[176,[-1]],180],[[112,[[54,[111]]]]],19],[[177,180],[[112,[[54,[111]]]]]],[[177,179],[[112,[[54,[111]]]]]],[[178,-2],[[112,[[54,[111]]]]],[],[52,[174,[-1]]]],[[[176,[-1]],32],35,19],[[177,32],35],[[178,32],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[181,177],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[176,[-1]],-2],[[176,[-1]]],19,[[175,[-1,180]],34]],[[[176,[-1]],-2],[[176,[-1]]],19,[[175,[-1,179]],34]],[[[176,[-1]],-2],[[176,[-1]]],19,[[175,[-1,180]],[175,[-1,179]],34]],0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[180,180],[179,179],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],[[180,180],30],[[179,179],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[180,32],35],[[179,32],35],[-1,-1,[]],[26,179],[-1,-1,[]],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[180,-1],2,49],[[179,-1],2,49],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[182,26],2],[[183,184],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[185,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[185,[[9,[5]]]],[135,135],[182,182],[186,186],[183,183],[187,187],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[135,14,[9,[14]]],[[54,[188]]]],[[135,14,[9,[14]]],[[54,[189]]]],[[135,14,[9,[14]]],[[54,[190]]]],[[135,14],[[54,[191]]]],[[],135],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[185,27],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[135,[[28,[14,-1]]],[]],[[185,32],35],[[185,32],35],[[135,32],35],[[182,32],35],[[186,32],35],[[183,32],35],[[187,32],35],[192,185],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[182,26],[186,26],[187,14],[[135,27],[[28,[182,185]]]],[[135,27],[[28,[186,185]]]],[[135,27],[[28,[183,185]]]],[[135,27],[[28,[187,185]]]],[[135,-1],[[28,[135,185]]],162],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[183,184],[183,26],[[186,26],2],[[187,14],2],[185,[[9,[5]]]],[[135,14],[[54,[136]]]],[183,184],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[186,193],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[6,6],[6,6],[36,[[9,[8]]]],[59,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[194,36],[[[195,[-1,-2]]],36,[[15,[14]]],[[15,[16]]]],[36,[[9,[5]]]],[196,196],[197,197],[198,198],[[[199,[-1]]],[[199,[-1]]],18],[194,194],[200,200],[[[195,[-1,-2]]],[[195,[-1,-2]]],18,18],[36,36],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[196,196],93],[[-1,-2],93,[],[]],[[59,[125,[-1]]],[[112,[[54,[111]]]]],19],[[],201],[201,[[28,[[101,[-1,36]],102]]],[52,53,103]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[36,27],[-1,[[28,[196]]],29],[-1,[[28,[36]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[196,196],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[194,[[28,[-1,36]]],[]],[[[195,[-1,-2]]],[[28,[-3,36]]],[[15,[14]]],[[15,[16]]],[]],[[196,32],35],[[197,32],35],[[198,32],35],[[[199,[-1]],32],35,34],[[194,32],35],[[200,32],35],[[[195,[-1,-2]],32],35,34,34],[[36,32],35],[[36,32],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[107,36],[[[2,[14,16]]],36],[39,[[28,[201,40]]]],[39,[[28,[201,40]]]],[[-1,-2],24,[42,43],44],[[59,[125,[-1]],[9,[26]]],[[112,[[54,[111]]]]],19],[[],[[9,[48]]]],[[196,-1],2,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[134,[],[[119,[-1]]]],[68,[-2]]],[[112,[[54,[111]]]]],[5,34,52,53],19],[-1,36,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[197,-1],36,[]],[[198,-1],36,[]],[[[199,[-1]],-2],36,[[15,[14]]],[]],[[194,-1],36,[]],[[200,-1],36,[]],[[[195,[-1,-2]],-3],36,[[15,[14]]],[[15,[16]]],[]],0,0,0,[[196,196],[[9,[93]]]],0,[[196,-1],28,65],[[36,-1],28,65],[36,[[9,[5]]]],[36,16],0,[59,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[201,39],[[28,[2,40]]]],[[201,39],[[28,[2,40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[6,6],[6,6],[38,[[9,[8]]]],[60,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,[[9,[5]]]],[202,202],[38,38],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[202,202],93],[[-1,-2],93,[],[]],[60,[[152,[135]]]],[60,[[152,[135]]]],[[],202],[[],203],[203,[[28,[[101,[-1,38]],102]]],[52,53,103]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[38,27],[-1,[[28,[202]]],29],[-1,[[28,[38]]],29],[26,2],[26,2],[26,2],[[202,202],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[[202,32],35],[[38,32],35],[[38,32],35],[-1,-1,[]],[-1,-1,[]],[107,38],[-1,-1,[]],[14,38],[39,[[28,[203,40]]]],[39,[[28,[203,40]]]],[[-1,-2],24,[42,43],44],[[],[[9,[48]]]],[[202,-1],2,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],0,[60,[[112,[[54,[111]]]]]],[60,[[112,[[54,[111]]]]]],[60,135],[[202,202],[[9,[93]]]],[204,[[54,[136]]]],[[202,-1],28,65],[[38,-1],28,65],[38,[[9,[5]]]],[38,16],[60,[[112,[[54,[111]]]]]],[60,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],0,[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[203,39],[[28,[2,40]]]],[[203,39],[[28,[2,40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[5,"Private",2248],[1,"tuple"],[5,"Private",2248],[10,"Any",2249],[10,"Error",2250],[5,"Command",2251],[6,"Error",0],[5,"Backtrace",2252],[6,"Option",2253],[6,"QueryError",0],[5,"NotFoundSnafu",0],[5,"MissingSnafu",0],[5,"Snafu",0],[5,"String",2254],[10,"Into",2255],[6,"StatusCode",2256],[5,"Leaf",0],[10,"Clone",2257],[10,"NodeType",2258],[5,"Commitment",2259],[10,"Resolvable",0],[10,"Committable",2259],[10,"RngCore",2260],[1,"u64"],[5,"Options",0],[1,"usize"],[1,"str"],[6,"Result",2261],[10,"Deserializer",2262],[1,"bool"],[6,"BlockError",2263],[5,"Formatter",2264],[5,"Error",2264],[10,"Debug",2264],[8,"Result",2264],[6,"Error",1842],[6,"Error",281],[6,"Error",2127],[5,"ArgMatches",2265],[8,"Error",2266],[5,"StoredView",2267],[10,"Hash",2268],[10,"Sized",2269],[10,"BuildHasher",2268],[5,"QuorumData",2270],[5,"SuccessThreshold",2271],[5,"SimpleCertificate",2271],[5,"Id",2272],[10,"Hasher",2268],[5,"IndentedSection",2273],[10,"Display",2264],[10,"Send",2269],[10,"Sync",2269],[5,"Box",2274],[5,"Arc",2275],[5,"Rc",2276],[5,"SystemContextHandle",2277],[10,"AvailabilityDataSource",281],[10,"NodeDataSource",1842],[10,"StatusDataSource",2127],[10,"UpdateDataSource",958],[10,"VersionedDataSource",958],[10,"NodeImplementation",2258],[10,"Serialize",2278],[10,"Serializer",2278],[5,"TypeId",2249],[5,"InconsistentLeafError",281],[5,"LeafQueryData",281],[8,"BlockHash",281],[5,"PayloadQueryData",281],[5,"TransactionQueryData",281],[5,"FetchLeafSnafu",281],[5,"FetchBlockSnafu",281],[5,"FetchTransactionSnafu",281],[5,"InvalidTransactionIndexSnafu",281],[5,"CustomSnafu",281],[17,"TransactionIndex"],[17,"Iter"],[17,"InclusionProof"],[10,"QueryablePayload",281],[10,"PartialEq",2279],[10,"Eq",2279],[10,"Ord",2279],[10,"DeserializeOwned",2262],[17,"Item"],[10,"Iterator",2280],[6,"LeafId",281],[6,"BlockId",281],[5,"BlockQueryData",281],[5,"BlockSummaryQueryData",281],[5,"TransactionSummaryQueryData",281],[5,"RequestSnafu",281],[6,"Ordering",2279],[6,"Fetch",281],[10,"ErrorCompat",2281],[17,"Source"],[5,"NoneError",2281],[10,"IntoError",2281],[8,"Payload",0],[5,"Options",281],[5,"Api",2282],[6,"ApiError",2282],[10,"ReadState",2283],[8,"TransactionIndex",281],[8,"Transaction",0],[8,"LeafHash",281],[6,"RequestError",2284],[17,"LeafRange"],[17,"BlockRange"],[17,"PayloadRange"],[10,"Future",2285],[5,"Pin",2286],[10,"Stream",2287],[10,"Unpin",2269],[10,"RangeBounds",2288],[8,"TransactionHash",281],[8,"VidCommitment",2263],[8,"Header",0],[17,"Error"],[10,"UpdateAvailabilityData",281],[17,"Output"],[10,"FnOnce",2289],[8,"Metadata",0],[8,"QuorumCertificate",2271],[8,"SignatureKey",0],[5,"Duration",2290],[5,"ExtensibleDataSource",958],[5,"MetricsDataSource",958],[5,"Path",2291],[8,"FileSystemDataSource",958],[8,"Result",2292],[10,"AvailabilityProvider",1052],[5,"AtomicStoreLoader",2293],[10,"UpdateNodeData",1842],[5,"PrometheusMetrics",1663],[10,"Metrics",2294],[5,"Event",2295],[5,"FetchingDataSource",1052],[5,"Builder",1052],[10,"AvailabilityStorage",1227],[6,"BlockRequest",1052],[5,"Config",1281],[8,"Builder",1215],[5,"Error",1281],[5,"FileSystemStorage",1240],[5,"StorageReadGuard",1052],[5,"StorageWriteGuard",1052],[5,"RwLockReadGuard",2296],[5,"RwLockWriteGuard",2296],[5,"SqlStorage",1281],[5,"Transaction",1281],[8,"QueryResult",0],[8,"SqlDataSource",1215],[6,"PersistenceError",2297],[5,"Migration",1281],[5,"OffsetDateTime",2298],[5,"Backtrace",2299],[5,"Chain",2292],[10,"Query",1281],[5,"Vec",2300],[10,"ToStatement",2301],[10,"IntoIterator",2302],[1,"never"],[5,"Config",2303],[1,"u16"],[6,"Type",2304],[5,"Error",2305],[1,"array"],[10,"BorrowToSql",2306],[1,"u32"],[5,"Fetcher",1478],[10,"LocalCallback",1478],[10,"Callback",1478],[10,"Request",1598],[10,"Provider",1513],[5,"AnyProvider",1513],[5,"QueryServiceProvider",1513],[5,"NoFetching",1513],[5,"LeafRequest",1598],[5,"PayloadRequest",1598],[5,"Url",2307],[5,"Counter",1663],[5,"Histogram",1663],[1,"f64"],[6,"MetricsError",1663],[5,"Gauge",1663],[5,"Label",1663],[10,"Counter",2294],[10,"Gauge",2294],[10,"Histogram",2294],[10,"Label",2294],[6,"Error",2308],[1,"i64"],[5,"InvalidSignatureKeySnafu",1842],[5,"CustomSnafu",1842],[5,"SyncStatus",1842],[5,"RequestSnafu",1842],[5,"QuerySnafu",1842],[5,"QueryProposalsSnafu",1842],[5,"SyncStatusSnafu",1842],[5,"Options",1842],[5,"MempoolQueryData",2127],[5,"Options",2127],[10,"UpdateStatusData",2127],[15,"Custom",275],[15,"Availability",275],[15,"Node",275],[15,"Status",275],[15,"Error",280],[15,"InvalidTransactionIndex",950],[15,"Custom",950],[15,"FetchLeaf",950],[15,"FetchBlock",950],[15,"FetchTransaction",950],[15,"Request",950],[15,"NoSuchMetric",1838],[15,"NoSuchSubgroup",1838],[15,"Prometheus",1838],[15,"Custom",2120],[15,"QueryProposals",2120],[15,"Request",2120],[15,"Query",2120],[15,"SyncStatus",2120],[15,"Internal",2246],[15,"Request",2246]],"b":[[134,"impl-Debug-for-Leaf%3CTYPES%3E"],[135,"impl-Display-for-Leaf%3CTYPES%3E"],[136,"impl-Debug-for-Error"],[137,"impl-Display-for-Error"],[141,"impl-Display-for-QueryError"],[142,"impl-Debug-for-QueryError"],[144,"impl-From%3CError%3E-for-Error"],[145,"impl-From%3CError%3E-for-Error"],[146,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[148,"impl-From%3CError%3E-for-Error"],[604,"impl-Display-for-LeafId%3CTypes%3E"],[605,"impl-Debug-for-LeafId%3CTypes%3E"],[606,"impl-Display-for-BlockId%3CTypes%3E"],[607,"impl-Debug-for-BlockId%3CTypes%3E"],[609,"impl-Debug-for-InconsistentLeafError%3CTypes%3E"],[610,"impl-Display-for-InconsistentLeafError%3CTypes%3E"],[622,"impl-Display-for-Error"],[623,"impl-Debug-for-Error"],[626,"impl-From%3CCommitment%3CLeaf%3CTypes%3E%3E%3E-for-LeafId%3CTypes%3E"],[627,"impl-From%3Cusize%3E-for-LeafId%3CTypes%3E"],[628,"impl-From%3Cusize%3E-for-BlockId%3CTypes%3E"],[629,"impl-From%3CCommitment%3C%3CTypes+as+NodeType%3E::BlockHeader%3E%3E-for-BlockId%3CTypes%3E"],[647,"impl-From%3CRequestError%3E-for-Error"],[648,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[977,"impl-StatusDataSource-for-ExtensibleDataSource%3CD,+U%3E"],[978,"impl-NodeDataSource%3CTypes%3E-for-ExtensibleDataSource%3CD,+U%3E"],[1018,"impl-UpdateAvailabilityData%3CTypes%3E-for-ExtensibleDataSource%3CD,+U%3E"],[1019,"impl-UpdateNodeData%3CTypes%3E-for-ExtensibleDataSource%3CD,+U%3E"],[1074,"impl-NodeDataSource%3CTypes%3E-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1075,"impl-StatusDataSource-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1124,"impl-Display-for-BlockRequest%3CTypes%3E"],[1125,"impl-Debug-for-BlockRequest%3CTypes%3E"],[1132,"impl-From%3CCommitment%3C%3C%3CTypes+as+NodeType%3E::BlockPayload+as+BlockPayload%3E::Transaction%3E%3E-for-BlockRequest%3CTypes%3E"],[1133,"impl-From%3CBlockId%3CTypes%3E%3E-for-BlockRequest%3CTypes%3E"],[1134,"impl-From%3Cusize%3E-for-BlockRequest%3CTypes%3E"],[1153,"impl-UpdateNodeData%3CTypes%3E-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1154,"impl-UpdateAvailabilityData%3CTypes%3E-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1266,"impl-UpdateAvailabilityData%3CTypes%3E-for-FileSystemStorage%3CTypes%3E"],[1267,"impl-UpdateNodeData%3CTypes%3E-for-FileSystemStorage%3CTypes%3E"],[1302,"impl-AsRef%3Cdyn+Error+%2B+Send+%2B+Sync%3E-for-Error"],[1303,"impl-AsRef%3Cdyn+Error%3E-for-Error"],[1368,"impl-Debug-for-Error"],[1369,"impl-Display-for-Error"],[1370,"impl-Debug-for-Migration"],[1371,"impl-Display-for-Migration"],[1403,"impl-UpdateAvailabilityData%3CTypes%3E-for-SqlStorage"],[1404,"impl-UpdateNodeData%3CTypes%3E-for-SqlStorage"],[1553,"impl-Provider%3CTypes,+LeafRequest%3E-for-AnyProvider%3CTypes%3E"],[1554,"impl-Provider%3CTypes,+PayloadRequest%3E-for-AnyProvider%3CTypes%3E"],[1555,"impl-Provider%3CTypes,+PayloadRequest%3E-for-QueryServiceProvider"],[1556,"impl-Provider%3CTypes,+LeafRequest%3E-for-QueryServiceProvider"],[1746,"impl-Debug-for-MetricsError"],[1747,"impl-Display-for-MetricsError"],[1988,"impl-Display-for-Error"],[1989,"impl-Debug-for-Error"],[1999,"impl-From%3CRequestError%3E-for-Error"],[2000,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[2187,"impl-Display-for-Error"],[2188,"impl-Debug-for-Error"],[2191,"impl-From%3CRequestError%3E-for-Error"],[2193,"impl-From%3CString%3E-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
