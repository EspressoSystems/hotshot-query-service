var searchIndex = new Map(JSON.parse('[\
["hotshot_query_service",{"doc":"The HotShot Query Service is a minimal, generic query â€¦","t":"PPPGPIFIPFPPFPFIGIKIFPINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNQQQQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCOOOOHNNNNNCNNOCNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNONNNNNNNOOOOOOKIGFRFPFGRGPFPFPFPPRFPFRIGFRPPFPFRPKPPFIIIIRFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNMMMMNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNOMNNONNNNNNNNNNNNNNNNNNNNNNONOOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOERFEIFEKKNNNNNNNNNNCNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNCNNNNNMNNCCCNNNNNNNNNMNNHHKGFFPFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHIEFFEIENNNNNQENCNEHKEEECMMMMMMMMCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKFKEENNNNNNNNNNNNNNNNNNNCCMMNNNNNNNFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOPFGPFEKFPPFFPFFNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONMONNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOGPFFPKKNNNNONNNNNNNNNNMNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNMNMNNNNNNNNNONNNNNNNNNNNNNNOOCCHHKIFSRKNNNNMMNNNNNNNNMNNNNNNNNMNNNNNNNNNIIIFIIIFNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONHNNOONNONNNONNNNNNOONN","n":["Availability","Custom","Err","Error","Error","Header","Leaf","Metadata","Missing","MissingSnafu","Node","NotFound","NotFoundSnafu","Ok","Options","Payload","QueryError","QueryResult","Resolvable","SignatureKey","Snafu","Status","Transaction","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args_for_update","availability","availability","backtrace","backtrace","block_header","block_payload","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","catch_all","cause","cause","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commitment","commitment","create_random_transaction","data_source","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fail","fail","fail","fetching","fill_block_payload","fill_block_payload_unchecked","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_stored_view","genesis","get_block_header","get_block_payload","get_hash","get_height","get_justify_qc","get_parent_commitment","get_payload_commitment","get_proposer_id","get_view_number","group_id","hash","header","header","header","in_current_span","in_current_span","include_migrations","init","init","init","init","init","init","init","instantiate_availability_tests","instantiate_data_source_tests","instantiate_node_tests","instantiate_persistence_tests","instantiate_status_tests","internal","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","justify_qc","message","metrics","node","node","parent_commitment","port","proposer_id","run_standalone_service","serialize","serialize","serialize","source","source","status","status","status","status","testing","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","message","source","source","source","status","message","AvailabilityDataSource","BlockHash","BlockId","BlockQueryData","BlockRange","BlockSummaryQueryData","Custom","CustomSnafu","Error","Error","Fetch","FetchBlock","FetchBlockSnafu","FetchLeaf","FetchLeafSnafu","FetchTransaction","FetchTransactionSnafu","Hash","Hash","InclusionProof","InconsistentLeafError","InvalidTransactionIndex","InvalidTransactionIndexSnafu","Iter","LeafHash","LeafId","LeafQueryData","LeafRange","Number","Number","Options","PayloadHash","PayloadQueryData","PayloadRange","Pending","QueryablePayload","Ready","Request","RequestSnafu","Timestamp","TransactionHash","TransactionInclusionProof","TransactionIndex","TransactionIndex","TransactionQueryData","TransactionSummaryQueryData","UpdateAvailabilityData","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","backtrace","block_hash","block_hash","block_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","by_hash","by_hash","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","context","data","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enumerate","enumerate","enumerate","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fail","fail","fail","fetch_timeout","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","genesis","genesis","get_block","get_block_range","get_block_with_transaction","get_hash","get_hash","get_leaf","get_leaf_range","get_payload","get_payload_range","group_id","hash","hash","hash","hash","hash","hash","hash","header","header","header","header","header","header","header","height","height","height","height","height","height","in_current_span","in_current_span","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_block","insert_leaf","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_future","is_empty","is_empty","is_empty","iter","leaf","leaf","len","len","map","message","metadata","new","new","nth","nth","nth_transaction","nth_transaction","nth_transaction_with_proof","nth_transaction_with_proof","num_transactions","num_transactions","partial_cmp","partial_cmp","payload","payload_hash","payload_hash","proof","proof","proposer","proposer","proposer","qc","qc_leaf","resolve","resource","resource","resource","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","size","size","source","source","status","status","subscribe_blocks","subscribe_blocks","subscribe_leaves","subscribe_leaves","subscribe_payloads","subscribe_payloads","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","transaction","transaction","transaction","transaction","transaction_by_hash","transaction_by_hash","transaction_by_hash","transaction_by_hash_with_proof","transaction_by_hash_with_proof","transaction_with_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_context","with_timeout","height","index","message","resource","resource","resource","source","status","AvailabilityProvider","Error","ExtensibleDataSource","FetchingDataSource","FileSystemDataSource","MetricsDataSource","SqlDataSource","UpdateDataSource","VersionedDataSource","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","as_mut","as_ref","availability_tests","block_height","block_height","block_height","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commit","connect","connect","connect","count_proposals","count_transactions","create","create","create","create","create_with_store","default","deref","deref","deref_mut","deref_mut","drop","drop","fetching","fmt","fmt","from","from","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","handle_event","handle_event","handle_event","init","init","inner","inner_mut","insert_block","insert_leaf","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","metrics","metrics","new","node_tests","open","open_with_store","payload_size","persistence_tests","populate_metrics","populate_metrics","reset","reset","reset","revert","revert","skip_version","sql","status_tests","storage","sync_status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","test_range","test_update","AvailabilityProvider","BlockRequest","Builder","FetchingDataSource","Id","StorageReadGuard","StorageWriteGuard","WithTransaction","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_height","block_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone_into","clone_into","cmp","commit","compare","connect","count_proposals","count_transactions","create","create_with_store","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_proactive_fetching","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_block","get_block_range","get_block_with_transaction","get_hash","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","hash","header","init","init","init","init","init","insert_block","insert_leaf","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","metrics","new","open","open_with_store","partial_cmp","payload_size","populate_metrics","revert","skip_version","storage","storage_mut","sync_status","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_major_scan_interval","with_minor_scan_interval","with_proactive_range_chunk_size","with_range_chunk_size","with_retry_delay","test_counters","test_proposer_queries","test_sync_status","test_reset","test_revert","Builder","Config","Error","Migration","Query","SqlDataSource","Transaction","client","connect","connect","create","handle_event","include_migrations","postgres","reset","testing","transaction","TmpDb","test_metrics","AvailabilityStorage","FileSystemStorage","NoStorage","SqlStorage","fs","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","no_storage","sql","FileSystemStorage","as_any","as_any_mut","block_height","borrow","borrow_mut","commit","count_proposals","count_transactions","create","create_with_store","deref","deref_mut","drop","fmt","from","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","init","insert_block","insert_leaf","into","into_any","into_any_arc","into_any_rc","open","open_with_store","payload_size","revert","skip_version","sync_status","try_from","try_into","type_id","vzip","NoStorage","__clone_box","__clone_box","as_any","as_any_mut","block_height","borrow","borrow_mut","clone","clone_into","commit","count_proposals","count_transactions","default","deref","deref_mut","drop","fmt","from","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","init","insert_block","insert_leaf","into","into_any","into_any_arc","into_any_rc","payload_size","revert","sync_status","testing","to_owned","try_from","try_into","type_id","vzip","DataSource","NoStorage","NoStorage","Sql","Sql","Storage","as_any","as_any","as_any_mut","as_any_mut","block_height","block_height","borrow","borrow","borrow_mut","borrow_mut","commit","connect","count_proposals","count_transactions","create","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","handle_event","init","init","insert_block","insert_leaf","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","metrics","payload_size","populate_metrics","reset","revert","setup","sync_status","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","fetch_from_port","Config","Error","Migration","Query","SqlStorage","Transaction","__clone_box","__clone_box","__clone_box","__clone_box","applied_on","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","backtrace","block_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","chain","checksum","client","client","client","clone","clone","clone_into","clone_into","cmp","commit","compare","connect","connect","context","count_proposals","count_transactions","database","default","default_migrations","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast_mut","downcast_ref","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","execute","execute_many","execute_many_with_retries","execute_one","execute_one_with_retries","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get_block","get_block_range","get_block_with_transaction","get_header","get_leaf","get_leaf_range","get_payload","get_payload_range","get_proposals","header","header","host","include_dir","include_migrations","init","init","init","init","init","insert_block","insert_leaf","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","migrations","msg","name","new","no_migrations","partial_cmp","password","payload_size","port","postgres","prefix","query","query_one","query_one_static","query_opt","query_opt_static","query_static","reset_schema","revert","root_cause","schema","sql","sync_status","testing","tls","to_owned","to_owned","to_string","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unapplied","upsert","user","version","vzip","vzip","vzip","vzip","vzip","TmpDb","as_any","as_any_mut","borrow","borrow_mut","config","deref","deref_mut","drop","drop","fmt","from","host","init","init","into","into_any","into_any_arc","into_any_rc","port","try_from","try_into","type_id","vzip","Callback","Fetcher","LocalCallback","Provider","Request","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","provider","request","run","run","spawn_fetch","to_owned","try_from","try_into","type_id","vzip","with_retry_delay","AnyProvider","NoFetching","Provider","QueryServiceProvider","TestProvider","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fail","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","new","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unblock","unfail","vzip","vzip","vzip","vzip","with_block_provider","with_leaf_provider","with_provider","LeafRequest","PayloadRequest","Request","Response","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","get_hash","get_hash","hash","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Counter","Gauge","Histogram","Label","MetricsError","NoSuchMetric","NoSuchSubgroup","Prometheus","PrometheusMetrics","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_point","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_counter","create_gauge","create_histogram","create_label","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","export","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get","get","get_counter","get_gauge","get_histogram","get_label","get_subgroup","header","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mean","sample_count","set","set","source","subgroup","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","vzip","vzip","label","namespace","path","source","Custom","CustomSnafu","Error","InvalidSignatureKey","InvalidSignatureKeySnafu","LeafQueryData","NodeDataSource","Options","Query","QueryProposals","QueryProposalsSnafu","QuerySnafu","Request","RequestSnafu","SyncStatus","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","count_proposals","count_transactions","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","get_proposals","group_id","hash","header","in_current_span","init","init","init","init","init","init","init","init","internal","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","message","missing_blocks","missing_leaves","partial_cmp","payload_size","proposer","serialize","serialize","source","status","status","sync_status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","message","proposer","source","source","source","status","Error","Internal","MempoolQueryData","Options","Request","StatusDataSource","UpdateStatusData","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","cmp","compare","consensus_metrics","consensus_metrics","default","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","extensions","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","group_id","hash","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","memory_footprint","mempool_info","mempool_info","metrics","partial_cmp","populate_metrics","serialize","serialize","source","status","success_rate","success_rate","to_owned","to_owned","to_string","transaction_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","reason","source","consensus","mocks","setup_test","sleep","DataSourceLifeCycle","MockDataSource","MockNetwork","NUM_NODES","Storage","TestableDataSource","as_any","as_any_mut","borrow","borrow_mut","connect","create","data_source","data_source_index","deref","deref_mut","drop","drop","from","handle","handle_event","init","init","into","into_any","into_any_arc","into_any_rc","num_nodes","proposer","reset","setup","shut_down","start","storage","submit_transaction","try_from","try_into","type_id","vzip","MockHeader","MockMembership","MockNetwork","MockNodeImpl","MockPayload","MockQuorumProposal","MockTransaction","MockTypes","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","block_header","block_number","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","get_hash","get_hash","hash","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","iter","justify_qc","len","mock_transaction","partial_cmp","partial_cmp","payload_commitment","proposer_id","serialize","serialize","timeout_certificate","to_owned","to_owned","transaction_with_proof","transactions","try_from","try_from","try_into","try_into","type_id","type_id","upgrade_certificate","view_number","vzip","vzip"],"q":[[0,"hotshot_query_service"],[280,"hotshot_query_service::Error"],[285,"hotshot_query_service::QueryError"],[286,"hotshot_query_service::availability"],[955,"hotshot_query_service::availability::Error"],[963,"hotshot_query_service::data_source"],[1074,"hotshot_query_service::data_source::availability_tests"],[1076,"hotshot_query_service::data_source::fetching"],[1240,"hotshot_query_service::data_source::node_tests"],[1243,"hotshot_query_service::data_source::persistence_tests"],[1245,"hotshot_query_service::data_source::sql"],[1262,"hotshot_query_service::data_source::sql::testing"],[1263,"hotshot_query_service::data_source::status_tests"],[1264,"hotshot_query_service::data_source::storage"],[1279,"hotshot_query_service::data_source::storage::fs"],[1321,"hotshot_query_service::data_source::storage::no_storage"],[1365,"hotshot_query_service::data_source::storage::no_storage::testing"],[1430,"hotshot_query_service::data_source::storage::no_storage::testing::Storage"],[1431,"hotshot_query_service::data_source::storage::sql"],[1630,"hotshot_query_service::data_source::storage::sql::testing"],[1654,"hotshot_query_service::fetching"],[1689,"hotshot_query_service::fetching::provider"],[1804,"hotshot_query_service::fetching::request"],[1869,"hotshot_query_service::metrics"],[2044,"hotshot_query_service::metrics::MetricsError"],[2048,"hotshot_query_service::node"],[2300,"hotshot_query_service::node::Error"],[2306,"hotshot_query_service::status"],[2425,"hotshot_query_service::status::Error"],[2427,"hotshot_query_service::testing"],[2431,"hotshot_query_service::testing::consensus"],[2470,"hotshot_query_service::testing::mocks"],[2563,"dyn_clone::sealed"],[2564,"dyn_clone::sealed"],[2565,"core::error"],[2566,"clap_builder::builder::command"],[2567,"snafu::backtrace_shim"],[2568,"core::option"],[2569,"alloc::string"],[2570,"core::convert"],[2571,"tide_disco::status"],[2572,"core::clone"],[2573,"hotshot_types::traits::node_implementation"],[2574,"commit"],[2575,"commit"],[2576,"core::result"],[2577,"serde::de"],[2578,"hotshot_types::data"],[2579,"core::fmt"],[2580,"core::fmt"],[2581,"clap_builder"],[2582,"hotshot_types::traits::storage"],[2583,"core::hash"],[2584,"core::marker"],[2585,"core::hash"],[2586,"hotshot_types::simple_certificate"],[2587,"hotshot_types::simple_certificate"],[2588,"core::hash"],[2589,"core::fmt"],[2590,"alloc::sync"],[2591,"alloc::rc"],[2592,"hotshot::types::handle"],[2593,"hotshot_types::traits::node_implementation"],[2594,"serde::ser"],[2595,"core::cmp"],[2596,"core::cmp"],[2597,"snafu"],[2598,"tide_disco::api"],[2599,"tide_disco::request"],[2600,"core::future::future"],[2601,"core::pin"],[2602,"futures_core::stream"],[2603,"core::marker"],[2604,"hotshot_types::data"],[2605,"hotshot_types::simple_certificate"],[2606,"std::path"],[2607,"anyhow"],[2608,"atomic_store::atomic_store"],[2609,"hotshot_types::event"],[2610,"core::default"],[2611,"hotshot_types::traits::metrics"],[2612,"async_lock::rwlock"],[2613,"async_lock::rwlock"],[2614,"time::offset_date_time"],[2615,"std::backtrace"],[2616,"anyhow"],[2617,"tokio_postgres::to_statement"],[2618,"core::iter::traits::collect"],[2619,"tokio_postgres::config"],[2620,"refinery_core::runner"],[2621,"refinery_core::error"],[2622,"postgres_types"],[2623,"url"],[2624,"hotshot_types::traits::metrics"],[2625,"async_lock::rwlock"]],"d":["","","Contains the error value","","There was an error while trying to fetch the requested â€¦","","This is the consensus-internal analogous concept to a â€¦","","The requested resource exists but is not currently â€¦","SNAFU context selector for the <code>QueryError::Missing</code> variant","","The requested resource does not exist or is not known to â€¦","SNAFU context selector for the <code>QueryError::NotFound</code> variant","Contains the success value","","","","","A reference to a <code>T</code> which can be resolved into a whole <code>T</code>.","","SNAFU context selector for the <code>QueryError::Error</code> variant","","Item within a <code>Payload</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Queries for HotShot chain state.","","","","Block header.","Optional block payload.","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","Get a commitment to the underlying object.","","","Persistent storage and sources of data consumed by APIs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Fetching missing data from remote providers.","Fill this leaf with the block payload.","Fill this leaf with the block payload, without checking â€¦","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create a leaf from information stored about a view.","Create a new leaf from its components.","The block header contained in this leaf.","Optional block payload.","","Height of this leaf in the chain.","The QC linking this leaf to its parent in the chain.","Commitment to this leafâ€™s parent.","A commitment to the block payload contained in this leaf.","Identity of the network participant who proposed this leaf.","Time when this leaf was created.","","","","","","","","Embed migrations from the given directory into the current â€¦","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Per spec, justification","","","A nodeâ€™s view of a HotShot chain","","The hash of the parent <code>Leaf</code> So we can ask if it extends","","the proposer id of the leaf","Run an instance of the HotShot Query service with no â€¦","","","","","","Queries for node-specific state and uncommitted data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the underlying object if it is available without â€¦","","","","","","","","","","","CurView from leader when proposing leaf","","","","","","","","","","","","","","An interface for querying a HotShot blockchain.","A block hash is the hash of the block header.","","","","","","SNAFU context selector for the <code>Error::Custom</code> variant","","","An in-progress request to fetch some data.","","SNAFU context selector for the <code>Error::FetchBlock</code> variant","","SNAFU context selector for the <code>Error::FetchLeaf</code> variant","","SNAFU context selector for the <code>Error::FetchTransaction</code> â€¦","","","A proof that a certain transaction exists in the block.","","","SNAFU context selector for the â€¦","Enumerate the transactions in this block.","","","","","","","","","","","","A block payload whose contents (e.g. individual â€¦","","","SNAFU context selector for the <code>Error::Request</code> variant","","","","","An index which can be used to efficiently retrieve a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Get the index of the transaction with a given hash, if it â€¦","Get the index of the transaction with a given hash, if it â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>Fetch</code> to a <code>Result</code> with the provided error â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumerate the transactions in the block with their indices.","Enumerate the transactions in the block with their indices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Timeout for failing requests due to missing data.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Returns the block containing a transaction with the given â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this block is empty of transactions.","Whether this block is empty of transactions.","","List the transaction indices in the block.","","","The number of transactions in the block.","","Transform the result of this fetch.","","","Collect information about a <code>Leaf</code>.","","Get the index of the <code>nth</code> transaction.","Get the index of the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction, along with an inclusion proof.","Get the <code>nth</code> transaction, along with an inclusion proof.","","","","","","","","Get an inclusion proof for a transaction with a given â€¦","Get an inclusion proof for a transaction with a given â€¦","","","","","","Wait for the data to become available, if it is not â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a transaction by its block-specific index.","Get a transaction by its block-specific index.","","","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get a transaction by its block-specific index, along with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the requested data if it is available immediately.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>Fetch</code> to a <code>Result</code> with the provided error â€¦","Wait for the requested data to become available, but only â€¦","","","","","","","","","","","Wrapper to add extensibility to an existing data source.","","A data source for the APIs provided in this crate, backed â€¦","A minimal data source for the status API provided in this â€¦","","An extension trait for types which implement the update â€¦","A data source with an atomic transaction-based â€¦","","","","","","","","","","","Generic tests we can instantiate for all the availability â€¦","","","","","","","","","","","","Atomically commit to all outstanding modifications to the â€¦","","","","","","","","Create a new FileSystemDataSource with storage at <code>path</code>.","","","Create a new FileSystemDataSource using a persistent â€¦","","","","","","","","Asynchronous retrieval of missing data.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Access the underlying data source.","Mutably access the underlying data source.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Generic tests we can instantiate for all the node data â€¦","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent â€¦","","Generic tests we can instantiate for any data source with â€¦","","","","","","Erase all oustanding modifications to the data.","","Advance the version of the persistent store without â€¦","","Generic tests we can instantiate for all the status data â€¦","Persistent storage for data sources.","","","","","","","","","","Update query state based on a new consensus event.","","","","","A provider which can be used as a fetcher by the â€¦","A request to fetch a block.","Builder for <code>FetchingDataSource</code> with configuration.","The most basic kind of data source.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a <code>FetchingDataSource</code> with these options.","Build a <code>FetchingDataSource</code> with the given <code>storage</code> and â€¦","","","","","","","","Connect to a remote database.","","","Create a new FileSystemDataSource with storage at <code>path</code>.","Create a new FileSystemDataSource using a persistent â€¦","","","","","","","","","","","","","","Run without proactive fetching.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Construct a new builder with the given storage and fetcher â€¦","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent â€¦","","","","","Advance the version of the persistent store without â€¦","Obtain direct, read-only access to the underlying local â€¦","Obtain direct, mutable access the underlying local storage.","","","","","Access the transaction which is accumulating all â€¦","","","","","","","","","","","","","","","","","","","","","Set the interval (denominated in minor scans) between â€¦","Set the time interval between minor proactive fetching â€¦","Set the number of items to process at a time when scanning â€¦","Set the number of items to process at a time when loading â€¦","Set the maximum delay between retries of fetches.","","","","","","","","The <code>Error</code> type, a wrapper around a dynamic error type.","Represents a schema migration to be run on the database, â€¦","","A data source for the APIs provided in this crate, backed â€¦","","","Connect to a remote database.","","","","Embed migrations from the given directory into the current â€¦","","","","Access the transaction which is accumulating all â€¦","","","Persistent storage for a HotShot blockchain.","","","","","","","","","","","","","","","Storage for the APIs provided in this crate, backed by a â€¦","","","","","","","","","Create a new FileSystemStorage with storage at <code>path</code>.","Create a new FileSystemStorage using a persistent storage â€¦","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","Open an existing FileSystemStorage from storage at <code>path</code>.","Open an existing FileSystemStorage using a persistent â€¦","","","Advance the version of the persistent store without â€¦","","","","","","Mock storage implementation which doesnâ€™t actually store â€¦","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Either Postgres or no storage.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the block containing a transaction with the given â€¦","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Postgres client config.","The <code>Error</code> type, a wrapper around a dynamic error type.","Represents a schema migration to be run on the database, â€¦","","Storage for the APIs provided in this crate, backed by a â€¦","An atomic SQL transaction.","","","","","Get the timestamp from when the Migration was applied. <code>None</code>â€¦","","","","","","","","","","","","","Get the backtrace for this Error.","","","","","","","","","","","","Connect to the database, setting options on the underlying â€¦","An iterator of the chain of source errors contained by â€¦","Get the Migration checksum. Checksum is formed from the â€¦","","","","","","","","","","","Connect to the database with this config.","Connect to a remote database.","Wrap the error value with additional context.","","","Set the name of the database to connect to.","","The migrations requied to build the default schema for â€¦","","","","","","","","","","","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","","","","","","","","","","","","Execute a statement against the underlying database.","Execute a statement that is expected to modify at least â€¦","Execute a statement that is expected to modify at least â€¦","Execute a statement that is expected to modify exactly one â€¦","Execute a statement that is expected to modify exactly one â€¦","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Set the hostname of the database server.","Embed the contents of a directory in your crate.","Embed migrations from the given directory into the current â€¦","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","Add custom migrations to run when connecting to the â€¦","Create a new error object from a printable error message.","Get the Migration Name","Create a new error object from any error type.","Skip all migrations when connecting to the database.","","Set a password for connecting to the database.","","Set the port on which to connect to the database.","","Get the Prefix","","Query the underlying SQL database, returning exactly one â€¦","Query the underlying SQL database with no parameters, â€¦","Query the underlying SQL database, returning zero or one â€¦","Query the underlying SQL database with no parameters, â€¦","Query the underlying SQL database with no parameters.","Reset the schema on connection.","","The lowest level cause of this error â€” this errorâ€™s â€¦","Set the name of the schema to use for queries.","","","","Use TLS for an encrypted connection to the database.","","","","","Access the transaction which is accumulating all â€¦","","","","","","","","","","","","","","","","Create an unapplied migration, name and version are parsed â€¦","","Set the DB user to connect as.","Get the Migration version","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","A callback to process the result of a request.","Management of concurrent requests to fetch resources.","A callback to process the result of a request.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Asynchronous fetching from external data availability â€¦","Requests for fetching resources.","","","Fetch a resource, if it is not already being fetched.","","","","","","","Adaptor combining multiple data availability providers.","Trivial <code>Provider</code> where fetching always fails.","A provider which is able to satisfy requests for data of â€¦","Data availability provider backed by another instance of â€¦","Adaptor to add test-only functionality to an existing â€¦","","","","","","","","","","","","","","","","","Delay fetch requests until <code>unblock</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cause subsequent requests to fail.","Fetch a resource.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow blocked fetch requests to proceed.","Stop requests from failing as a result of a previous call â€¦","","","","","Add a sub-provider which fetches blocks.","Add a sub-provider which fetches leaves.","Add a sub-provider which fetches both blocks and leaves.","A request for a leaf with a given height.","A request for a payload with a given commitment.","A request for a resource.","The type of resource that will be returned as a successful â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A Counter metric.","A Gauge metric.","A Histogram metric.","A Label metric.","","","","","A Prometheus-based implementation of a Metrics registry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a counter in this sub-group by name.","Get a gauge in this sub-group by name.","Get a histogram in this sub-group by name.","Get a label in this sub-group by name.","Get a (possibly nested) subgroup of this group by its path.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::Custom</code> variant","","","SNAFU context selector for the <code>Error::InvalidSignatureKey</code> â€¦","","","","","","SNAFU context selector for the <code>Error::QueryProposals</code> â€¦","SNAFU context selector for the <code>Error::Query</code> variant","","SNAFU context selector for the <code>Error::Request</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Backing storage for the data source.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","Setup runs after setting up the network but before â€¦","","","","","","","","","","","","","","","","","","","","","","","","","The block header to append","Block number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Per spec, justification","","","","","VID commitment to the payload.","the propser id","","","Possible timeout certificate.  Only present if the â€¦","","","","List of transactions.","","","","","","","Possible upgrade certificate, which the leader may â€¦","CurView from leader when proposing leaf","",""],"i":[7,7,154,0,10,0,0,0,10,0,7,10,0,154,0,0,0,0,0,0,0,7,0,17,17,7,7,11,11,12,12,13,13,10,10,17,7,11,12,13,10,25,17,7,11,12,13,10,25,7,10,25,25,0,25,7,10,17,17,17,7,11,12,13,10,25,17,7,11,12,13,10,25,11,12,13,7,7,10,17,7,11,12,13,10,17,7,11,12,13,10,17,21,17,17,0,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,7,10,17,7,10,17,7,11,12,13,10,25,17,17,17,17,17,11,12,13,0,17,17,17,17,7,7,11,12,13,10,10,17,7,7,7,7,7,11,12,13,10,25,25,25,17,17,17,17,17,17,17,17,17,17,17,25,17,17,7,10,7,10,0,17,7,11,12,13,10,25,0,0,0,0,0,7,17,7,11,12,13,10,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,17,7,11,12,13,10,25,11,12,13,17,13,0,0,25,17,25,17,0,17,7,10,7,10,0,7,10,25,0,17,7,11,12,13,10,17,7,10,17,7,11,12,13,10,25,17,7,11,12,13,10,25,21,17,17,7,11,12,13,10,25,25,25,17,17,7,11,12,13,10,25,218,219,220,221,218,222,0,0,0,0,58,0,37,0,0,120,0,37,0,37,0,37,0,87,88,80,0,37,0,80,0,0,0,58,87,88,0,88,0,58,94,0,94,37,0,0,0,0,0,80,0,0,0,87,87,88,88,68,68,67,67,89,89,70,70,71,71,90,90,91,91,92,92,72,72,73,73,74,74,75,75,76,76,37,37,100,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,67,37,100,100,67,37,68,70,71,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,72,73,74,75,76,80,80,67,37,87,88,68,67,89,70,71,90,91,92,72,73,74,75,76,37,87,88,68,67,89,70,71,90,91,92,72,73,74,75,76,37,87,88,87,88,94,70,100,0,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,67,37,68,89,70,71,90,91,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,80,80,89,87,88,68,89,70,71,90,91,87,87,87,87,88,88,88,88,68,68,68,68,89,89,89,89,70,70,70,70,71,71,71,71,90,90,90,90,91,91,91,91,100,72,73,74,75,76,100,87,87,88,88,68,67,67,89,70,71,90,91,92,72,73,74,75,76,37,37,94,87,87,87,88,88,88,68,67,89,70,70,71,90,90,91,100,92,72,73,74,75,76,37,37,37,100,100,68,89,58,58,58,87,88,58,58,58,58,100,87,88,68,89,70,71,90,87,88,68,67,89,90,37,68,89,70,71,90,75,67,37,75,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,120,120,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,92,72,73,74,75,76,94,80,80,89,80,68,67,80,89,94,76,89,68,89,80,80,80,80,80,80,89,90,87,88,89,68,89,80,80,68,89,90,68,67,94,72,73,74,68,89,70,71,90,91,37,89,70,90,67,37,37,76,58,58,58,58,58,58,87,88,68,67,89,70,71,90,91,92,72,73,74,75,76,37,87,88,67,37,80,80,89,71,80,80,89,80,80,80,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,100,100,94,87,88,68,67,89,70,71,90,91,100,92,72,73,74,75,76,37,94,94,223,223,224,225,226,227,228,224,0,62,0,0,0,0,0,0,0,127,127,128,128,127,128,127,128,127,127,0,127,127,128,127,128,127,128,127,128,127,128,62,127,130,127,128,127,127,130,130,127,128,130,128,127,128,127,128,127,128,0,127,128,127,128,127,127,127,127,127,127,127,127,130,127,128,127,128,127,127,127,127,127,128,127,128,127,128,127,128,127,128,127,0,130,130,127,0,127,128,130,127,128,62,127,130,0,0,0,127,127,128,127,128,127,128,127,128,61,127,128,0,0,0,0,0,0,143,0,0,143,140,140,143,143,141,140,148,149,143,141,140,148,149,143,140,140,141,140,148,149,143,141,140,148,149,143,141,140,140,143,140,143,143,140,143,140,140,140,140,140,141,140,148,148,149,149,143,141,140,148,149,149,143,141,141,140,148,149,143,143,143,143,143,143,140,143,143,141,140,148,148,149,149,143,143,143,143,140,140,140,143,140,140,140,140,140,143,143,141,140,148,149,143,140,140,141,140,148,149,143,141,140,148,149,143,141,140,148,149,143,141,140,148,149,143,140,141,140,140,143,140,140,140,140,140,140,140,140,143,143,140,141,140,148,149,143,141,140,148,149,143,141,140,148,149,143,141,140,148,149,143,141,141,141,141,141,0,0,0,0,0,0,0,0,0,0,0,0,155,155,155,155,155,0,0,155,0,155,0,0,0,0,0,0,0,142,142,142,142,142,142,142,142,0,0,0,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,157,157,157,157,157,0,229,158,229,158,0,229,158,229,158,158,158,229,158,229,158,158,158,158,158,158,229,158,229,158,229,158,229,158,158,158,158,158,158,158,158,158,158,229,158,158,158,229,158,229,158,229,158,229,158,158,158,158,158,158,158,158,229,158,229,158,229,158,229,158,230,0,0,0,0,0,0,160,160,144,144,160,146,160,153,144,152,146,160,153,144,152,146,146,146,152,146,160,153,144,152,146,160,153,144,152,144,146,160,164,153,152,160,144,160,144,160,152,160,144,152,146,152,152,144,144,0,146,146,160,153,144,152,146,146,160,153,144,152,146,146,146,146,146,160,153,144,152,152,160,160,160,160,160,153,153,153,153,153,146,146,160,160,144,152,146,146,146,160,153,144,144,152,144,152,152,152,152,152,152,152,152,152,146,160,144,0,0,146,160,153,144,152,152,152,146,160,153,144,152,146,160,153,144,152,146,160,153,144,152,146,160,153,144,152,146,144,146,160,146,144,160,144,152,144,0,160,164,164,164,164,164,164,144,152,146,144,160,152,0,144,160,144,146,160,152,146,160,153,144,152,146,160,153,144,152,146,160,153,144,152,160,153,144,160,146,160,153,144,152,0,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,0,0,0,0,0,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,0,0,178,179,177,177,177,177,177,177,177,0,0,0,0,0,183,183,184,184,182,182,185,185,183,184,182,185,183,184,182,185,182,183,184,182,185,183,184,182,185,183,184,182,185,183,184,182,185,183,185,183,184,182,185,183,184,182,185,183,184,182,185,182,181,183,183,184,184,182,185,183,184,182,185,183,184,182,185,183,184,182,185,183,184,182,185,183,184,182,185,183,184,182,185,183,184,182,185,184,182,183,184,182,185,183,184,182,185,183,184,182,185,183,184,182,185,182,182,183,184,182,185,183,183,183,0,0,0,180,186,186,187,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,186,186,186,187,187,187,187,186,187,186,187,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,186,187,0,0,0,0,0,192,192,192,0,138,138,189,189,193,193,190,190,194,194,189,190,192,138,189,193,190,194,192,138,189,193,190,194,192,192,192,138,189,193,190,194,192,138,189,193,190,194,192,138,189,193,190,194,138,189,193,190,194,138,138,138,138,138,192,138,189,193,190,194,192,138,189,193,190,194,192,192,138,189,193,190,194,138,192,192,138,189,193,190,194,192,192,138,189,193,190,194,189,193,194,138,138,138,138,138,192,192,192,138,189,193,190,194,192,138,189,193,190,194,192,138,189,193,190,194,192,138,189,193,190,194,192,138,189,193,190,194,190,190,193,194,192,138,190,138,189,193,190,194,192,192,138,189,193,190,194,192,138,189,193,190,194,192,138,189,193,190,194,193,192,138,189,193,190,194,231,231,232,233,36,0,0,36,0,0,0,0,36,36,0,0,36,0,0,203,203,204,204,205,205,206,206,201,201,202,202,36,36,207,203,207,204,205,206,201,202,36,203,207,204,205,206,201,202,36,36,207,207,36,59,203,207,204,205,206,201,202,36,203,207,204,205,206,201,202,36,201,202,36,203,204,205,206,201,202,36,203,204,205,206,201,202,36,203,203,59,59,207,0,203,207,204,205,206,201,202,36,203,207,204,205,206,201,202,36,36,203,36,203,207,204,205,206,201,202,36,203,203,203,203,203,207,201,202,203,204,205,206,201,202,36,36,203,207,204,205,206,201,202,36,36,36,36,207,207,203,59,207,203,36,36,203,207,204,205,206,201,202,36,36,203,207,204,205,206,201,202,36,203,207,204,205,206,201,202,36,203,207,204,205,206,201,202,36,203,207,204,205,206,201,202,36,204,205,206,201,202,202,203,203,203,59,206,203,36,36,36,202,59,203,204,205,206,201,202,36,36,203,207,204,205,206,201,202,36,203,207,204,205,206,201,202,36,203,207,204,205,206,201,202,36,207,207,203,207,204,205,206,201,202,36,234,235,236,237,235,234,0,38,0,0,38,0,0,208,208,38,38,209,208,209,38,208,209,38,38,209,209,38,60,208,209,38,208,209,38,38,208,38,208,38,208,208,60,60,208,209,0,208,209,38,208,209,38,38,208,38,208,209,38,208,208,208,208,208,209,208,38,38,208,209,38,38,38,209,209,208,209,208,38,38,208,209,38,208,209,38,208,209,38,208,209,38,208,209,38,208,60,60,60,208,210,208,38,38,38,60,60,208,38,38,208,208,209,38,208,209,38,208,209,38,209,209,208,209,38,238,239,0,0,0,0,0,0,0,0,212,0,159,159,159,159,212,212,159,159,159,159,159,159,159,159,212,159,159,159,159,159,159,159,159,212,212,159,159,159,159,159,159,159,159,0,0,0,0,0,0,0,0,134,134,213,213,134,213,134,213,240,241,134,213,134,213,134,213,134,213,134,213,134,213,134,213,134,213,134,213,134,213,134,213,134,213,134,134,134,134,213,213,213,213,134,213,134,213,134,213,134,213,134,213,134,213,134,213,134,213,134,213,216,240,216,0,134,213,241,240,134,213,240,134,213,216,216,134,213,134,213,134,213,240,240,134,213],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],0,0,[7,[[9,[8]]]],[10,[[9,[8]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,10],[12,10],[[[13,[-1]]],10,[[15,[14]]]],[[16,14],7],[7,[[9,[5]]]],[10,[[9,[5]]]],[[[17,[-1]]],[[17,[-1]]],[18,19]],[7,7],[11,11],[12,12],[[[13,[-1]]],[[13,[-1]]],18],[10,10],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[17,[-1]]],[[20,[[17,[-1]]]]],19],[21,[[20,[-1]]],22],[-1,[[20,[-2]]],[],[]],[[[17,[-1]],23,24],[],19],0,[[],25],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[7,27],[10,27],[-1,[[28,[[17,[-2]]]]],29,19],[-1,[[28,[7]]],29],[-1,[[28,[10]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[[17,[-1]],[17,[-1]]],30,19],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[11,[[28,[-1,10]]],[]],[12,[[28,[-1,10]]],[]],[[[13,[-1]]],[[28,[-2,10]]],[[15,[14]]],[]],0,[[[17,[-1]],26],[[28,[2,31]]],19],[[[17,[-1]]],2,19],[[[17,[-1]],32],[[28,[2,33]]],19],[[[17,[-1]],32],[[28,[2,33]]],[34,19]],[[7,32],35],[[7,32],35],[[11,32],35],[[12,32],35],[[[13,[-1]],32],35,34],[[10,32],35],[[10,32],35],[-1,-1,[]],[36,7],[[[2,[14,16]]],7],[37,7],[38,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[39,[[28,[25,40]]]],[39,[[28,[25,40]]]],[[[41,[-1]]],[[17,[-1]]],19],[[],[[17,[-1]]],19],[[[17,[-1]]],[],19],[[[17,[-1]]],9,19],[[-1,-2],24,[42,43],44],[[[17,[-1]]],24,19],[[[17,[-1]]],[[47,[-1,[45,[-1]],46]]],19],[[[17,[-1]]],[[20,[[17,[-1]]]]],19],[[[17,[-1]]],[],19],[[[17,[-1]]],[],19],[[[17,[-1]]],[],19],[[],[[9,[48]]]],[[[17,[-1]],-2],2,19,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[-1,[],[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,[-1,7,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[11,-1],10,[]],[[12,-1],10,[]],[[[13,[-1]],-2],10,[[15,[14]]],[]],0,0,0,0,0,0,0,0,[[25,-2,[57,[-1,-3]]],[[28,[2,7]]],19,[[58,[-1]],[59,[-1]],60,[61,[-1]],62,52,53],[[63,[-1]]]],[[[17,[-1]],-2],28,[19,64],65],[[7,-1],28,65],[[10,-1],28,65],[7,[[9,[5]]]],[10,[[9,[5]]]],0,[7,16],[10,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[21,[[28,[-1,21]]],22],[-1,[[28,[-2,-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[25,39],[[28,[2,40]]]],[[25,39],[[28,[2,40]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],[[[67,[-1]]],[[9,[8]]],19],[37,[[9,[8]]]],[[[68,[-1]]],[[69,[-1]]],19],[[[70,[-1]]],[[69,[-1]]],19],[[[71,[-1]]],[[69,[-1]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[72,[-1]]],37,[[15,[14]]]],[[[73,[-1]]],37,[[15,[14]]]],[[[74,[-1]]],37,[[15,[14]]]],[[[75,[-1,-2]]],37,[[15,[24]]],[[15,[24]]]],[[[76,[-1,-2]]],37,[[15,[14]]],[[15,[16]]]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[-1]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[-1]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[67,[-1]]],[[9,[5]]],19],[37,[[9,[5]]]],[[[87,[-1]]],[[87,[-1]]],19],[[[88,[-1]]],[[88,[-1]]],19],[[[68,[-1]]],[[68,[-1]]],[18,19]],[[[67,[-1]]],[[67,[-1]]],[18,19]],[[[89,[-1]]],[[89,[-1]]],[18,19]],[[[70,[-1]]],[[70,[-1]]],[18,19]],[[[71,[-1]]],[[71,[-1]]],[18,19]],[[[90,[-1]]],[[90,[-1]]],[18,19]],[[[91,[-1]]],[[91,[-1]]],[18,19]],[92,92],[[[72,[-1]]],[[72,[-1]]],18],[[[73,[-1]]],[[73,[-1]]],18],[[[74,[-1]]],[[74,[-1]]],18],[[[75,[-1,-2]]],[[75,[-1,-2]]],18,18],[[[76,[-1,-2]]],[[76,[-1,-2]]],18,18],[37,37],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[87,[-1]],[87,[-1]]],93,19],[[[88,[-1]],[88,[-1]]],93,19],[[-1,-2],93,[],[]],[[-1,-2],93,[],[]],[[[94,[-1]],-3],[[28,[-1,-2]]],[],[5,95],[[98,[-2],[[96,[97]]]]]],[[[70,[-1]]],[[99,[-1]]],19],[[],100],[100,[[28,[[101,[-1,37]],102]]],[52,53,103]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[67,[-1]]],27,19],[37,27],[-1,[[28,[[68,[-2]]]]],29,19],[-1,[[28,[[89,[-2]]]]],29,19],[-1,[[28,[[70,[-2]]]]],29,19],[-1,[[28,[[71,[-2]]]]],29,19],[-1,[[28,[[90,[-2]]]]],29,19],[-1,[[28,[[91,[-2]]]]],29,19],[-1,[[28,[37]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],[[54,[86]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],[[54,[86]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[89,[-1]]],[[0,[[86,[],[[85,[[2,[[104,[-1]],[105,[-1]]]]]]]]]]],19],[[[87,[-1]],[87,[-1]]],30,19],[[[88,[-1]],[88,[-1]]],30,19],[[[68,[-1]],[68,[-1]]],30,[81,19]],[[[89,[-1]],[89,[-1]]],30,[81,19]],[[[70,[-1]],[70,[-1]]],30,[81,19]],[[[71,[-1]],[71,[-1]]],30,[81,19]],[[[90,[-1]],[90,[-1]]],30,[81,19]],[[[91,[-1]],[91,[-1]]],30,[81,19]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[[[72,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[73,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[74,[-1]]],[[28,[-2,37]]],[[15,[14]]],[]],[[[75,[-1,-2]]],[[28,[-3,37]]],[[15,[24]]],[[15,[24]]],[]],[[[76,[-1,-2]]],[[28,[-3,37]]],[[15,[14]]],[[15,[16]]],[]],0,[[[87,[-1]],32],35,19],[[[87,[-1]],32],35,19],[[[88,[-1]],32],35,19],[[[88,[-1]],32],35,19],[[[68,[-1]],32],35,[34,19]],[[[67,[-1]],32],35,[34,19]],[[[67,[-1]],32],35,19],[[[89,[-1]],32],35,[34,19]],[[[70,[-1]],32],35,[34,19]],[[[71,[-1]],32],35,[34,19]],[[[90,[-1]],32],35,[34,19]],[[[91,[-1]],32],35,[34,19]],[[92,32],35],[[[72,[-1]],32],35,34],[[[73,[-1]],32],35,34],[[[74,[-1]],32],35,34],[[[75,[-1,-2]],32],35,34,34],[[[76,[-1,-2]],32],35,34,34],[[37,32],35],[[37,32],35],[-1,-1,[]],[26,[[87,[-1]]],19],[-1,-1,[]],[[[106,[-1]]],[[87,[-1]]],19],[26,[[88,[-1]]],19],[[[69,[-1]]],[[88,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[89,[-1]]],[[70,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[[[89,[-1]]],[[90,[-1]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[107,37],[-1,-1,[]],[[[2,[14,16]]],37],[39,[[28,[100,40]]]],[39,[[28,[100,40]]]],[[],[[68,[-1]]],19],[[],[[89,[-1]]],19],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[15,[[88,[-2]]]],52,53]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[115,[26]],52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],[116,[-2]]],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[15,[[87,[-2]]]],52,53]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[115,[26]],52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[15,[[88,[-2]]]],52,53]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],-5],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52],[[115,[26]],52]],[[],[[9,[48]]]],[[[87,[-1]],-2],2,19,49],[[[88,[-1]],-2],2,19,49],[[[68,[-1]]],[[106,[-1]]],19],[[[89,[-1]]],[[69,[-1]]],19],[[[70,[-1]]],117,19],[[[71,[-1]]],[[116,[-1]]],19],[[[90,[-1]]],[[69,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[68,[-1]]],[[118,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[89,[-1]]],[[118,[-1]]],19],[[[90,[-1]]],[[118,[-1]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[[68,[-1]]],24,19],[[[89,[-1]]],24,19],[[[70,[-1]]],24,19],[[[71,[-1]]],24,19],[[[90,[-1]]],24,19],0,[-1,[],[]],[-1,[],[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[120,[],[[119,[-1]]]],[89,[-2]]],[[112,[[54,[111]]]]],[5,34,52,53],19],[[[120,[],[[119,[-1]]]],[68,[-2]]],[[112,[[54,[111]]]]],[5,34,52,53],19],[-1,37,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[92,-1],37,[]],[[[72,[-1]],-2],37,[[15,[14]]],[]],[[[73,[-1]],-2],37,[[15,[14]]],[]],[[[74,[-1]],-2],37,[[15,[14]]],[]],[[[75,[-1,-2]],-3],37,[[15,[24]]],[[15,[24]]],[]],[[[76,[-1,-2]],-3],37,[[15,[14]]],[[15,[16]]],[]],[[[94,[-1]]],-2,52,[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],30,[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],30,[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[89,[-1]]],30,19],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],-2,[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[68,[-1]]],[[17,[-1]]],19],0,[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4],26,[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[89,[-1]]],26,19],[[[94,[-1]],-3],[[94,[-2]]],[],[],[52,[122,[-1],[[121,[-2]]]]]],0,[[[89,[-1]]],[[123,[-1]]],19],[[[17,[-1]],[124,[-1]]],[[28,[[68,[-1]],[67,[-1]]]]],19],[[[118,[-1]],[99,[-1]]],[[89,[-1]]],19],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[-1]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[-1]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[[2,[-5,-3]]]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,26],[[9,[[2,[-5,-3]]]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[89,[-1]]],24,19],[[[90,[-1]]],24,19],[[[87,[-1]],[87,[-1]]],[[9,[93]]],19],[[[88,[-1]],[88,[-1]]],[[9,[93]]],19],[[[89,[-1]]],[[99,[-1]]],19],[[[68,[-1]]],117,19],[[[89,[-1]]],117,19],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,-1],[[9,[-3]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,-1],[[9,[-3]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[]],[[[68,[-1]]],[[125,[-1]]],19],[[[89,[-1]]],[[125,[-1]]],19],[[[90,[-1]]],[[125,[-1]]],19],[[[68,[-1]]],[[124,[-1]]],19],0,[[[94,[-1]]],-1,52],0,0,0,[[[68,[-1]],-2],28,19,65],[[[89,[-1]],-2],28,19,65],[[[70,[-1]],-2],28,19,65],[[[71,[-1]],-2],28,19,65],[[[90,[-1]],-2],28,19,65],[[[91,[-1]],-2],28,19,65],[[37,-1],28,65],[[[89,[-1]]],24,19],[[[70,[-1]]],24,19],[[[90,[-1]]],24,19],[[[67,[-1]]],[[9,[5]]],19],[37,[[9,[5]]]],[37,16],0,[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[[[58,[],[[108,[-1]],[109,[-3]],[110,[-4]]]],26],[[112,[[54,[111]]]]],[[113,[],[[85,[[94,[[68,[-2]]]]]]]],114,52],19,[[113,[],[[85,[[94,[[89,[-2]]]]]]]],114,52],[[113,[],[[85,[[94,[[70,[-2]]]]]]]],114,52]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,-1],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,-1],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[89,[-1]],[104,[-1]]],[[9,[[71,[-1]]]]],19],[[[71,[-1]]],[[105,[-1]]],19],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[-5]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[89,[-1]],[20,[[105,[-1]]]]],[[9,[[104,[-1]]]]],19],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[[2,[-5,-3]]]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,[20,[-5]]],[[9,[[2,[-5,-3]]]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[[[80,[],[[77,[-1]],[78,[-2]],[79,[-3]]]],-4,-1],[[9,[[2,[-5,-3]]]]],[18,34,81,82,83,64,84,52,53],[[86,[],[[85,[-1]]]]],[18,34,81,82,64,84],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[[[94,[-1]]],[[28,[-1,[94,[-1]]]]],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[100,39],[[28,[2,40]]]],[[100,39],[[28,[2,40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[94,[-1]],-4],[[28,[-1,-2]]],[],[5,95],[[98,[-2],[[96,[97]]]]],[[122,[],[[121,[-3]]]]]],[[[94,[-1]],126],[[9,[-1]]],52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[127,[-1,-2]]],-2,[],[]],[[[127,[-1,-2]]],-2,[],[]],0,[[[127,[-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[[127,[-1,-2]]],[[112,[[54,[111]]]]],[60,52,53],[52,53]],[128,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[127,[-1,-2]]],[[127,[-1,-2]]],18,18],[128,128],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[62,[],[[119,[-1]]]]],[[112,[[54,[111]]]]],[5,34,52,53]],[[[127,[-1,-2]]],[[112,[[54,[111]]]]],[62,52],52],[-1,[[112,[[54,[111]]]]],[]],[-1,[[112,[[54,[111]]]]],[]],[-1,[[112,[[54,[111]]]]],[]],[[[127,[-2,-3]],[125,[-1]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[[127,[-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[26,[[112,[[54,[111]]]]]],[[129,-2],[[131,[[130,[-1,-2]]]]],19,[[132,[-1]]]],[26,[[112,[[54,[111]]]]]],[26,[[112,[[54,[111]]]]]],[[133,-2],[[131,[[130,[-1,-2]]]]],19,[[132,[-1]]]],[[],128],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],0,[[[127,[-1,-2]],32],35,34,34],[[128,32],35],[-1,-1,[]],[-1,-1,[]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[88,[-1]]]],52,53]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[115,[26]],52]],[[[127,[-2,-3]],[116,[-1]]],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[87,[-1]]]],52,53]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[115,[26]],52]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[15,[[88,[-1]]]],52,53]],[[[127,[-2,-3]],-4],[[112,[[54,[111]]]]],19,[[58,[-1]],52,53],[52,53],[[115,[26]],52]],[[[127,[-2,-3]],[125,[-1]],[9,[26]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[[130,[134,-1]],[135,[134]]],[[112,[[54,[111]]]]],[[132,[134]],136]],[[[127,[-1,-2]],[135,[134]]],[[112,[[54,[111]]]]],137,[136,52,53]],[[128,[135,[134]]],[[112,[[54,[111]]]]]],[[],26],[[],26],[[[127,[-1,-2]]],-1,[],[]],[[[127,[-1,-2]]],-1,[],[]],[[[127,[-2,-3]],[89,[-1]]],[[112,[[54,[111]]]]],19,[[120,[-1]],52,53],[52,53]],[[[127,[-2,-3]],[68,[-1]]],[[112,[[54,[111]]]]],19,[[120,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[127,[-1,-2]]],138,[60,52,53],[52,53]],[128,138],[[-1,-2],[[127,[-1,-2]]],[],[]],0,[[129,-2],[[131,[[130,[-1,-2]]]]],19,[[132,[-1]]]],[[133,-2],[[131,[[130,[-1,-2]]]]],19,[[132,[-1]]]],[[[127,[-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],0,[-1,[[54,[139]]],[]],[-1,[[54,[139]]],[]],[-1,[[112,[[54,[111]]]]],[]],[-1,[[112,[[54,[111]]]]],[]],[-1,[[112,[[54,[111]]]]],[]],[[[62,[],[[119,[-1]]]]],[[112,[[54,[111]]]]],[5,34,52,53]],[[[127,[-1,-2]]],[[112,[[54,[111]]]]],[62,52],52],[[[130,[-1,-2]]],[[131,[2]]],19,[[132,[-1]]]],0,0,0,[[[127,[-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[[61,[135,[-1]]],[[112,[[54,[111]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[140,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[[140,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[141,[-1,-2,-3]]],[[131,[[140,[-1,-2,-3]]]]],19,[[59,[-1]],[142,[-1]]],[[132,[-1]]]],[[-2,-3],[[141,[-1,-2,-3]]],19,[[59,[-1]],[142,[-1]]],[[132,[-1]]]],[[[140,[-1,-2,-3]]],[[140,[-1,-2,-3]]],19,[],[]],[[[143,[-1]]],[[143,[-1]]],19],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[143,[-1]],[143,[-1]]],93,19],[[[140,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[62,52,53],[52,53]],[[-1,-2],93,[],[]],[[144,-2],[[28,[[145,[-1,-2]],146]]],19,[[132,[-1]]]],[[[140,[-1,-2,-3]],[125,[-1]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[[140,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[129,-2],[[131,[[140,[-1,[147,[-1]],-2]]]]],19,[[132,[-1]]]],[[133,-2],[[131,[[140,[-1,[147,[-1]],-2]]]]],19,[[132,[-1]]]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[148,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[[[149,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[[[149,[-1,-2]]],-3,19,[],[]],[26,-1,[]],[[[141,[-1,-2,-3]]],[[141,[-1,-2,-3]]],[],[],[]],[26,2],[26,2],[26,2],[26,2],[26,2],[[[143,[-1]],[143,[-1]]],30,19],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[[140,[-1,-2,-3]],32],35,19,34,34],[[[143,[-1]],32],35,19],[[[143,[-1]],32],35,19],[-1,-1,[]],[-1,-1,[]],[[[150,[[0,[-1,-2]]]]],[[148,[-1,-2]]],19,[]],[-1,-1,[]],[-1,-1,[]],[[[151,[[0,[-1,-2]]]]],[[149,[-1,-2]]],19,[]],[[[88,[-1]]],[[143,[-1]]],19],[26,[[143,[-1]]],19],[[[116,[-1]]],[[143,[-1]]],19],[-1,-1,[]],[[[140,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[142,[-1]]],[[132,[-1]]],[[15,[[88,[-1]]]],52,53]],[[[140,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[142,[-1]]],[[132,[-1]]],[[115,[26]],52]],[[[140,[-1,-2,-3]],[116,[-1]]],[[112,[[54,[111]]]]],19,[[142,[-1]]],[[132,[-1]]]],[[-1,-2],24,[42,43],44],[[[140,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[142,[-1]]],[[132,[-1]]],[[15,[[87,[-1]]]],52,53]],[[[140,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[142,[-1]]],[[132,[-1]]],[[115,[26]],52]],[[[140,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[142,[-1]]],[[132,[-1]]],[[15,[[88,[-1]]]],52,53]],[[[140,[-1,-2,-3]],-4],[[112,[[54,[111]]]]],19,[[142,[-1]]],[[132,[-1]]],[[115,[26]],52]],[[[140,[-1,-2,-3]],[125,[-1]],[9,[26]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[[[143,[-1]],-2],2,19,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[[140,[-1,-2,-3]],[89,[-1]]],[[112,[[54,[111]]]]],19,[[120,[-1]],52,53],[52,53]],[[[140,[-1,-2,-3]],[68,[-1]]],[[112,[[54,[111]]]]],19,[[120,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[140,[-1,-2,-3]]],138,19,[[59,[-1]],52,53],[52,53]],[[-1,-2],[[141,[-3,-1,-2]]],[],[],[]],[[129,-2],[[131,[[140,[-1,[147,[-1]],-2]]]]],19,[[132,[-1]]]],[[133,-2],[[131,[[140,[-1,[147,[-1]],-2]]]]],19,[[132,[-1]]]],[[[143,[-1]],[143,[-1]]],[[9,[93]]],19],[[[140,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,[[54,[139]]],[]],[[[140,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[62,52,53],[52,53]],[[[140,[-1,[147,[-1]],-2]]],[[131,[2]]],19,[[132,[-1]]]],[[[140,[-1,-2,-3]]],[[148,[-1,-2]]],19,[],[]],[[[140,[-1,-2,-3]]],[[149,[-1,-2]]],19,[],[]],[[[140,[-1,-2,-3]]],[[112,[[54,[111]]]]],19,[[59,[-1]],52,53],[52,53]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[[[140,[-1,152,-2]]],[[154,[153]]],19,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[141,[-1,-2,-3]],26],[[141,[-1,-2,-3]]],[],[],[]],[[[141,[-1,-2,-3]],126],[[141,[-1,-2,-3]]],[],[],[]],[[[141,[-1,-2,-3]],26],[[141,[-1,-2,-3]]],[],[],[]],[[[141,[-1,-2,-3]],26],[[141,[-1,-2,-3]]],[],[],[]],[[[141,[-1,-2,-3]],126],[[141,[-1,-2,-3]]],[],[],[]],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,[[[155,[-1,-2]]],[[112,[[54,[111]]]]],19,[52,53]],[[144,-2],[[28,[[145,[-1,-2]],146]]],19,[[132,[-1]]]],[-1,[[112,[[54,[111]]]]],[]],[26,[[112,[[54,[111]]]]]],[[[155,[134,-1]],[135,[134]]],[[112,[[54,[111]]]]],[[132,[134]],136]],0,0,[-1,[[112,[[54,[111]]]]],[]],0,[[[155,[-1,-2]]],[[154,[153]]],19,[]],0,[[],2],0,0,0,0,0,[[142,[88,[-1]]],[[112,[[54,[111]]]]],19],[[142,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[142,[116,[-1]]],[[112,[[54,[111]]]]],19],[[142,[88,[-1]]],[[112,[[54,[111]]]]],19],[[142,[87,[-1]]],[[112,[[54,[111]]]]],19],[[142,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[142,[88,[-1]]],[[112,[[54,[111]]]]],19],[[142,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],0,0,0,[-1,4,[]],[-1,4,[]],[[[147,[-1]]],[[112,[[54,[111]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[[[147,[-1]]],[[112,[[54,[111]]]]],19],[[[147,[-1]],[125,[-1]]],[[112,[[54,[111]]]]],19],[[[147,[-1]]],[[112,[[54,[111]]]]],19],[129,[[28,[[147,[-1]],156]]],19],[133,[[28,[[147,[-1]],156]]],19],[26,-1,[]],[26,-1,[]],[26,2],[[[147,[-1]],32],35,19],[-1,-1,[]],[[[147,[-1]],[88,[-1]]],[[112,[[54,[111]]]]],19],[[[147,[-1]],-2],[[112,[[54,[111]]]]],19,[[115,[26]],52]],[[[147,[-1]],[116,[-1]]],[[112,[[54,[111]]]]],19],[[[147,[-1]],[88,[-1]]],[[112,[[54,[111]]]]],19],[[[147,[-1]],[87,[-1]]],[[112,[[54,[111]]]]],19],[[[147,[-1]],-2],[[112,[[54,[111]]]]],19,[[115,[26]],52]],[[[147,[-1]],[88,[-1]]],[[112,[[54,[111]]]]],19],[[[147,[-1]],-2],[[112,[[54,[111]]]]],19,[[115,[26]],52]],[[[147,[-1]],[125,[-1]],[9,[26]]],[[112,[[54,[111]]]]],19],[[],26],[[[147,[-1]],[89,[-1]]],[[112,[[54,[111]]]]],19],[[[147,[-1]],[68,[-1]]],[[112,[[54,[111]]]]],19],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[129,[[28,[[147,[-1]],156]]],19],[133,[[28,[[147,[-1]],156]]],19],[[[147,[-1]]],[[112,[[54,[111]]]]],19],[[[147,[-1]]],[[112,[[54,[111]]]]],19],[[[147,[-1]]],[[28,[2,156]]],19],[[[147,[-1]]],[[112,[[54,[111]]]]],19],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[157,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[157,157],[[-1,-2],2,[],[]],[157,[[112,[[54,[111]]]]]],[[157,[125,[-1]]],[[112,[[54,[111]]]]],19],[157,[[112,[[54,[111]]]]]],[[],157],[26,-1,[]],[26,-1,[]],[26,2],[[157,32],35],[-1,-1,[]],[[157,[88,[-1]]],[[112,[[54,[111]]]]],19],[[157,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[157,[116,[-1]]],[[112,[[54,[111]]]]],19],[[157,[88,[-1]]],[[112,[[54,[111]]]]],19],[[157,[87,[-1]]],[[112,[[54,[111]]]]],19],[[157,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[157,[88,[-1]]],[[112,[[54,[111]]]]],19],[[157,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[157,[125,[-1]],[9,[26]]],[[112,[[54,[111]]]]],19],[[],26],[[157,[89,[-1]]],[[112,[[54,[111]]]]],19],[[157,[68,[-1]]],[[112,[[54,[111]]]]],19],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[157,[[112,[[54,[111]]]]]],[157,[[112,[[54,[111]]]]]],[157,[[112,[[54,[111]]]]]],0,[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[158,[[112,[[54,[111]]]]]],[158,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[158,[[112,[[54,[111]]]]]],[-1,[[112,[[54,[111]]]]],[]],[[158,[125,[134]]],[[112,[[54,[111]]]]]],[158,[[112,[[54,[111]]]]]],[26,[[112,[[54,[111]]]]]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],[-1,-1,[]],[-1,-1,[]],[[158,-1],[[112,[[54,[111]]]]],[[15,[[88,[134]]]],52,53]],[[158,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[158,[116,[134]]],[[112,[[54,[111]]]]]],[[158,-1],[[112,[[54,[111]]]]],[[15,[[87,[134]]]],52,53]],[[158,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[158,-1],[[112,[[54,[111]]]]],[[15,[[88,[134]]]],52,53]],[[158,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[158,[125,[134]],[9,[26]]],[[112,[[54,[111]]]]]],[[158,[135,[134]]],[[112,[[54,[111]]]]]],[[],26],[[],26],[[158,[89,[134]]],[[112,[[54,[111]]]]]],[[158,[68,[134]]],[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[158,138],[158,[[112,[[54,[111]]]]]],[-1,[[54,[139]]],[]],[-1,[[112,[[54,[111]]]]],[]],[158,[[112,[[54,[111]]]]]],[[[159,[158]]],[[112,[[54,[111]]]]]],[158,[[112,[[54,[111]]]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[160,[[9,[161]]]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[146,5],[146,5],[146,162],[152,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[144,-2],[[28,[[145,[-1,-2]],146]]],19,[[132,[-1]]]],[146,163],[160,24],[164,[[112,[[54,[111]]]]]],[153,[[112,[[54,[111]]]]]],[152,[[112,[[54,[111]]]]]],[160,160],[144,144],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[160,160],93],[152,[[112,[[54,[111]]]]]],[[-1,-2],93,[],[]],[[144,-2],[[28,[[155,[-1,-2]],146]]],19,[[132,[-1]]]],[144,[[28,[152,146]]]],[[146,-1],146,[51,52,53]],[[152,[125,[-1]]],[[112,[[54,[111]]]]],19],[152,[[112,[[54,[111]]]]]],[[144,27],144],[[],144],[[],[[165,[160]]]],[26,-1,[]],[146],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[146],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[146,[[28,[-1,146]]],[51,34,52,53]],[146,[[9,[-1]]],[51,34,52,53]],[146,[[9,[-1]]],[51,34,52,53]],[26,2],[146,2],[26,2],[26,2],[26,2],[152,2],[26,2],[[160,160],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[153,-1,-2],[[154,[24]]],[43,166],167],[[153,-1,-2],[[154,[24]]],[43,166,51],167],[[153,-1,-2],[[154,[24]]],[43,166,51],[167,18]],[[153,-1,-2],[[154,[2]]],[43,166,51],167],[[153,-1,-2],[[154,[2]]],[43,166,51],[167,18]],[[146,32],[[28,[2,33]]]],[[146,32],[[28,[2,33]]]],[[160,32],[[28,[2,33]]]],[[160,32],[[28,[2,33]]]],[[144,32],35],[[152,32],35],[-1,-1,[]],[-1,146,[5,52,53]],[168,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[169,144],[-1,-1,[]],[27,[[28,[144,-1]]],[]],[[152,[88,[-1]]],[[112,[[54,[111]]]]],19],[[152,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[152,[116,[-1]]],[[112,[[54,[111]]]]],19],[[152,[88,[-1]]],[[112,[[54,[111]]]]],19],[[152,[87,[-1]]],[[112,[[54,[111]]]]],19],[[152,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[152,[88,[-1]]],[[112,[[54,[111]]]]],19],[[152,-1],[[112,[[54,[111]]]]],[[115,[26]],52]],[[152,[125,[-1]],[9,[26]]],[[112,[[54,[111]]]]],19],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[[144,-1],144,[[15,[14]]]],0,0,[[],26],[[],26],[[],26],[[],26],[[],26],[[152,[89,[-1]]],[[112,[[54,[111]]]]],19],[[152,[68,[-1]]],[[112,[[54,[111]]]]],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[146,30],[[144,-1],144,[[167,[],[[85,[160]]]]]],[-1,146,[51,34,52,53]],[160,27],[-1,146,[5,52,53]],[144,144],[[160,160],[[9,[93]]]],[[144,27],144],[152,[[112,[[54,[111]]]]]],[[144,170],144],0,[160,171],[[164,-1,-2],[[112,[[54,[111]]]]],[43,166,53],[167,52]],[[164,-1,-2],[[112,[[54,[111]]]]],[43,166,53],[167,52]],[[164,-1],[[112,[[54,[111]]]]],[43,166,53]],[[164,-1,-2],[[112,[[54,[111]]]]],[43,166,53],[167,52]],[[164,-1],[[112,[[54,[111]]]]],[43,166,53]],[[164,-1],[[112,[[54,[111]]]]],[43,166,53]],[144,144],[152,[[112,[[54,[111]]]]]],[146,5],[[144,-1],144,[[15,[14]]]],[160,[[9,[27]]]],[152,[[112,[[54,[111]]]]]],0,[144,144],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[152,[[154,[153]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[27,27],[[28,[160,172]]]],[[153,27,[173,[27]],-1,-3],[[154,[2]]],[[167,[],[[85,[27]]]]],[174,18],[[167,[],[[85,[[173,[-2]]]]]]]],[[144,27],144],[160,175],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[176,144],[26,-1,[]],[26,-1,[]],[26,2],[176,2],[[176,32],35],[-1,-1,[]],[176,14],[[],176],[[],26],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[176,170],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[177,[-1,-2]]],[[177,[-1,-2]]],[],[]],[[-1,-2],2,[],[]],[[],[[177,[-1,-2]]],[],[]],[26,-1,[]],[26,-1,[]],[26,2],[[[177,[-1,-2]],32],35,[],[]],[-1,-1,[]],[[],26],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],0,0,[[178,-1],2,[]],[[179,-1],[[0,[[111,[],[[121,[2]]]],52]]],[]],[[[177,[-2,-3]],-2,-4,-5],2,[],[[180,[-1]]],179,[[181,[-1,-2]]],[[167,[],[[85,[-3]]]],52]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],[[[177,[-1,-2]],126],[[177,[-1,-2]]],[],[]],0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[182,[-1]]],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[183,[-1]]],[[183,[-1]]],19],[184,184],[[[182,[-1]]],[[182,[-1]]],[]],[185,185],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],[[183,[-1]]],19],[[],185],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],[26,2],[26,2],[[[182,[-1]]],2,[]],[[181,-2],[[112,[[54,[111]]]]],[],[[180,[-1]]]],[[[183,[-1]],186],[[112,[[54,[111]]]]],19],[[[183,[-1]],187],[[112,[[54,[111]]]]],19],[[184,186],[[112,[[54,[111]]]]]],[[184,187],[[112,[[54,[111]]]]]],[[[182,[-3]],-2],[[112,[[54,[111]]]]],19,[[180,[-1]]],[[181,[-1,-2]],53]],[[185,-2],[[112,[[54,[111]]]]],[],[52,[180,[-1]]]],[[[183,[-1]],32],35,19],[[184,32],35],[[[182,[-1]],32],35,34],[[185,32],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],26],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[188,184],[-1,[[182,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[[182,[-1]]],2,[]],[[[182,[-1]]],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[183,[-1]],-2],[[183,[-1]]],19,[[181,[-1,186]],34]],[[[183,[-1]],-2],[[183,[-1]]],19,[[181,[-1,187]],34]],[[[183,[-1]],-2],[[183,[-1]]],19,[[181,[-1,186]],[181,[-1,187]],34]],0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[186,186],[187,187],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,2],[26,2],[[186,186],30],[[187,187],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[186,32],35],[[187,32],35],[-1,-1,[]],[26,187],[-1,-1,[]],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[186,-1],2,49],[[187,-1],2,49],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[189,26],2],[[190,191],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[192,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[192,[[9,[5]]]],[138,138],[189,189],[193,193],[190,190],[194,194],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[138,14,[9,[14]]],[[54,[195]]]],[[138,14,[9,[14]]],[[54,[196]]]],[[138,14,[9,[14]]],[[54,[197]]]],[[138,14],[[54,[198]]]],[[],138],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[192,27],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[138,[[28,[14,-1]]],[]],[[192,32],35],[[192,32],35],[[138,32],35],[[189,32],35],[[193,32],35],[[190,32],35],[[194,32],35],[199,192],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[189,26],[193,26],[194,14],[[138,27],[[28,[189,192]]]],[[138,27],[[28,[193,192]]]],[[138,27],[[28,[190,192]]]],[[138,27],[[28,[194,192]]]],[[138,-1],[[28,[138,192]]],167],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[190,191],[190,26],[[193,26],2],[[194,14],2],[192,[[9,[5]]]],[[138,14],[[54,[139]]]],[190,191],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[193,200],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[6,6],[6,6],[36,[[9,[8]]]],[59,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[201,36],[[[202,[-1,-2]]],36,[[15,[14]]],[[15,[16]]]],[36,[[9,[5]]]],[203,203],[204,204],[205,205],[[[206,[-1]]],[[206,[-1]]],18],[201,201],[[[202,[-1,-2]]],[[202,[-1,-2]]],18,18],[36,36],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[203,203],93],[[-1,-2],93,[],[]],[[59,[125,[-1]]],[[112,[[54,[111]]]]],19],[59,[[112,[[54,[111]]]]]],[[],207],[207,[[28,[[101,[-1,36]],102]]],[52,53,103]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[36,27],[-1,[[28,[203]]],29],[-1,[[28,[36]]],29],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[26,2],[[203,203],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[201,[[28,[-1,36]]],[]],[[[202,[-1,-2]]],[[28,[-3,36]]],[[15,[14]]],[[15,[16]]],[]],[[203,32],35],[[204,32],35],[[205,32],35],[[[206,[-1]],32],35,34],[[201,32],35],[[[202,[-1,-2]],32],35,34,34],[[36,32],35],[[36,32],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[14,16]]],36],[10,36],[107,36],[39,[[28,[207,40]]]],[39,[[28,[207,40]]]],[[-1,-2],24,[42,43],44],[[59,[125,[-1]],[9,[26]]],[[112,[[54,[111]]]]],19],[[],[[9,[48]]]],[[203,-1],2,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[-1,36,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[204,-1],36,[]],[[205,-1],36,[]],[[[206,[-1]],-2],36,[[15,[14]]],[]],[[201,-1],36,[]],[[[202,[-1,-2]],-3],36,[[15,[14]]],[[15,[16]]],[]],0,0,0,[[203,203],[[9,[93]]]],[59,[[112,[[54,[111]]]]]],0,[[203,-1],28,65],[[36,-1],28,65],[36,[[9,[5]]]],[36,16],0,[59,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[207,39],[[28,[2,40]]]],[[207,39],[[28,[2,40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[6,6],[6,6],[38,[[9,[8]]]],[60,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,[[9,[5]]]],[208,208],[38,38],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[208,208],93],[[-1,-2],93,[],[]],[60,[[154,[138]]]],[60,[[154,[138]]]],[[],208],[[],209],[209,[[28,[[101,[-1,38]],102]]],[52,53,103]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[38,27],[-1,[[28,[208]]],29],[-1,[[28,[38]]],29],[26,2],[26,2],[26,2],[[208,208],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,[[208,32],35],[[38,32],35],[[38,32],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[14,38],[107,38],[39,[[28,[209,40]]]],[39,[[28,[209,40]]]],[[-1,-2],24,[42,43],44],[[],[[9,[48]]]],[[208,-1],2,49],[[-1,-2],[[50,[-2,-3]]],[],[51,52,53],[]],[-1,[],[]],[[],26],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],0,[60,[[112,[[54,[111]]]]]],[60,[[112,[[54,[111]]]]]],[60,138],[[208,208],[[9,[93]]]],[210,[[54,[139]]]],[[208,-1],28,65],[[38,-1],28,65],[38,[[9,[5]]]],[38,16],[60,[[112,[[54,[111]]]]]],[60,[[112,[[54,[111]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],0,[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[[209,39],[[28,[2,40]]]],[[209,39],[[28,[2,40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],2],[126,2],0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[112,[[54,[111]]]]],[]],[26,[[112,[[54,[111]]]]]],[[[159,[-1]]],[[55,[[211,[-1]]]]],212],[[[159,[-1]],26],[[55,[[211,[-1]]]]],212],[26,-1,[]],[26,-1,[]],[26,2],[[[159,[-1]]],2,212],[-1,-1,[]],[[[159,[-1]]],[[57,[134,213]]],212],[[[212,[],[[214,[-1]]]],[135,[134]]],[[112,[[54,[111]]]]],[52,53]],[[],[[159,[-1]]],[212,210]],[[],26],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[159,[-1]]],26,212],[[[159,[-1]],26],[[125,[134]]],212],[-1,[[112,[[54,[111]]]]],[]],[[[159,[[212,[],[[214,[-1]]]]]]],[[112,[[54,[111]]]]],[52,53]],[[[159,[-1]]],2,212],[[[159,[-1]]],2,212],[[[159,[-1]]],[],212],[[[159,[-1]],215],2,212],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[134,134],[213,213],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[134,134],93],[[213,213],93],[[-1,-2],93,[],[]],[[-1,-2],93,[],[]],[[],134],[[],213],[26,-1,[]],[26,-1,[]],[26,-1,[]],[26,-1,[]],[-1,[[28,[134]]],29],[-1,[[28,[213]]],29],[26,2],[26,2],[[134,134],30],[[213,213],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[134,32],35],[[213,32],35],[-1,-1,[]],[-1,-1,[]],[[-1,-2],24,[42,43],44],[[-1,-2],24,[42,43],44],[[134,-1],2,49],[[213,-1],2,49],[[],26],[[],26],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[54,[-1]]],[[54,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[55,[-1]]],[[55,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[[56,[-1]]],[[56,[4]]],[]],[[216,-1],-2,[],[]],0,[[216,-1],26,[]],[[[165,[217]]],215],[[134,134],[[9,[93]]]],[[213,213],[[9,[93]]]],0,0,[[134,-1],28,65],[[213,-1],28,65],0,[-1,-2,[],[]],[-1,-2,[],[]],[[216,-1,-2],[[9,[[2,[-3,-4]]]]],[],[],[],[]],0,[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,66,[]],[-1,66,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Private",2563],[1,"tuple"],[5,"Private",2563],[10,"Any",2564],[10,"Error",2565],[5,"Command",2566],[6,"Error",0],[5,"Backtrace",2567],[6,"Option",2568],[6,"QueryError",0],[5,"NotFoundSnafu",0],[5,"MissingSnafu",0],[5,"Snafu",0],[5,"String",2569],[10,"Into",2570],[6,"StatusCode",2571],[5,"Leaf",0],[10,"Clone",2572],[10,"NodeType",2573],[5,"Commitment",2574],[10,"Resolvable",0],[10,"Committable",2574],[10,"RngCore",2575],[1,"u64"],[5,"Options",0],[1,"usize"],[1,"str"],[6,"Result",2576],[10,"Deserializer",2577],[1,"bool"],[6,"BlockError",2578],[5,"Formatter",2579],[5,"Error",2579],[10,"Debug",2579],[8,"Result",2579],[6,"Error",2048],[6,"Error",286],[6,"Error",2306],[5,"ArgMatches",2580],[8,"Error",2581],[5,"StoredView",2582],[10,"Hash",2583],[10,"Sized",2584],[10,"BuildHasher",2583],[5,"QuorumData",2585],[5,"SuccessThreshold",2586],[5,"SimpleCertificate",2586],[5,"Id",2587],[10,"Hasher",2583],[5,"IndentedSection",2588],[10,"Display",2579],[10,"Send",2584],[10,"Sync",2584],[5,"Box",2589],[5,"Arc",2590],[5,"Rc",2591],[5,"SystemContextHandle",2592],[10,"AvailabilityDataSource",286],[10,"NodeDataSource",2048],[10,"StatusDataSource",2306],[10,"UpdateDataSource",963],[10,"VersionedDataSource",963],[10,"NodeImplementation",2573],[10,"Serialize",2593],[10,"Serializer",2593],[5,"TypeId",2564],[5,"InconsistentLeafError",286],[5,"LeafQueryData",286],[8,"BlockHash",286],[5,"PayloadQueryData",286],[5,"TransactionQueryData",286],[5,"FetchLeafSnafu",286],[5,"FetchBlockSnafu",286],[5,"FetchTransactionSnafu",286],[5,"InvalidTransactionIndexSnafu",286],[5,"CustomSnafu",286],[17,"TransactionIndex"],[17,"Iter"],[17,"InclusionProof"],[10,"QueryablePayload",286],[10,"PartialEq",2594],[10,"Eq",2594],[10,"Ord",2594],[10,"DeserializeOwned",2577],[17,"Item"],[10,"Iterator",2595],[6,"LeafId",286],[6,"BlockId",286],[5,"BlockQueryData",286],[5,"BlockSummaryQueryData",286],[5,"TransactionSummaryQueryData",286],[5,"RequestSnafu",286],[6,"Ordering",2594],[6,"Fetch",286],[10,"ErrorCompat",2596],[17,"Source"],[5,"NoneError",2596],[10,"IntoError",2596],[8,"Payload",0],[5,"Options",286],[5,"Api",2597],[6,"ApiError",2597],[10,"ReadState",2598],[8,"TransactionIndex",286],[8,"Transaction",0],[8,"LeafHash",286],[6,"RequestError",2599],[17,"LeafRange"],[17,"BlockRange"],[17,"PayloadRange"],[10,"Future",2600],[5,"Pin",2601],[10,"Stream",2602],[10,"Unpin",2584],[10,"RangeBounds",2603],[8,"TransactionHash",286],[8,"VidCommitment",2578],[8,"Header",0],[17,"Error"],[10,"UpdateAvailabilityData",286],[17,"Output"],[10,"FnOnce",2604],[8,"Metadata",0],[8,"QuorumCertificate",2586],[8,"SignatureKey",0],[5,"Duration",2605],[5,"ExtensibleDataSource",963],[5,"MetricsDataSource",963],[5,"Path",2606],[8,"FileSystemDataSource",963],[8,"Result",2607],[10,"AvailabilityProvider",1076],[5,"AtomicStoreLoader",2608],[5,"MockTypes",2470],[5,"Event",2609],[10,"Default",2610],[10,"TestableDataSource",2431],[5,"PrometheusMetrics",1869],[10,"Metrics",2611],[5,"FetchingDataSource",1076],[5,"Builder",1076],[10,"AvailabilityStorage",1264],[6,"BlockRequest",1076],[5,"Config",1431],[8,"Builder",1245],[5,"Error",1431],[5,"FileSystemStorage",1279],[5,"StorageReadGuard",1076],[5,"StorageWriteGuard",1076],[5,"RwLockReadGuard",2612],[5,"RwLockWriteGuard",2612],[5,"SqlStorage",1431],[5,"Transaction",1431],[8,"QueryResult",0],[8,"SqlDataSource",1245],[6,"PersistenceError",2613],[5,"NoStorage",1321],[6,"DataSource",1365],[5,"MockNetwork",2431],[5,"Migration",1431],[5,"OffsetDateTime",2614],[5,"Backtrace",2615],[5,"Chain",2607],[10,"Query",1431],[5,"Vec",2616],[10,"ToStatement",2617],[10,"IntoIterator",2618],[1,"never"],[5,"Config",2619],[1,"u16"],[6,"Type",2620],[5,"Error",2621],[1,"array"],[10,"BorrowToSql",2622],[1,"u32"],[5,"TmpDb",1630],[5,"Fetcher",1654],[10,"LocalCallback",1654],[10,"Callback",1654],[10,"Request",1804],[10,"Provider",1689],[5,"TestProvider",1689],[5,"AnyProvider",1689],[5,"QueryServiceProvider",1689],[5,"NoFetching",1689],[5,"PayloadRequest",1804],[5,"LeafRequest",1804],[5,"Url",2623],[5,"Counter",1869],[5,"Histogram",1869],[1,"f64"],[6,"MetricsError",1869],[5,"Gauge",1869],[5,"Label",1869],[10,"Counter",2611],[10,"Gauge",2611],[10,"Histogram",2611],[10,"Label",2611],[6,"Error",2624],[1,"i64"],[5,"InvalidSignatureKeySnafu",2048],[5,"CustomSnafu",2048],[5,"SyncStatus",2048],[5,"RequestSnafu",2048],[5,"QuerySnafu",2048],[5,"QueryProposalsSnafu",2048],[5,"Options",2048],[5,"MempoolQueryData",2306],[5,"Options",2306],[10,"UpdateStatusData",2306],[5,"RwLock",2612],[10,"DataSourceLifeCycle",2431],[5,"MockNodeImpl",2470],[17,"Storage"],[8,"MockTransaction",2470],[8,"MockPayload",2470],[1,"u8"],[15,"Custom",280],[15,"Availability",280],[15,"Node",280],[15,"Status",280],[15,"Error",285],[15,"InvalidTransactionIndex",955],[15,"Custom",955],[15,"FetchLeaf",955],[15,"FetchBlock",955],[15,"FetchTransaction",955],[15,"Request",955],[6,"Storage",1365],[15,"NoStorage",1430],[15,"NoSuchMetric",2044],[15,"NoSuchSubgroup",2044],[15,"Prometheus",2044],[15,"Custom",2300],[15,"QueryProposals",2300],[15,"Request",2300],[15,"Query",2300],[15,"Internal",2425],[15,"Request",2425],[8,"MockQuorumProposal",2470],[8,"MockHeader",2470]],"b":[[134,"impl-Display-for-Leaf%3CTYPES%3E"],[135,"impl-Debug-for-Leaf%3CTYPES%3E"],[136,"impl-Debug-for-Error"],[137,"impl-Display-for-Error"],[141,"impl-Debug-for-QueryError"],[142,"impl-Display-for-QueryError"],[144,"impl-From%3CError%3E-for-Error"],[145,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[146,"impl-From%3CError%3E-for-Error"],[147,"impl-From%3CError%3E-for-Error"],[609,"impl-Display-for-LeafId%3CTypes%3E"],[610,"impl-Debug-for-LeafId%3CTypes%3E"],[611,"impl-Debug-for-BlockId%3CTypes%3E"],[612,"impl-Display-for-BlockId%3CTypes%3E"],[614,"impl-Debug-for-InconsistentLeafError%3CTypes%3E"],[615,"impl-Display-for-InconsistentLeafError%3CTypes%3E"],[627,"impl-Debug-for-Error"],[628,"impl-Display-for-Error"],[630,"impl-From%3Cusize%3E-for-LeafId%3CTypes%3E"],[632,"impl-From%3CCommitment%3CLeaf%3CTypes%3E%3E%3E-for-LeafId%3CTypes%3E"],[633,"impl-From%3Cusize%3E-for-BlockId%3CTypes%3E"],[634,"impl-From%3CCommitment%3C%3CTypes+as+NodeType%3E::BlockHeader%3E%3E-for-BlockId%3CTypes%3E"],[652,"impl-From%3CRequestError%3E-for-Error"],[654,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[983,"impl-NodeDataSource%3CTypes%3E-for-ExtensibleDataSource%3CD,+U%3E"],[984,"impl-StatusDataSource-for-ExtensibleDataSource%3CD,+U%3E"],[1001,"impl-DataSourceLifeCycle-for-FetchingDataSource%3CMockTypes,+FileSystemStorage%3CMockTypes%3E,+P%3E"],[1002,"impl-FetchingDataSource%3CTypes,+FileSystemStorage%3CTypes%3E,+P%3E"],[1098,"impl-NodeDataSource%3CTypes%3E-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1099,"impl-StatusDataSource-for-FetchingDataSource%3CTypes,+S,+P%3E"],[1149,"impl-Display-for-BlockRequest%3CTypes%3E"],[1150,"impl-Debug-for-BlockRequest%3CTypes%3E"],[1157,"impl-From%3CBlockId%3CTypes%3E%3E-for-BlockRequest%3CTypes%3E"],[1158,"impl-From%3Cusize%3E-for-BlockRequest%3CTypes%3E"],[1159,"impl-From%3CCommitment%3C%3C%3CTypes+as+NodeType%3E::BlockPayload+as+BlockPayload%3E::Transaction%3E%3E-for-BlockRequest%3CTypes%3E"],[1253,"impl-FetchingDataSource%3CTypes,+SqlStorage,+P%3E"],[1254,"impl-DataSourceLifeCycle-for-FetchingDataSource%3CMockTypes,+SqlStorage,+P%3E"],[1375,"impl-NodeDataSource%3CMockTypes%3E-for-DataSource"],[1376,"impl-StatusDataSource-for-DataSource"],[1452,"impl-AsRef%3Cdyn+Error+%2B+Send+%2B+Sync%3E-for-Error"],[1453,"impl-AsRef%3Cdyn+Error%3E-for-Error"],[1519,"impl-Debug-for-Error"],[1520,"impl-Display-for-Error"],[1521,"impl-Debug-for-Migration"],[1522,"impl-Display-for-Migration"],[1743,"impl-Provider%3CTypes,+PayloadRequest%3E-for-AnyProvider%3CTypes%3E"],[1744,"impl-Provider%3CTypes,+LeafRequest%3E-for-AnyProvider%3CTypes%3E"],[1745,"impl-Provider%3CTypes,+PayloadRequest%3E-for-QueryServiceProvider"],[1746,"impl-Provider%3CTypes,+LeafRequest%3E-for-QueryServiceProvider"],[1952,"impl-Debug-for-MetricsError"],[1953,"impl-Display-for-MetricsError"],[2179,"impl-Display-for-Error"],[2180,"impl-Debug-for-Error"],[2189,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[2190,"impl-From%3CQueryError%3E-for-Error"],[2191,"impl-From%3CRequestError%3E-for-Error"],[2366,"impl-Display-for-Error"],[2367,"impl-Debug-for-Error"],[2371,"impl-From%3CString%3E-for-Error"],[2372,"impl-From%3CRequestError%3E-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
