var searchIndex = JSON.parse('{\
"hotshot_query_service":{"doc":"The HotShot Query Service is a minimal, generic query â€¦","t":"NGNGEGDCGINGLLLLLLLLAMLLLLLLLLLKALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLALMLLLLLLKLLLLLLMMMMIGDGDQNQDNDENQNQNEDNNDQGGDQNQDNDNDNDNDENDNDGNDINDEDGGGGQDILLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLKKKLLLLLLLLLLLLLLLLMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMKLMMLLLLLLLLLLLLMLMMMMMMLLLLLLLLLLLLLMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMQDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLKLLLEQNDDNIILLMLLLLLLLLLLKLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKKLLLLLKLLLMLLLLLLLLLLLLLLMM","n":["Availability","Block","Custom","Deltas","Error","Leaf","Options","QueryableBlock","QuorumCertificate","Resolvable","Status","Transaction","__clone_box","as_any","as_any","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","availability","availability","backtrace","borrow","borrow","borrow_mut","borrow_mut","catch_all","cause","clone","clone_into","commitment","data_source","default","deref","deref","deref_mut","deref_mut","description","deserialize","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","in_current_span","init","init","internal","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","run_standalone_service","serialize","source","status","status","status","to_owned","to_string","try_from","try_from","try_into","try_into","try_resolve","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","message","source","source","status","AvailabilityDataSource","BlockHash","BlockHeaderQueryData","BlockId","BlockQueryData","BlockRange","BlockStream","BlockStream","BlockStreamSnafu","Custom","CustomSnafu","Error","Error","Error","Hash","InclusionProof","InconsistentBlock","InconsistentBlockError","InconsistentLeafError","InconsistentQc","InvalidTransactionIndex","InvalidTransactionIndexSnafu","Iter","LeafHash","LeafId","LeafQueryData","LeafRange","LeafStream","LeafStream","LeafStreamSnafu","Missing","MissingSnafu","NotFound","NotFoundSnafu","Number","Options","QueryBlock","QueryBlockSnafu","QueryError","QueryLeaf","QueryLeafSnafu","QueryProposals","QueryProposalsSnafu","QueryResult","QueryTransaction","QueryTransactionSnafu","QueryableBlock","Request","RequestSnafu","ResourceId","Snafu","Timestamp","TransactionHash","TransactionInclusionProof","TransactionIndex","TransactionIndex","TransactionQueryData","UpdateAvailabilityData","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","backtrace","backtrace","backtrace","block","block_hash","block_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","by_hash","by_hash","cause","cause","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","count_proposals","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enumerate","enumerate","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_block","get_block_range","get_block_with_transaction","get_hash","get_leaf","get_leaf_range","get_proposals","group_id","hash","hash","hash","hash","hash","header","header","header","header","header","header","height","height","height","height","height","height","height","in_current_span","in_current_span","in_current_span","in_current_span","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_block","insert_leaf","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_empty","is_empty","is_empty","iter","leaf","leaf","len","len","message","message","new","new","nth","nth","nth_transaction","nth_transaction","nth_transaction_with_proof","nth_transaction_with_proof","partial_cmp","proof","proof","proposer","proposer","qc","qc","reason","reason","resource","resource","resource","serialize","serialize","serialize","serialize","serialize","serialize","size","size","source","source","source","source","status","status","subscribe_blocks","subscribe_leaves","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","transaction","transaction","transaction","transaction","transaction_by_hash","transaction_by_hash","transaction_by_hash_with_proof","transaction_by_hash_with_proof","transaction_with_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","height","height","height","index","message","proposer","reason","reason","resource","resource","resource","source","source","source","source","source","status","block","leaf","leaf","qc","message","Error","Iter","QueryData","UpdateDataSource","as_any","as_any","as_any_mut","as_any_mut","as_bits","as_mut","as_mut_bits","as_ref","block_height","borrow","borrow","borrow_mut","borrow_mut","commit_version","count","count_proposals","create","create_with_store","deref","deref","deref_mut","deref_mut","drop","drop","encode_hex","encode_hex_upper","export_metrics","fmt","from","from","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_proposals","init","init","insert_block","insert_leaf","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_iter","mempool_info","metrics","metrics","metrics","next","nth","open","open_with_store","revert_version","size_hint","skip_version","subscribe_blocks","subscribe_leaves","success_rate","try_as_bits","try_as_mut_bits","try_from","try_from","try_into","try_into","type_id","type_id","update","update","vzip","vzip","Error","Error","Internal","MempoolQueryData","Options","Request","StatusDataSource","UpdateStatusData","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","cmp","compare","default","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","export_metrics","extensions","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","group_id","hash","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","memory_footprint","mempool_info","metrics","partial_cmp","serialize","serialize","source","status","success_rate","to_owned","to_owned","to_string","transaction_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","reason","source"],"q":[[0,"hotshot_query_service"],[84,"hotshot_query_service::Error"],[88,"hotshot_query_service::availability"],[823,"hotshot_query_service::availability::Error"],[840,"hotshot_query_service::availability::InconsistentBlockError"],[844,"hotshot_query_service::availability::QueryError"],[845,"hotshot_query_service::data_source"],[924,"hotshot_query_service::status"],[1038,"hotshot_query_service::status::Error"]],"d":["","Block of data appened to a chain by consensus.","","State change indicated by a <code>Leaf</code>.","","Leaf type appended to a chain by consensus.","","","Certificate justifying a <code>Leaf</code>.","A reference to a <code>T</code> which can be resolved into a whole <code>T</code>.","","Item within a <code>Block</code>.","","","","","","","","","","","","","","","","","","","","Get a commitment to the underlying object.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Run an instance of the HotShot Query service with no â€¦","","","","","","","","","","","","Get the underlying object if it is available without â€¦","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BlockStream</code> variant","","SNAFU context selector for the <code>Error::Custom</code> variant","","There was an error while trying to fetch the requested â€¦","","","A proof that a certain transaction exists in the block.","","","","","","SNAFU context selector for the â€¦","Enumerate the transactions in this block.","","","","","","","SNAFU context selector for the <code>Error::LeafStream</code> variant","The requested resource exists but is not currently â€¦","SNAFU context selector for the <code>QueryError::Missing</code> variant","The requested resource does not exist or is not known to â€¦","SNAFU context selector for the <code>QueryError::NotFound</code> variant","","","","SNAFU context selector for the <code>Error::QueryBlock</code> variant","","","SNAFU context selector for the <code>Error::QueryLeaf</code> variant","","SNAFU context selector for the <code>Error::QueryProposals</code> â€¦","","","SNAFU context selector for the <code>Error::QueryTransaction</code> â€¦","A block whose contents (e.g. individual transactions) can â€¦","","SNAFU context selector for the <code>Error::Request</code> variant","","SNAFU context selector for the <code>QueryError::Error</code> variant","","","","","An index which can be used to efficiently retrieve a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Get the index of the transaction with a given hash, if it â€¦","Get the index of the transaction with a given hash, if it â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumerate the transactions in the block with their indices.","Enumerate the transactions in the block with their indices.","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the block containing a transaction with the given â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this block is empty of transactions.","Whether this block is empty of transactions.","","List the transaction indices in the block.","","","The number of transactions in the block.","","","","Collect information about a <code>Leaf</code>.","Collect information about a <code>Block</code>.","Get the index of the <code>nth</code> transaction.","Get the index of the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction, along with an inclusion proof.","Get the <code>nth</code> transaction, along with an inclusion proof.","","Get an inclusion proof for a transaction with a given â€¦","Get an inclusion proof for a transaction with a given â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a transaction by its block-specific index.","Get a transaction by its block-specific index.","","","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get a transaction by its block-specific index, along with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data used by the APIs provided in this crate, including â€¦","An extension trait for types which implement the update â€¦","","","","","","","","","","","","","","Commit the current state to persistent storage.","","","Create a new QueryData with storage at <code>path</code>.","Create a new QueryData using a persistent storage loader.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Get a handle for populating status metrics.","","","","","Open an existing QueryData from storage at <code>path</code>.","Open an existing QueryData using a persistent storage â€¦","Revert changes made to persistent storage since the last â€¦","","Advance the version of the persistent store without â€¦","","","","","","","","","","","","Update query state based on a new consensus event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Export all available metrics in the Prometheus text format.","Additional API specification files to merge with â€¦","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[5,0,5,0,0,0,0,0,0,0,5,0,5,5,11,5,11,5,11,11,0,11,5,5,11,5,11,5,5,5,5,105,0,11,5,11,5,11,5,5,5,11,5,5,5,5,5,5,11,11,11,11,5,5,5,11,5,5,11,5,11,5,11,5,11,0,5,5,0,5,11,5,5,5,11,5,11,105,5,11,11,11,5,11,106,107,108,106,0,0,0,0,0,109,19,109,0,19,0,0,38,110,55,111,40,0,0,40,19,0,111,0,0,0,109,19,109,0,38,0,38,0,55,0,19,0,0,19,0,19,0,0,19,0,0,19,0,0,0,0,0,0,0,111,0,0,55,45,46,48,38,42,39,41,57,40,44,58,59,60,61,62,50,51,52,53,19,66,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,38,39,40,19,66,66,38,39,40,19,41,42,44,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,45,46,48,50,51,52,53,111,111,38,39,40,19,55,45,46,48,38,42,39,41,57,40,44,58,59,60,61,62,50,51,52,53,19,55,45,46,48,38,42,39,41,57,40,44,58,59,60,61,62,50,51,52,53,19,55,55,109,66,0,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,38,39,40,19,38,42,41,57,44,19,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,111,111,55,42,41,57,44,55,55,55,55,42,42,42,42,41,41,41,41,57,57,57,57,44,44,44,44,66,45,46,48,50,51,52,53,55,55,45,46,48,38,38,42,39,39,41,57,40,40,44,58,59,60,61,62,50,51,52,53,19,19,55,55,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,19,19,66,66,109,109,109,55,109,109,109,66,55,42,41,57,44,55,38,39,41,40,19,42,41,57,44,50,51,52,38,39,40,19,50,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,110,110,19,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,45,46,48,58,59,60,61,62,50,51,52,53,111,111,41,111,42,39,111,41,48,53,42,41,111,111,111,111,111,111,55,111,111,42,62,42,39,51,52,59,60,61,38,42,41,57,44,19,41,57,38,39,40,19,19,53,109,109,42,41,55,45,46,48,38,42,39,41,57,40,44,58,59,60,61,62,50,51,52,53,19,55,38,39,40,19,111,111,41,44,111,111,111,111,111,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,66,66,55,45,46,48,38,42,39,41,57,40,44,66,58,59,60,61,62,50,51,52,53,19,112,113,114,112,115,116,113,114,117,118,119,120,117,118,119,116,115,121,122,121,122,123,124,0,0,0,95,33,95,33,33,33,33,33,33,95,33,95,33,33,95,33,33,33,95,33,95,33,95,33,33,33,33,33,95,33,33,33,33,33,33,33,95,33,33,33,95,33,95,33,95,33,95,33,95,33,124,33,33,95,95,33,33,33,95,33,33,33,33,33,33,95,33,95,33,95,33,124,33,95,33,0,125,18,0,0,18,0,0,103,18,104,103,104,18,103,104,18,18,104,104,18,125,103,104,18,103,104,18,18,103,18,103,18,103,103,103,104,0,103,104,18,103,104,18,18,103,18,103,104,18,103,103,103,103,103,125,104,103,18,18,103,104,18,18,18,104,104,103,104,103,18,18,103,104,18,103,104,18,103,104,18,103,104,18,103,104,18,103,125,126,103,103,18,18,18,125,103,18,18,103,103,104,18,103,104,18,103,104,18,104,104,103,104,18,127,128],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[],2],[[],2],[[],3],[4,4],[4,4],0,0,[5,[[7,[6]]]],[[]],[[]],[[]],[[]],[[8,9],5],[5,[[7,[3]]]],[5,5],[[]],[[],10],0,[[],11],[12],[12],[12],[12],[5,13],[14,[[15,[5]]]],[12],[12],[[5,16],17],[[5,16],17],[[],5],[[]],[18,5],[19,5],[[]],[20,[[15,[11,21]]]],[20,[[15,[11,21]]]],[[],[[7,[22]]]],[[[0,[23,24,25]]],[[26,[[0,[23,24,25]]]]]],[[]],[[],12],[[],12],[23,5],[[]],[[]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[11,[33,[31,[32,[31]]]],[34,[31,[32,[31]]]]],[[0,[35,24,25]]]],[[5,36],15],[5,[[7,[3]]]],0,[5,8],0,[[]],[[],9],[[],15],[[],15],[[],15],[[],15],[[],15],[[],37],[[],37],[[11,20],[[15,[21]]]],[[11,20],[[15,[21]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],[[],3],[4,4],[4,4],[38,[[7,[6]]]],[[[39,[31,[32,[31]]]]],[[7,[6]]]],[[[40,[31,[32,[31]]]]],[[7,[6]]]],[19,[[7,[6]]]],[[[41,[31]]]],[[[42,[31,[32,[31]]]]],[[43,[31]]]],[[[44,[31]]],[[43,[31]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,38],[46,38],[[[48,[[47,[9]]]]],38],[[[50,[[47,[49]],[47,[49]]]]],19],[[[51,[[47,[49]],[47,[9]]]]],19],[[[52,[[47,[49]],[47,[9]]]]],19],[[[53,[[47,[9]],[47,[8]]]]],19],[10,7],[10,7],[38,[[7,[3]]]],[[[39,[31,[32,[31]]]]],[[7,[3]]]],[[[40,[31,[32,[31]]]]],[[7,[3]]]],[19,[[7,[3]]]],[[[55,[54]]],[[55,[54]]]],[45,45],[46,46],[[[48,[56]]],[[48,[56]]]],[38,38],[[[42,[[0,[56,31]],[0,[56,[32,[[0,[56,31]]]]]]]]],[[42,[[0,[56,31]],[0,[56,[32,[[0,[56,31]]]]]]]]]],[[[39,[[0,[56,31]],[0,[56,[32,[[0,[56,31]]]]]]]]],[[39,[[0,[56,31]],[0,[56,[32,[[0,[56,31]]]]]]]]]],[[[41,[[0,[56,31]]]]],[[41,[[0,[56,31]]]]]],[[[57,[[0,[56,31]]]]],[[57,[[0,[56,31]]]]]],[[[40,[[0,[56,31]],[0,[56,[32,[[0,[56,31]]]]]]]]],[[40,[[0,[56,31]],[0,[56,[32,[[0,[56,31]]]]]]]]]],[[[44,[[0,[56,31]]]]],[[44,[[0,[56,31]]]]]],[58,58],[[[59,[56]]],[[59,[56]]]],[[[60,[56]]],[[60,[56]]]],[[[61,[56]]],[[61,[56]]]],[[[62,[56]]],[[62,[56]]]],[[[50,[56,56]]],[[50,[56,56]]]],[[[51,[56,56]]],[[51,[56,56]]]],[[[52,[56,56]]],[[52,[56,56]]]],[[[53,[56,56]]],[[53,[56,56]]]],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[55,[54]],[55,[54]]],63],[[],63],[64,[[65,[[28,[35]]]]]],[[],66],[66,[[15,[[68,[[0,[24,25,67]],19]],69]]]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[38,13],[[[39,[31,[32,[31]]]]],13],[[[40,[31,[32,[31]]]]],13],[19,13],[14,[[15,[38]]]],[14,[[15,[[42,[31,[32,[31]]]]]]]],[14,[[15,[[41,[31]]]]]],[14,[[15,[[57,[31]]]]]],[14,[[15,[[44,[31]]]]]],[14,[[15,[19]]]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[],[[28,[70]]]],[[],[[28,[70]]]],[[[55,[54]],[55,[54]]],71],[[[42,[[0,[72,31]],[0,[72,[32,[[0,[72,31]]]]]]]],[42,[[0,[72,31]],[0,[72,[32,[[0,[72,31]]]]]]]]],71],[[[41,[[0,[72,31]]]],[41,[[0,[72,31]]]]],71],[[[57,[[0,[72,31]]]],[57,[[0,[72,31]]]]],71],[[[44,[[0,[72,31]]]],[44,[[0,[72,31]]]]],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],0,[45,[[15,[38]]]],[46,[[15,[38]]]],[[[48,[[47,[9]]]]],[[15,[38]]]],[[[50,[[47,[49]],[47,[49]]]]],[[15,[19]]]],[[[51,[[47,[49]],[47,[9]]]]],[[15,[19]]]],[[[52,[[47,[49]],[47,[9]]]]],[[15,[19]]]],[[[53,[[47,[9]],[47,[8]]]]],[[15,[19]]]],[[[55,[54]],16],17],[[[55,[54]],16],17],[[45,16],17],[[46,16],17],[[[48,[73]],16],17],[[38,16],17],[[38,16],17],[[[42,[[0,[73,31]],[0,[73,[32,[[0,[73,31]]]]]]]],16],17],[[[39,[31,[32,[31]]]],16],17],[[[39,[[0,[73,31]],[0,[73,[32,[[0,[73,31]]]]]]]],16],17],[[[41,[[0,[73,31]]]],16],17],[[[57,[[0,[73,31]]]],16],17],[[[40,[[0,[73,31]],[0,[73,[32,[[0,[73,31]]]]]]]],16],17],[[[40,[31,[32,[31]]]],16],17],[[[44,[[0,[73,31]]]],16],17],[[58,16],17],[[[59,[73]],16],17],[[[60,[73]],16],17],[[[61,[73]],16],17],[[[62,[73]],16],17],[[[50,[73,73]],16],17],[[[51,[73,73]],16],17],[[[52,[73,73]],16],17],[[[53,[73,73]],16],17],[[19,16],17],[[19,16],17],[[[10,[54]]],[[55,[54]]]],[12,[[55,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,19],[[]],[[],19],[20,[[15,[66,21]]]],[20,[[15,[66,21]]]],[[[0,[[47,[75]],24,25]]],[[65,[[28,[35]]]]]],[[[0,[[76,[12]],24]]],[[65,[[28,[35]]]]]],[77,[[65,[[28,[35]]]]]],[[[0,[78,79]],80],49],[[[0,[[47,[81]],24,25]]],[[65,[[28,[35]]]]]],[[[0,[[76,[12]],24]]],[[65,[[28,[35]]]]]],[[64,[7,[12]]],[[65,[[28,[35]]]]]],[[],[[7,[22]]]],[[[55,[54]],82]],[[[42,[31,[32,[31]]]]],[[83,[31,[32,[31]]]]]],[[[41,[31]]],[[43,[31]]]],[[[57,[31]]],[[43,[31]]]],[[[44,[31]]],[[77,[31]]]],[[[0,[23,24,25]]],[[26,[[0,[23,24,25]]]]]],[[[0,[23,24,25]]],[[26,[[0,[23,24,25]]]]]],[[[0,[23,24,25]]],[[26,[[0,[23,24,25]]]]]],[[[41,[31]]],[[57,[31]]]],[[[0,[23,24,25]]],[[26,[[0,[23,24,25]]]]]],[[[0,[23,24,25]]],[[26,[[0,[23,24,25]]]]]],[[[42,[31,[32,[31]]]]],49],[[[41,[31]]],49],[[[57,[31]]],49],[[[44,[31]]],49],0,0,0,[[]],[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[41,[[65,[[28,[35]]]]]],[42,[[65,[[28,[35]]]]]],[23,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[45,38],[46,38],[[[48,[[47,[9]]]]],38],[58,19],[[[59,[[47,[9]]]]],19],[[[60,[[47,[9]]]]],19],[[[61,[[47,[9]]]]],19],[[[62,[[47,[64]]]]],19],[[[50,[[47,[49]],[47,[49]]]]],19],[[[51,[[47,[49]],[47,[9]]]]],19],[[[52,[[47,[49]],[47,[9]]]]],19],[[[53,[[47,[9]],[47,[8]]]]],19],[[],71],[[],71],[[[41,[31]]],71],[[]],[[[42,[31,[32,[31]]]]],[[84,[31,[32,[31]]]]]],0,[[],12],[[[41,[31]]],12],0,0,[[[84,[31,[32,[31]]]],[85,[31,[32,[31]]]]],[[15,[[42,[31,[32,[31]]]],[39,[31,[32,[31]]]]]]]],[[[84,[31,[32,[31]]]],[85,[31,[32,[31]]]],[86,[31]]],[[15,[[41,[31]],[40,[31,[32,[31]]]]]]]],[12,7],[12,7],[12,7],[12,7],[12,7],[12,7],[[[55,[54]],[55,[54]]],[[7,[63]]]],[[],7],[[],7],[[[42,[31,[32,[31]]]]],64],0,[[[42,[31,[32,[31]]]]],[[85,[31,[32,[31]]]]]],0,0,0,0,0,0,[[38,36],15],[[[42,[31,[32,[31]]]],36],15],[[[41,[31]],36],15],[[[57,[31]],36],15],[[[44,[31]],36],15],[[19,36],15],[[[41,[31]]],49],[[[57,[31]]],49],[38,[[7,[3]]]],[[[39,[31,[32,[31]]]]],[[7,[3]]]],[[[40,[31,[32,[31]]]]],[[7,[3]]]],[19,[[7,[3]]]],[19,8],0,[12,[[65,[[28,[35]]]]]],[12,[[65,[[28,[35]]]]]],[[[42,[31,[32,[31]]]]],87],[[[41,[31]]],87],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],7],[[],7],[[[41,[31]],[88,[31]]],[[7,[[44,[31]]]]]],[[[44,[31]]],[[89,[31]]]],[10,7],[10,7],[10,7],[10,7],[[],7],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[66,20],[[15,[21]]]],[[66,20],[[15,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],[[91,[90]]]],[[[33,[31,[32,[31]]]]]],[[],[[91,[90]]]],[[[33,[31,[32,[31]]]]]],[[[33,[31,[32,[31]],25]]],[[65,[[28,[35]]]]]],[[]],[[]],[[]],[[]],[[[33,[31,[32,[31]]]]],[[15,[92]]]],[[[95,[[0,[93,94,56]]]]],12],[[[33,[31,[32,[31]],[0,[24,25]]]],64],[[65,[[28,[35]]]]]],[96,[[15,[[33,[31,[32,[31]]]],92]]]],[97,[[15,[[33,[31,[32,[31]]]],92]]]],[12],[12],[12],[12],[12],[12],[[],[[99,[98]]]],[[],[[99,[98]]]],[[[33,[31,[32,[31]],25]]],[[65,[[28,[35]]]]]],[[[33,[31,[32,[31]],73]],16],17],[[]],[[]],[[[33,[31,[32,[31]],[0,[24,25]]]],[0,[[47,[[75,[31]]]],24,25]]],[[65,[[28,[35]]]]]],[[[33,[31,[32,[31]],[0,[24,25]]]],[0,[[76,[12]],24]]],[[65,[[28,[35]]]]]],[[[33,[31,[32,[31]],[0,[24,25]]]],[77,[31]]],[[65,[[28,[35]]]]]],[[[33,[31,[32,[31]],[0,[24,25]]]],[0,[[47,[[81,[31,[32,[31]]]]]],24,25]]],[[65,[[28,[35]]]]]],[[[33,[31,[32,[31]],[0,[24,25]]]],[0,[[76,[12]],24]]],[[65,[[28,[35]]]]]],[[[33,[31,[32,[31]],[0,[24,25]]]],64,[7,[12]]],[[65,[[28,[35]]]]]],[[],12],[[],12],[[[33,[31,[32,[31]],24]],[41,[31]]],[[65,[[28,[35]]]]]],[[[33,[31,[32,[31]],24]],[42,[31,[32,[31]]]]],[[65,[[28,[35]]]]]],[[]],[[]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[]],[[[33,[31,[32,[31]],25]]],[[65,[[28,[35]]]]]],[[],[[28,[100]]]],[[],[[28,[100,27]]]],[[[33,[31,[32,[31]]]]],[[28,[100]]]],[[[95,[[0,[93,94,56]]]]],7],[[[95,[[0,[93,94,56]]]],12],7],[96,[[15,[[33,[31,[32,[31]]]],92]]]],[97,[[15,[[33,[31,[32,[31]]]],92]]]],[[[33,[31,[32,[31]]]]],[[15,[92]]]],[[[95,[[0,[93,94,56]]]]]],[[[33,[31,[32,[31]]]]],[[15,[92]]]],[[[33,[31,[32,[31]],[0,[24,25]]]],12],[[65,[[28,[35]]]]]],[[[33,[31,[32,[31]],[0,[24,25]]]],12],[[65,[[28,[35]]]]]],[[[33,[31,[32,[31]],25]]],[[65,[[28,[35]]]]]],[[],[[15,[[91,[90]],101]]]],[[],[[15,[[91,[90]],101]]]],[[],15],[[],15],[[],15],[[],15],[[],37],[[],37],[[[102,[84]]],[[65,[[28,[35]]]]]],[102,[[65,[[28,[35,27]]]]]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[1],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[4,4],[4,4],[18,[[7,[6]]]],[[],[[65,[[28,[35]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[18,[[7,[3]]]],[103,103],[18,18],[[]],[[]],[[103,103],63],[[],63],[[],103],[[],104],[104,[[15,[[68,[[0,[24,25,67]],18]],69]]]],[12],[12],[12],[12],[12],[12],[18,13],[14,[[15,[103]]]],[14,[[15,[18]]]],[12],[12],[12],[[103,103],71],[[],71],[[],71],[[],71],[[],71],[[],[[65,[[28,[35]]]]]],0,[[103,16],17],[[18,16],17],[[18,16],17],[[]],[[]],[9,18],[74,18],[[]],[20,[[15,[104,21]]]],[20,[[15,[104,21]]]],[[[0,[78,79]],80],49],[[],[[7,[22]]]],[[103,82]],[[[0,[23,24,25]]],[[26,[[0,[23,24,25]]]]]],[[]],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[28,[27]]],[[28,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[29,[27]]],[[29,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],[[[30,[27]]],[[30,[2,27]]]],0,[[],[[65,[[28,[35]]]]]],[[],[[28,[100]]]],[[103,103],[[7,[63]]]],[[103,36],15],[[18,36],15],[18,[[7,[3]]]],[18,8],[[],[[65,[[28,[35]]]]]],[[]],[[]],[[],9],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],37],[[],37],[[],37],[[104,20],[[15,[21]]]],[[104,20],[[15,[21]]]],[[]],[[]],[[]],0,0],"c":[],"p":[[3,"Private"],[8,"Any"],[8,"Error"],[3,"Command"],[4,"Error"],[3,"Backtrace"],[4,"Option"],[4,"StatusCode"],[3,"String"],[3,"Commitment"],[3,"Options"],[15,"usize"],[15,"str"],[8,"Deserializer"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"Error"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"NodeType"],[8,"NodeImplementation"],[3,"QueryData"],[3,"SystemContextHandle"],[8,"Future"],[8,"Serializer"],[3,"TypeId"],[4,"QueryError"],[3,"InconsistentLeafError"],[4,"InconsistentBlockError"],[3,"BlockQueryData"],[3,"LeafQueryData"],[6,"BlockHash"],[3,"TransactionQueryData"],[3,"NotFoundSnafu"],[3,"MissingSnafu"],[8,"Into"],[3,"Snafu"],[15,"u64"],[3,"InvalidTransactionIndexSnafu"],[3,"LeafStreamSnafu"],[3,"BlockStreamSnafu"],[3,"CustomSnafu"],[8,"Committable"],[4,"ResourceId"],[8,"Clone"],[3,"BlockHeaderQueryData"],[3,"RequestSnafu"],[3,"QueryLeafSnafu"],[3,"QueryBlockSnafu"],[3,"QueryTransactionSnafu"],[3,"QueryProposalsSnafu"],[4,"Ordering"],[3,"EncodedPublicKey"],[3,"Pin"],[3,"Options"],[8,"ReadState"],[3,"Api"],[4,"ApiError"],[8,"Iterator"],[15,"bool"],[8,"PartialEq"],[8,"Debug"],[4,"RequestError"],[6,"BlockId"],[8,"RangeBounds"],[6,"TransactionHash"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[6,"LeafId"],[8,"Hasher"],[6,"LeafHash"],[6,"Leaf"],[6,"QuorumCertificate"],[6,"Block"],[6,"Timestamp"],[6,"TransactionIndex"],[6,"Transaction"],[8,"BitOrder"],[3,"BitSlice"],[4,"PersistenceError"],[8,"Serialize"],[8,"DeserializeOwned"],[3,"Iter"],[3,"Path"],[3,"AtomicStoreLoader"],[15,"char"],[8,"FromIterator"],[8,"Metrics"],[4,"BitSpanError"],[3,"Event"],[3,"MempoolQueryData"],[3,"Options"],[8,"Resolvable"],[13,"Custom"],[13,"Availability"],[13,"Status"],[8,"AvailabilityDataSource"],[8,"UpdateAvailabilityData"],[8,"QueryableBlock"],[13,"InvalidTransactionIndex"],[13,"LeafStream"],[13,"BlockStream"],[13,"Custom"],[13,"QueryProposals"],[13,"QueryLeaf"],[13,"QueryBlock"],[13,"QueryTransaction"],[13,"Request"],[13,"InconsistentBlock"],[13,"InconsistentQc"],[13,"Error"],[8,"UpdateDataSource"],[8,"StatusDataSource"],[8,"UpdateStatusData"],[13,"Internal"],[13,"Request"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
