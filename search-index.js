var searchIndex = JSON.parse('{\
"hotshot_query_service":{"doc":"The HotShot Query Service is a minimal, generic query â€¦","t":"NNNENGGNDNDNDGEGIGDNGLLLLLLLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMFLLLLALLMLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLMMMMMIGGDQNQDNDEQNNNQDNDNDQGGDQNQDNNNDNDNDNDNDINDENDNDGGGGQDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLKKKLLLLLLLLLLLLMMMLLMLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMKLMLLLLLLLLLLLLLLMLMMMMMMLLLLLLLLMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMQDDDCIILLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLALLLLLLLLLLLLLLLLLKLLLLLDDDIDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMENDDNIILLLLMLLLLLLLLLLKLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLKLKLLLLLLLLLMLLLLLLLLLLLLLLMM","n":["Availability","Custom","Err","Error","Error","Header","Metadata","Missing","MissingSnafu","NotFound","NotFoundSnafu","Ok","Options","Payload","QueryError","QueryResult","Resolvable","SignatureKey","Snafu","Status","Transaction","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args_for_update","availability","availability","backtrace","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","catch_all","cause","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","commitment","data_source","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","drop","drop","drop","drop","drop","drop","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","header","in_current_span","in_current_span","include_migrations","init","init","init","init","init","init","instantiate_data_source_tests","internal","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","message","metrics","port","run_standalone_service","serialize","serialize","source","source","status","status","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","message","source","source","status","message","AvailabilityDataSource","BlockHash","BlockId","BlockQueryData","BlockRange","BlockStream","BlockStream","BlockStreamSnafu","Custom","CustomSnafu","Error","Error","Hash","Hash","Hash","InclusionProof","InconsistentLeafError","InvalidSignatureKey","InvalidSignatureKeySnafu","InvalidTransactionIndex","InvalidTransactionIndexSnafu","Iter","LeafHash","LeafId","LeafQueryData","LeafRange","LeafStream","LeafStream","LeafStreamSnafu","Number","Number","Number","Options","QueryBlock","QueryBlockSnafu","QueryLeaf","QueryLeafSnafu","QueryProposals","QueryProposalsSnafu","QueryTransaction","QueryTransactionSnafu","QueryablePayload","Request","RequestSnafu","ResourceId","StreamBlock","StreamBlockSnafu","StreamLeaf","StreamLeafSnafu","Timestamp","TransactionHash","TransactionInclusionProof","TransactionIndex","TransactionIndex","TransactionQueryData","UpdateAvailabilityData","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","backtrace","block_hash","block_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","by_hash","by_hash","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","count_proposals","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enumerate","enumerate","enumerate","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extensions","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","genesis","genesis","get_block","get_block_range","get_block_with_transaction","get_hash","get_leaf","get_leaf_range","get_proposals","group_id","hash","hash","hash","hash","header","header","header","header","height","height","height","height","height","height","in_current_span","in_current_span","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_block","insert_leaf","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_empty","is_empty","is_empty","iter","leaf","leaf","len","len","message","metadata","new","new","nth","nth","nth_transaction","nth_transaction","nth_transaction_with_proof","nth_transaction_with_proof","partial_cmp","payload","proof","proof","proposer","proposer","qc","qc_leaf","reason","reason","resource","resource","resource","serialize","serialize","serialize","serialize","size","source","source","status","status","subscribe_blocks","subscribe_leaves","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","transaction","transaction","transaction","transaction","transaction_by_hash","transaction_by_hash","transaction_by_hash_with_proof","transaction_by_hash_with_proof","transaction_with_proof","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","height","height","height","index","message","proposer","reason","reason","resource","resource","resource","source","source","source","source","source","source","source","status","Error","ExtensibleDataSource","FileSystemDataSource","MetricsDataSource","SqlDataSource","UpdateDataSource","VersionedDataSource","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bits","as_mut","as_mut_bits","as_ref","block_height","block_height","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commit","commit","count_proposals","count_proposals","create","create_with_store","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_hex","encode_hex_upper","fmt","fmt","fmt","from","from","from","get_block","get_block","get_block_range","get_block_range","get_block_with_transaction","get_block_with_transaction","get_leaf","get_leaf","get_leaf_range","get_leaf_range","get_proposals","get_proposals","init","init","init","inner","inner_mut","insert_block","insert_block","insert_leaf","insert_leaf","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","metrics","metrics","metrics","new","open","open_with_store","populate_metrics","populate_metrics","populate_metrics","revert","revert","revert","skip_version","sql","subscribe_blocks","subscribe_blocks","subscribe_leaves","subscribe_leaves","to_owned","to_owned","try_as_bits","try_as_mut_bits","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","update","update","vzip","vzip","vzip","Config","Error","Migration","Query","SqlDataSource","Transaction","__clone_box","__clone_box","__clone_box","__clone_box","applied_on","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","block_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","checksum","client","client","client","clone","clone","clone_into","clone_into","cmp","commit","compare","connect","connect","context","count_proposals","database","default","default_migrations","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast_mut","downcast_ref","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","execute","execute_many","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get_block","get_block_range","get_block_with_transaction","get_leaf","get_leaf_range","get_proposals","header","header","host","include_dir","include_migrations","init","init","init","init","init","insert_block","insert_leaf","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","metrics","migrations","msg","name","new","no_migrations","partial_cmp","password","populate_metrics","port","postgres","prefix","query","query_one","query_one_static","query_opt","query_opt_static","query_static","reset_schema","revert","root_cause","schema","sql","subscribe_blocks","subscribe_leaves","tls","to_owned","to_owned","to_string","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unapplied","update","user","version","vzip","vzip","vzip","vzip","vzip","Counter","Gauge","Histogram","Label","MetricsError","NoSuchMetric","NoSuchSubgroup","Prometheus","PrometheusMetrics","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_point","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_counter","create_gauge","create_histogram","create_label","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","export","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get","get","get_counter","get_gauge","get_histogram","get_label","get_subgroup","header","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mean","sample_count","set","set","source","subgroup","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","vzip","vzip","label","namespace","path","source","Error","Internal","MempoolQueryData","Options","Request","StatusDataSource","UpdateStatusData","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","augment_args","augment_args_for_update","backtrace","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","cmp","compare","consensus_metrics","consensus_metrics","default","default","define_api","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","extensions","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get_hash","group_id","hash","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","memory_footprint","mempool_info","mempool_info","metrics","partial_cmp","populate_metrics","serialize","serialize","source","status","success_rate","success_rate","to_owned","to_owned","to_string","transaction_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","reason","source"],"q":[[0,"hotshot_query_service"],[212,"hotshot_query_service::Error"],[216,"hotshot_query_service::QueryError"],[217,"hotshot_query_service::availability"],[869,"hotshot_query_service::availability::Error"],[888,"hotshot_query_service::data_source"],[1017,"hotshot_query_service::data_source::sql"],[1208,"hotshot_query_service::metrics"],[1383,"hotshot_query_service::metrics::MetricsError"],[1387,"hotshot_query_service::status"],[1506,"hotshot_query_service::status::Error"],[1508,"dyn_clone::sealed"],[1509,"dyn_clone::sealed"],[1510,"core::error"],[1511,"clap_builder::builder::command"],[1512,"snafu::backtrace_shim"],[1513,"core::option"],[1514,"alloc::string"],[1515,"core::convert"],[1516,"tide_disco::status"],[1517,"core::clone"],[1518,"commit"],[1519,"core::result"],[1520,"serde::de"],[1521,"core::fmt"],[1522,"core::fmt"],[1523,"clap_builder"],[1524,"clap_builder::util::id"],[1525,"color_eyre::section"],[1526,"core::fmt"],[1527,"core::marker"],[1528,"alloc::sync"],[1529,"alloc::rc"],[1530,"hotshot::types::handle"],[1531,"hotshot_types::traits::node_implementation"],[1532,"hotshot_types::traits::node_implementation"],[1533,"core::any"],[1534,"core::future::future"],[1535,"core::pin"],[1536,"tide_disco::api"],[1537,"tide_disco::api"],[1538,"core::iter::traits::iterator"],[1539,"core::cmp"],[1540,"core::ops::range"],[1541,"core::hash"],[1542,"core::marker"],[1543,"hotshot_types::data"],[1544,"hotshot_types::simple_certificate"],[1545,"bitvec::slice"],[1546,"bitvec::order"],[1547,"std::path"],[1548,"atomic_store::error"],[1549,"atomic_store::atomic_store"],[1550,"core::iter::traits::collect"],[1551,"hotshot_types::traits::metrics"],[1552,"bitvec::ptr::span"],[1553,"hotshot_types::event"],[1554,"time::offset_date_time"],[1555,"anyhow"],[1556,"tokio_postgres::client"],[1557,"alloc::vec"],[1558,"tokio_postgres::to_statement"],[1559,"core::iter::traits::collect"],[1560,"refinery_core::runner"],[1561,"refinery_core::error"],[1562,"hotshot_types::traits::metrics"]],"d":["","","Contains the error value","","There was an error while trying to fetch the requested â€¦","","","The requested resource exists but is not currently â€¦","SNAFU context selector for the <code>QueryError::Missing</code> variant","The requested resource does not exist or is not known to â€¦","SNAFU context selector for the <code>QueryError::NotFound</code> variant","Contains the success value","","","","","A reference to a <code>T</code> which can be resolved into a whole <code>T</code>.","","SNAFU context selector for the <code>QueryError::Error</code> variant","","Item within a <code>Payload</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","Get a commitment to the underlying object.","Persistent storage and sources of data consumed by APIs.","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Embed migrations from the given directory into the current â€¦","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Run an instance of the HotShot Query service with no â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the underlying object if it is available without â€¦","","","","","","","","","","","","","","","","","","","","","A block hash is the hash of the block header.","","","","","","SNAFU context selector for the <code>Error::BlockStream</code> variant","","SNAFU context selector for the <code>Error::Custom</code> variant","","","","","","A proof that a certain transaction exists in the block.","","","SNAFU context selector for the <code>Error::InvalidSignatureKey</code> â€¦","","SNAFU context selector for the â€¦","Enumerate the transactions in this block.","","","","","","","SNAFU context selector for the <code>Error::LeafStream</code> variant","","","","","","SNAFU context selector for the <code>Error::QueryBlock</code> variant","","SNAFU context selector for the <code>Error::QueryLeaf</code> variant","","SNAFU context selector for the <code>Error::QueryProposals</code> â€¦","","SNAFU context selector for the <code>Error::QueryTransaction</code> â€¦","A block payload whose contents (e.g. individual â€¦","","SNAFU context selector for the <code>Error::Request</code> variant","","","SNAFU context selector for the <code>Error::StreamBlock</code> variant","","SNAFU context selector for the <code>Error::StreamLeaf</code> variant","","","","","An index which can be used to efficiently retrieve a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Get the index of the transaction with a given hash, if it â€¦","Get the index of the transaction with a given hash, if it â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumerate the transactions in the block with their indices.","Enumerate the transactions in the block with their indices.","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","Consume the selector and return a <code>Result</code> with the â€¦","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the block containing a transaction with the given â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this block is empty of transactions.","Whether this block is empty of transactions.","","List the transaction indices in the block.","","","The number of transactions in the block.","","","","Collect information about a <code>Leaf</code>.","Collect information about a block.","Get the index of the <code>nth</code> transaction.","Get the index of the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction.","Get the <code>nth</code> transaction, along with an inclusion proof.","Get the <code>nth</code> transaction, along with an inclusion proof.","","","Get an inclusion proof for a transaction with a given â€¦","Get an inclusion proof for a transaction with a given â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a transaction by its block-specific index.","Get a transaction by its block-specific index.","","","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get the transaction with a given hash, if it is in the â€¦","Get a transaction by its block-specific index, along with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper to add extensibility to an existing data source.","A data source for the APIs provided in this crate, backed â€¦","A minimal data source for the status API provided in this â€¦","","An extension trait for types which implement the update â€¦","A data source with an atomic transaction-based â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","Atomically commit to all outstanding modifications to the â€¦","","Commit the current state to persistent storage.","","","Create a new FileSystemDataSource with storage at <code>path</code>.","Create a new FileSystemDataSource using a persistent â€¦","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Access the underlying data source.","Mutably access the underlying data source.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Open an existing FileSystemDataSource from storage at <code>path</code>.","Open an existing FileSystemDataSource using a persistent â€¦","","","","Erase all oustanding modifications to the data.","","Revert changes made to persistent storage since the last â€¦","Advance the version of the persistent store without â€¦","","","","","","","","","","","","","","","","","","","Update query state based on a new consensus event.","","","","","","Postgres client config.","The <code>Error</code> type, a wrapper around a dynamic error type.","Represents a schema migration to be run on the database, â€¦","","A data source for the APIs provided in this crate, backed â€¦","An atomic SQL transaction.","","","","","Get the timestamp from when the Migration was applied. <code>None</code>â€¦","","","","","","","","","","","","","","","","","","","","","","","","An iterator of the chain of source errors contained by â€¦","Get the Migration checksum. Checksum is formed from the â€¦","","","","","","","","","Atomically commit to all outstanding modifications to the â€¦","","Connect to the database with this config.","Connect to a remote database.","Wrap the error value with additional context.","","Set the name of the database to connect to.","","The migrations requied to build the default schema for â€¦","","","","","","","","","","","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","","","","","","","","","","","","Execute a statement against the underlying database.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Set the hostname of the database server.","Embed the contents of a directory in your crate.","Embed migrations from the given directory into the current â€¦","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","","Add custom migrations to run when connecting to the â€¦","Create a new error object from a printable error message.","Get the Migration Name","Create a new error object from any error type.","Skip all migrations when connecting to the database.","","Set a password for connecting to the database.","","Set the port on which to connect to the database.","","Get the Prefix","","Query the underlying SQL database, returning exactly one â€¦","Query the underlying SQL database with no parameters, â€¦","Query the underlying SQL database, returning zero or one â€¦","Query the underlying SQL database with no parameters, â€¦","Query the underlying SQL database with no parameters.","Reset the schema on connection.","Erase all oustanding modifications to the data.","The lowest level cause of this error â€” this errorâ€™s â€¦","Set the name of the schema to use for queries.","","","","Use TLS for an encrypted connection to the database.","","","","","Access the transaction which is accumulating all â€¦","","","","","","","","","","","","","","","","Create an unapplied migration, name and version are parsed â€¦","","Set the DB user to connect as.","Get the Migration version","","","","","","A Counter metric.","A Gauge metric.","A Histogram metric.","A Label metric.","","","","","A Prometheus-based implementation of a Metrics registry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a counter in this sub-group by name.","Get a gauge in this sub-group by name.","Get a histogram in this sub-group by name.","Get a label in this sub-group by name.","Get a (possibly nested) subgroup of this group by its path.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with â€¦","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[7,7,121,0,10,0,0,10,0,10,0,121,0,0,0,0,0,0,0,7,0,7,7,11,11,12,12,13,13,10,10,7,11,12,13,10,19,7,11,12,13,10,19,7,10,19,19,0,19,7,10,7,11,12,13,10,19,7,11,12,13,10,19,11,12,13,7,7,10,7,11,12,13,10,7,11,12,13,10,145,0,19,7,11,12,13,10,19,7,11,12,13,10,19,7,10,7,10,7,11,12,13,10,19,11,12,13,7,7,11,12,13,10,10,7,7,7,7,11,12,13,10,19,19,19,19,7,10,7,10,0,7,11,12,13,10,19,0,7,7,11,12,13,10,19,7,11,12,13,10,19,7,11,12,13,10,19,7,11,12,13,10,19,11,12,13,13,0,19,0,7,10,7,10,0,7,10,19,7,11,12,13,10,7,10,7,11,12,13,10,19,7,11,12,13,10,19,145,7,11,12,13,10,19,19,19,7,11,12,13,10,19,146,147,148,146,149,0,0,0,0,41,27,41,0,27,0,0,107,80,86,58,150,0,27,0,27,0,150,0,0,0,41,27,41,0,80,86,58,0,27,0,27,0,27,0,27,0,0,27,0,0,27,0,27,0,0,0,0,0,150,0,0,58,58,49,49,48,48,60,60,51,51,61,61,62,62,63,63,64,64,65,65,66,66,67,67,52,52,54,54,55,55,56,56,57,57,27,27,72,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,48,27,72,72,48,27,49,51,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,52,54,55,56,57,150,150,48,27,58,49,48,60,51,61,62,63,64,65,66,67,52,54,55,56,57,27,58,49,48,60,51,61,62,63,64,65,66,67,52,54,55,56,57,27,58,58,41,72,0,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,48,27,49,60,51,27,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,150,150,60,58,49,60,51,58,58,58,58,49,49,49,49,60,60,60,60,51,51,51,51,72,52,54,55,56,57,58,58,49,48,48,60,51,61,62,63,64,65,66,67,52,54,55,56,57,27,27,58,58,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,27,27,72,72,49,60,41,41,41,58,41,41,41,72,58,49,60,51,58,48,60,27,49,60,51,52,54,55,48,27,52,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,107,107,27,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,61,62,63,64,65,66,67,52,54,55,56,57,150,150,60,150,49,48,150,60,57,60,49,60,150,150,150,150,150,150,58,60,150,150,49,67,49,48,54,55,62,64,66,49,60,51,27,60,48,27,27,57,41,41,58,49,48,60,51,61,62,63,64,65,66,67,52,54,55,56,57,27,58,48,27,150,150,60,51,150,150,150,150,150,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,72,72,58,49,48,60,51,72,61,62,63,64,65,66,67,52,54,55,56,57,27,151,152,153,151,154,155,152,153,156,157,158,159,156,160,157,161,158,155,154,44,0,0,0,0,0,0,99,99,101,101,99,100,101,99,100,101,99,99,99,99,99,100,101,99,100,101,99,100,101,99,101,99,101,44,99,100,99,100,100,100,101,99,100,101,99,100,101,99,100,101,99,99,99,100,101,99,100,101,99,100,99,100,99,100,99,100,99,100,99,100,99,100,101,99,99,99,100,99,100,99,100,101,99,100,101,99,100,101,99,100,101,99,100,101,99,100,100,99,100,101,44,99,100,100,0,99,100,99,100,99,101,99,99,99,100,101,99,100,101,99,100,101,43,99,100,99,100,101,0,0,0,0,0,0,112,112,119,119,112,114,118,112,119,115,114,118,112,119,115,114,114,115,114,118,112,119,115,114,118,112,119,115,114,112,162,118,115,112,119,112,119,112,115,112,119,115,114,115,119,119,0,114,114,118,112,119,115,114,114,118,112,119,115,114,114,114,114,114,118,112,119,115,115,112,112,112,112,112,118,118,114,114,112,112,119,115,114,114,114,118,112,119,119,115,119,115,115,115,115,115,115,114,112,119,0,0,114,118,112,119,115,115,115,114,118,112,119,115,114,118,112,119,115,114,118,112,119,115,114,118,112,119,115,114,115,119,114,112,114,119,112,119,115,119,0,112,162,162,162,162,162,162,119,115,114,119,112,115,115,119,112,119,114,112,115,114,118,112,119,115,114,118,112,119,115,114,118,112,119,115,112,115,119,112,114,118,112,119,115,0,0,0,0,0,134,134,134,0,108,108,131,131,135,135,132,132,136,136,131,132,134,108,131,135,132,136,134,108,131,135,132,136,134,134,134,108,131,135,132,136,134,108,131,135,132,136,134,108,131,135,132,136,108,131,135,132,136,108,108,108,108,108,134,108,131,135,132,136,134,108,131,135,132,136,134,134,108,131,135,132,136,108,134,134,108,131,135,132,136,134,134,108,131,135,132,136,131,135,136,108,108,108,108,108,134,134,134,108,131,135,132,136,134,108,131,135,132,136,134,108,131,135,132,136,134,108,131,135,132,136,134,108,131,135,132,136,132,132,135,136,134,108,132,108,131,135,132,136,134,134,108,131,135,132,136,134,108,131,135,132,136,134,108,131,135,132,136,135,134,108,131,135,132,136,163,163,164,165,0,28,0,0,28,0,0,143,143,28,28,144,143,144,28,143,144,28,28,144,144,28,42,143,144,28,143,144,28,28,143,28,143,28,143,143,42,42,143,144,0,143,144,28,143,144,28,28,143,28,143,144,28,143,143,143,143,143,144,143,28,28,143,144,28,28,28,144,144,143,144,143,28,28,143,144,28,143,144,28,143,144,28,143,144,28,143,144,28,143,42,42,42,143,166,143,28,28,28,42,42,143,28,28,143,143,144,28,143,144,28,143,144,28,144,144,143,144,28,167,168],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],0,0,[7,[[9,[8]]]],[10,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,10],[12,10],[[[13,[-1]]],10,[[15,[14]]]],[[16,14],7],[7,[[9,[5]]]],[10,[[9,[5]]]],[7,7],[11,11],[12,12],[[[13,[-1]]],[[13,[-1]]],17],[10,10],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[18,[-2]]],[],[]],0,[[],19],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[7,21],[10,21],[-1,[[22,[7]]],23],[-1,[[22,[10]]],23],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[11,[[22,[-1,10]]],[]],[12,[[22,[-1,10]]],[]],[[[13,[-1]]],[[22,[-2,10]]],[[15,[14]]],[]],[[7,24],25],[[7,24],25],[[11,24],25],[[12,24],25],[[[13,[-1]],24],25,26],[[10,24],25],[[10,24],25],[[[2,[14,16]]],7],[27,7],[-1,-1,[]],[28,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,[[22,[19,30]]]],[29,[[22,[19,30]]]],[[],[[9,[31]]]],[[-1,-2],[[32,[-2,-3]]],[],[33,34,35],[]],[[-1,-2],[[32,[-2,-3]]],[],[33,34,35],[]],[-1,[],[]],[-1,[],[]],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[-1,7,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[11,10],[12,10],[[[13,[-1]]],10,[[15,[14]]]],0,0,0,[[19,-2,[39,[-1,-3]]],[[22,[2,7]]],40,[[41,[-1]],42,[43,[-1]],44,34,35],[[45,[-1]]]],[[7,-1],22,46],[[10,-1],22,46],[7,[[9,[5]]]],[10,[[9,[5]]]],0,[7,16],[10,16],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2,-1]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[19,29],[[22,[2,30]]]],[[19,29],[[22,[2,30]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[-1,5,[]],[6,6],[6,6],[[[48,[-1]]],[[9,[8]]],40],[27,[[9,[8]]]],[[[49,[-1]]],[[50,[-1]]],40],[[[51,[-1]]],[[50,[-1]]],40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[52,[-1,-2]]],27,[[15,[53]]],[[15,[53]]]],[[[54,[-1,-2]]],27,[[15,[20]]],[[15,[14]]]],[[[55,[-1,-2]]],27,[[15,[20]]],[[15,[14]]]],[56,27],[[[57,[-1,-2]]],27,[[15,[14]]],[[15,[16]]]],[[-1,18],9,[]],[[-1,18],9,[]],[[[48,[-1]]],[[9,[5]]],40],[27,[[9,[5]]]],[[[58,[-1]]],[[58,[-1]]],59],[[[49,[-1]]],[[49,[-1]]],[17,40]],[[[48,[-1]]],[[48,[-1]]],[17,40]],[[[60,[-1]]],[[60,[-1]]],[17,40]],[[[51,[-1]]],[[51,[-1]]],[17,40]],[61,61],[[[62,[-1]]],[[62,[-1]]],17],[63,63],[[[64,[-1]]],[[64,[-1]]],17],[65,65],[[[66,[-1]]],[[66,[-1]]],17],[[[67,[-1]]],[[67,[-1]]],17],[[[52,[-1,-2]]],[[52,[-1,-2]]],17,17],[[[54,[-1,-2]]],[[54,[-1,-2]]],17,17],[[[55,[-1,-2]]],[[55,[-1,-2]]],17,17],[56,56],[[[57,[-1,-2]]],[[57,[-1,-2]]],17,17],[27,27],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[58,[-1]],[58,[-1]]],68,59],[[-1,-2],68,[],[]],[[-1,[69,[-2]]],[[71,[[36,[70]]]]],[],[]],[[],72],[72,[[22,[[73,[-1,27]],74]]],[34,35,75]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[[[48,[-1]]],21,40],[27,21],[-1,[[22,[[49,[-2]]]]],23,40],[-1,[[22,[[60,[-2]]]]],23,40],[-1,[[22,[[51,[-2]]]]],23,40],[-1,[[22,[27]]],23],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[-1,[[36,[76]]],[]],[-1,[[36,[76]]],[]],[[[60,[-1]]],[[0,[76]]],40],[[[58,[-1]],[58,[-1]]],77,59],[[[49,[-1]],[49,[-1]]],77,[78,40]],[[[60,[-1]],[60,[-1]]],77,[78,40]],[[[51,[-1]],[51,[-1]]],77,[78,40]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],0,[[[52,[-1,-2]]],[[22,[-3,27]]],[[15,[53]]],[[15,[53]]],[]],[[[54,[-1,-2]]],[[22,[-3,27]]],[[15,[20]]],[[15,[14]]],[]],[[[55,[-1,-2]]],[[22,[-3,27]]],[[15,[20]]],[[15,[14]]],[]],[56,[[22,[-1,27]]],[]],[[[57,[-1,-2]]],[[22,[-3,27]]],[[15,[14]]],[[15,[16]]],[]],[[[58,[-1]],24],25,59],[[[58,[-1]],24],25,59],[[[49,[-1]],24],25,[26,40]],[[[48,[-1]],24],25,40],[[[48,[-1]],24],25,[26,40]],[[[60,[-1]],24],25,[26,40]],[[[51,[-1]],24],25,[26,40]],[[61,24],25],[[[62,[-1]],24],25,26],[[63,24],25],[[[64,[-1]],24],25,26],[[65,24],25],[[[66,[-1]],24],25,26],[[[67,[-1]],24],25,26],[[[52,[-1,-2]],24],25,26,26],[[[54,[-1,-2]],24],25,26,26],[[[55,[-1,-2]],24],25,26,26],[[56,24],25],[[[57,[-1,-2]],24],25,26,26],[[27,24],25],[[27,24],25],[-1,-1,[]],[20,[[58,[-1]]],59],[[[18,[-1]]],[[58,[-1]]],59],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[79,27],[[[2,[14,16]]],27],[-1,-1,[]],[29,[[22,[72,30]]]],[29,[[22,[72,30]]]],[[],[[49,[-1]]],40],[[],[[60,[-1]]],40],[[-1,-3],[[71,[[36,[70]]]]],[],[],[[15,[[80,[-2]]]],34,35]],[[-1,-2],[[71,[[36,[70]]]]],[],[[81,[20]],34]],[[-1,[82,[-2]]],[[71,[[36,[70]]]]],[],[]],[[-1,-2],53,[83,84],85],[[-1,-3],[[71,[[36,[70]]]]],[],[],[[15,[[86,[-2]]]],34,35]],[[-1,-2],[[71,[[36,[70]]]]],[],[[81,[20]],34]],[[-1,[69,[-2]],[9,[20]]],[[71,[[36,[70]]]]],[],[]],[[],[[9,[31]]]],[[[58,[-1]],-2],2,59,87],[[[49,[-1]]],[[88,[-1]]],40],[[[60,[-1]]],[[50,[-1]]],40],[[[51,[-1]]],[[82,[-1]]],40],[[-1,-2],[[32,[-2,-3]]],[],[33,34,35],[]],[[-1,-2],[[32,[-2,-3]]],[],[33,34,35],[]],[[[60,[-1]]],[[89,[-1]]],40],[[-1,-2],[[32,[-2,-3]]],[],[33,34,35],[]],[[[49,[-1]]],53,40],[[[60,[-1]]],53,40],[[[51,[-1]]],53,40],0,0,0,[-1,[],[]],[-1,[],[]],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[-1,[60,[-2]]],[[71,[[36,[70]]]]],[],[]],[[-1,[49,[-2]]],[[71,[[36,[70]]]]],[],[]],[-1,27,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[61,27],[[[62,[-1]]],27,[[15,[14]]]],[63,27],[[[64,[-1]]],27,[[15,[14]]]],[65,27],[[[66,[-1]]],27,[[15,[14]]]],[[[67,[-1]]],27,[[15,[90]]]],[[[52,[-1,-2]]],27,[[15,[53]]],[[15,[53]]]],[[[54,[-1,-2]]],27,[[15,[20]]],[[15,[14]]]],[[[55,[-1,-2]]],27,[[15,[20]]],[[15,[14]]]],[56,27],[[[57,[-1,-2]]],27,[[15,[14]]],[[15,[16]]]],[-1,77,[]],[-1,77,[]],[[[60,[-1]]],77,40],[-1,[],[]],[[[49,[-1]]],[[91,[-1]]],40],0,[-1,20,[]],[[[60,[-1]]],20,40],0,[[[60,[-1]]],[[92,[-1]]],40],[[[91,[-1]],[93,[-1]]],[[22,[[49,[-1]],[48,[-1]]]]],40],[[[91,[-1]],[93,[-1]],[94,[-1]]],[[22,[[60,[-1]],[48,[-1]]]]],40],[[-1,20],9,[]],[[-1,20],9,[]],[[-1,20],9,[]],[[-1,20],9,[]],[[-1,20],[[9,[2]]],[]],[[-1,20],[[9,[2]]],[]],[[[58,[-1]],[58,[-1]]],[[9,[68]]],59],[[[60,[-1]]],[[94,[-1]]],40],[-1,9,[]],[-1,9,[]],[[[49,[-1]]],[[69,[-1]]],40],0,[[[49,[-1]]],[[93,[-1]]],40],0,0,0,0,0,0,[[[49,[-1]],-2],22,40,46],[[[60,[-1]],-2],22,40,46],[[[51,[-1]],-2],22,40,46],[[27,-1],22,46],[[[60,[-1]]],53,40],[[[48,[-1]]],[[9,[5]]],40],[27,[[9,[5]]]],[27,16],0,[[-1,20],[[71,[[36,[70]]]]],[]],[[-1,20],[[71,[[36,[70]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,9,[]],[-1,9,[]],[[[60,[-1]],[95,[-1]]],[[9,[[51,[-1]]]]],40],[[[51,[-1]]],[[96,[-1]]],40],[[-1,18],9,[]],[[-1,18],9,[]],[[-1,18],[[9,[2]]],[]],[[-1,18],[[9,[2]]],[]],[-1,[[9,[2]]],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[72,29],[[22,[2,30]]]],[[72,29],[[22,[2,30]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,[[97,[-2,-3]]],[],[],98],[[[99,[-1,-2]]],-2,[],[]],[-1,[[97,[-2,-3]]],[],[],98],[[[99,[-1,-2]]],-2,[],[]],[[[99,[-1,-2]]],[[71,[[36,[70]]]]],[42,34,35],[34,35]],[[[100,[-1]]],[[71,[[36,[70]]]]],40],[101,[[71,[[36,[70]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[99,[-1,-2]]],[[99,[-1,-2]]],17,17],[101,101],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[71,[[36,[70]]]]],[]],[[[99,[-1,-2]]],[[71,[[36,[70]]]]],[44,34],34],[[[100,[-1]]],[[71,[[36,[70]]]]],40],[[[99,[-2,-3]],[69,[-1]]],[[71,[[36,[70]]]]],40,[[41,[-1]],34,35],[34,35]],[[[100,[-1]],[69,[-1]]],[[71,[[36,[70]]]]],40],[102,[[22,[[100,[-1]],103]]],40],[104,[[22,[[100,[-1]],103]]],40],[[],101],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,2],[20,2],[20,2],[-1,-2,[],[[106,[105]]]],[-1,-2,[],[[106,[105]]]],[[[99,[-1,-2]],24],25,26,26],[[[100,[-1]],24],25,40],[[101,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[99,[-2,-3]],-4],[[71,[[36,[70]]]]],40,[[41,[-1]],34,35],[34,35],[[15,[[80,[-1]]]],34,35]],[[[100,[-1]],-2],[[71,[[36,[70]]]]],40,[[15,[[80,[-1]]]],34,35]],[[[99,[-2,-3]],-4],[[71,[[36,[70]]]]],40,[[41,[-1]],34,35],[34,35],[[81,[20]],34]],[[[100,[-1]],-2],[[71,[[36,[70]]]]],40,[[81,[20]],34]],[[[99,[-2,-3]],[82,[-1]]],[[71,[[36,[70]]]]],40,[[41,[-1]],34,35],[34,35]],[[[100,[-1]],[82,[-1]]],[[71,[[36,[70]]]]],40],[[[99,[-2,-3]],-4],[[71,[[36,[70]]]]],40,[[41,[-1]],34,35],[34,35],[[15,[[86,[-1]]]],34,35]],[[[100,[-1]],-2],[[71,[[36,[70]]]]],40,[[15,[[86,[-1]]]],34,35]],[[[99,[-2,-3]],-4],[[71,[[36,[70]]]]],40,[[41,[-1]],34,35],[34,35],[[81,[20]],34]],[[[100,[-1]],-2],[[71,[[36,[70]]]]],40,[[81,[20]],34]],[[[99,[-2,-3]],[69,[-1]],[9,[20]]],[[71,[[36,[70]]]]],40,[[41,[-1]],34,35],[34,35]],[[[100,[-1]],[69,[-1]],[9,[20]]],[[71,[[36,[70]]]]],40],[[],20],[[],20],[[],20],[[[99,[-1,-2]]],-1,[],[]],[[[99,[-1,-2]]],-1,[],[]],[[[99,[-2,-3]],[60,[-1]]],[[71,[[36,[70]]]]],40,[[107,[-1]],34,35],[34,35]],[[[100,[-1]],[60,[-1]]],[[71,[[36,[70]]]]],40],[[[99,[-2,-3]],[49,[-1]]],[[71,[[36,[70]]]]],40,[[107,[-1]],34,35],[34,35]],[[[100,[-1]],[49,[-1]]],[[71,[[36,[70]]]]],40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[99,[-1,-2]]],108,[42,34,35],[34,35]],[[[100,[-1]]],108,40],[101,108],[[-1,-2],[[99,[-1,-2]]],[],[]],[102,[[22,[[100,[-1]],103]]],40],[104,[[22,[[100,[-1]],103]]],40],[-1,[[36,[109]]],[]],[-1,[[36,[109]]],[]],[-1,[[36,[109]]],[]],[-1,[[71,[[36,[70]]]]],[]],[[[99,[-1,-2]]],[[71,[[36,[70]]]]],[44,34],34],[[[100,[-1]]],[[71,[[36,[70]]]]],40],[[[100,[-1]]],[[22,[2,103]]],40],0,[[[99,[-2,-3]],20],[[71,[[36,[70]]]]],40,[[41,[-1]],34,35],[34,35]],[[[100,[-1]],20],[[71,[[36,[70]]]]],40],[[[99,[-2,-3]],20],[[71,[[36,[70]]]]],40,[[41,[-1]],34,35],[34,35]],[[[100,[-1]],20],[[71,[[36,[70]]]]],40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[[97,[-2,-3]],[110,[-2]]]]],[],[],98],[-1,[[22,[[97,[-2,-3]],[110,[-2]]]]],[],[],98],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[-1,[111,[-2]]],[[71,[[36,[70]]]]],[],[]],[[-1,[111,[-2]]],[[71,[[36,[70]]]]],[],[]],[[-1,[111,[-2]]],[[71,[[36,[70]]]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[112,[[9,[113]]]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[114,5],[114,5],[[[115,[-1]]],[[71,[[36,[70]]]]],40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[114,116],[112,53],[-1,117,[]],[118,117],[[[115,[-1]]],117,40],[112,112],[119,119],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[112,112],68],[[[115,[-1]]],[[71,[[36,[70]]]]],40],[[-1,-2],68,[],[]],[119,[[22,[[115,[-1]],114]]],40],[119,[[22,[[115,[-1]],114]]],40],[[114,-1],114,[33,34,35]],[[[115,[-1]],[69,[-1]]],[[71,[[36,[70]]]]],40],[[119,21],119],[[],119],[[],[[120,[112]]]],[114],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[114],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[114,[[22,[-1,114]]],[33,26,34,35]],[114,[[9,[-1]]],[33,26,34,35]],[114,[[9,[-1]]],[33,26,34,35]],[20,2],[114,2],[20,2],[20,2],[20,2],[20,2],[[[115,[-1]]],2,40],[[112,112],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[118,-1,-2],[[121,[2]]],[84,122],123],[[118,-1],[[121,[2]]],123],[[114,24],[[22,[2,124]]]],[[114,24],[[22,[2,124]]]],[[112,24],[[22,[2,124]]]],[[112,24],[[22,[2,124]]]],[[119,24],25],[[[115,[-1]],24],25,[40,26]],[-1,-1,[]],[-1,114,[5,34,35]],[125,-1,[]],[-1,-1,[]],[-1,-1,[]],[126,119],[-1,-1,[]],[-1,-1,[]],[21,[[22,[119]]]],[[[115,[-1]],-2],[[71,[[36,[70]]]]],40,[[15,[[80,[-1]]]],34,35]],[[[115,[-1]],-2],[[71,[[36,[70]]]]],40,[[81,[20]],34]],[[[115,[-1]],[82,[-1]]],[[71,[[36,[70]]]]],40],[[[115,[-1]],-2],[[71,[[36,[70]]]]],40,[[15,[[86,[-1]]]],34,35]],[[[115,[-1]],-2],[[71,[[36,[70]]]]],40,[[81,[20]],34]],[[[115,[-1]],[69,[-1]],[9,[20]]],[[71,[[36,[70]]]]],40],[[-1,-2],[[32,[-2,-3]]],[],[33,34,35],[]],[[-1,-2],[[32,[-2,-3]]],[],[33,34,35],[]],[[119,-1],119,[[15,[14]]]],0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[[115,[-1]],[60,[-1]]],[[71,[[36,[70]]]]],40],[[[115,[-1]],[49,[-1]]],[[71,[[36,[70]]]]],40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[114,77],[[[115,[-1]]],108,40],[[119,-1],119,123],[-1,114,[33,26,34,35]],[112,21],[-1,114,[5,34,35]],[119,119],[[112,112],[[9,[68]]]],[[119,21],119],[-1,[[36,[109]]],[]],[[119,127],119],0,[112,128],[[-1,-2,-3],[[71,[[36,[70]]]]],35,[84,122,35],[123,34]],[[-1,-2,-3],[[71,[[36,[70]]]]],35,[84,122,35],[123,34]],[[-1,-2],[[71,[[36,[70]]]]],35,[84,122,35]],[[-1,-2,-3],[[71,[[36,[70]]]]],35,[84,122,35],[123,34]],[[-1,-2],[[71,[[36,[70]]]]],35,[84,122,35]],[[-1,-2],[[71,[[36,[70]]]]],35,[84,122,35]],[119,119],[[[115,[-1]]],[[71,[[36,[70]]]]],40],[114,5],[[119,-1],119,[[15,[14]]]],[112,[[9,[21]]]],[[[115,[-1]],20],[[71,[[36,[70]]]]],40],[[[115,[-1]],20],[[71,[[36,[70]]]]],40],[119,119],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[[[115,[-1]]],[[121,[118]]],40],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[21,21],[[22,[112,129]]]],[[-1,[111,[-2]]],[[71,[[36,[70]]]]],[],[]],[[119,21],119],[112,130],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[131,20],2],[[132,133],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[134,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[134,[[9,[5]]]],[108,108],[131,131],[135,135],[132,132],[136,136],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[108,14,[9,[14]]],[[36,[137]]]],[[108,14,[9,[14]]],[[36,[138]]]],[[108,14,[9,[14]]],[[36,[139]]]],[[108,14],[[36,[140]]]],[[],108],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[134,21],[20,2],[20,2],[20,2],[20,2],[20,2],[20,2],[108,[[22,[14]]]],[[134,24],25],[[134,24],25],[[108,24],25],[[131,24],25],[[135,24],25],[[132,24],25],[[136,24],25],[141,134],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[131,20],[135,20],[136,14],[[108,21],[[22,[131,134]]]],[[108,21],[[22,[135,134]]]],[[108,21],[[22,[132,134]]]],[[108,21],[[22,[136,134]]]],[[108,-1],[[22,[108,134]]],123],[[-1,-2],[[32,[-2,-3]]],[],[33,34,35],[]],[-1,[],[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[132,133],[132,20],[[135,20],2],[[136,14],2],[134,[[9,[5]]]],[[108,14],[[36,[109]]]],[132,133],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[135,142],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[6,6],[6,6],[28,[[9,[8]]]],[-1,[[71,[[36,[70]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,[[9,[5]]]],[143,143],[28,28],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[143,143],68],[[-1,-2],68,[],[]],[-1,[[121,[108]]],[]],[-1,[[121,[108]]],[]],[[],143],[[],144],[144,[[22,[[73,[-1,28]],74]]],[34,35,75]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[28,21],[-1,[[22,[143]]],23],[-1,[[22,[28]]],23],[20,2],[20,2],[20,2],[[143,143],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],0,[[143,24],25],[[28,24],25],[[28,24],25],[-1,-1,[]],[-1,-1,[]],[79,28],[-1,-1,[]],[14,28],[29,[[22,[144,30]]]],[29,[[22,[144,30]]]],[[-1,-2],53,[83,84],85],[[],[[9,[31]]]],[[143,-1],2,87],[[-1,-2],[[32,[-2,-3]]],[],[33,34,35],[]],[-1,[],[]],[[],20],[[],20],[[],20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[36,[-1]]],[[36,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[37,[-1]]],[[37,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],[[[38,[-1]]],[[38,[4]]],[]],0,[-1,[[71,[[36,[70]]]]],35],[-1,[[71,[[36,[70]]]]],35],[-1,108,[]],[[143,143],[[9,[68]]]],[-1,[[36,[109]]],[]],[[143,-1],22,46],[[28,-1],22,46],[28,[[9,[5]]]],[28,16],[-1,[[71,[[36,[70]]]]],35],[-1,[[71,[[36,[70]]]]],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[144,29],[[22,[2,30]]]],[[144,29],[[22,[2,30]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[3,"Private",1508],[15,"tuple"],[3,"Private",1508],[8,"Any",1509],[8,"Error",1510],[3,"Command",1511],[4,"Error",0],[3,"Backtrace",1512],[4,"Option",1513],[4,"QueryError",0],[3,"NotFoundSnafu",0],[3,"MissingSnafu",0],[3,"Snafu",0],[3,"String",1514],[8,"Into",1515],[4,"StatusCode",1516],[8,"Clone",1517],[3,"Commitment",1518],[3,"Options",0],[15,"usize"],[15,"str"],[4,"Result",1519],[8,"Deserializer",1520],[3,"Formatter",1521],[6,"Result",1521],[8,"Debug",1521],[4,"Error",217],[4,"Error",1387],[3,"ArgMatches",1522],[6,"Error",1523],[3,"Id",1524],[3,"IndentedSection",1525],[8,"Display",1521],[8,"Send",1526],[8,"Sync",1526],[3,"Box",1527],[3,"Arc",1528],[3,"Rc",1529],[3,"SystemContextHandle",1530],[8,"NodeType",1531],[8,"AvailabilityDataSource",217],[8,"StatusDataSource",1387],[8,"UpdateDataSource",888],[8,"VersionedDataSource",888],[8,"NodeImplementation",1531],[8,"Serializer",1532],[3,"TypeId",1509],[3,"InconsistentLeafError",217],[3,"LeafQueryData",217],[6,"BlockHash",217],[3,"TransactionQueryData",217],[3,"InvalidTransactionIndexSnafu",217],[15,"u64"],[3,"LeafStreamSnafu",217],[3,"BlockStreamSnafu",217],[3,"InvalidSignatureKeySnafu",217],[3,"CustomSnafu",217],[4,"ResourceId",217],[8,"Committable",1518],[3,"BlockQueryData",217],[3,"RequestSnafu",217],[3,"QueryLeafSnafu",217],[3,"StreamLeafSnafu",217],[3,"QueryBlockSnafu",217],[3,"StreamBlockSnafu",217],[3,"QueryTransactionSnafu",217],[3,"QueryProposalsSnafu",217],[4,"Ordering",1533],[6,"SignatureKey",0],[8,"Future",1534],[3,"Pin",1535],[3,"Options",217],[3,"Api",1536],[4,"ApiError",1536],[8,"ReadState",1537],[8,"Iterator",1538],[15,"bool"],[8,"PartialEq",1533],[4,"RequestError",1539],[6,"BlockId",217],[8,"RangeBounds",1540],[6,"TransactionHash",217],[8,"Hash",1541],[8,"Sized",1526],[8,"BuildHasher",1541],[6,"LeafId",217],[8,"Hasher",1541],[6,"LeafHash",217],[6,"Header",0],[3,"EncodedPublicKey",1542],[3,"Leaf",1543],[6,"Metadata",0],[6,"QuorumCertificate",1544],[6,"Payload",0],[6,"TransactionIndex",217],[6,"Transaction",0],[3,"BitSlice",1545],[8,"BitOrder",1546],[3,"ExtensibleDataSource",888],[3,"FileSystemDataSource",888],[3,"MetricsDataSource",888],[3,"Path",1547],[4,"PersistenceError",1548],[3,"AtomicStoreLoader",1549],[15,"char"],[8,"FromIterator",1550],[8,"UpdateAvailabilityData",217],[3,"PrometheusMetrics",1208],[8,"Metrics",1551],[4,"BitSpanError",1552],[3,"Event",1553],[3,"Migration",1017],[3,"OffsetDateTime",1554],[3,"Error",1017],[3,"SqlDataSource",1017],[3,"Chain",1555],[3,"Client",1556],[3,"Transaction",1017],[3,"Config",1017],[3,"Vec",1557],[6,"QueryResult",0],[8,"ToStatement",1558],[8,"IntoIterator",1550],[3,"Error",1521],[15,"never"],[3,"Config",1559],[15,"u16"],[4,"Type",1560],[3,"Error",1561],[15,"u32"],[3,"Counter",1208],[3,"Histogram",1208],[15,"f64"],[4,"MetricsError",1208],[3,"Gauge",1208],[3,"Label",1208],[8,"Counter",1551],[8,"Gauge",1551],[8,"Histogram",1551],[8,"Label",1551],[4,"Error",1562],[15,"i64"],[3,"MempoolQueryData",1387],[3,"Options",1387],[8,"Resolvable",0],[13,"Custom",212],[13,"Availability",212],[13,"Status",212],[13,"Error",216],[8,"QueryablePayload",217],[13,"InvalidTransactionIndex",869],[13,"LeafStream",869],[13,"BlockStream",869],[13,"Custom",869],[13,"QueryProposals",869],[13,"QueryLeaf",869],[13,"QueryBlock",869],[13,"QueryTransaction",869],[13,"Request",869],[13,"StreamLeaf",869],[13,"StreamBlock",869],[8,"Query",1017],[13,"NoSuchMetric",1383],[13,"NoSuchSubgroup",1383],[13,"Prometheus",1383],[8,"UpdateStatusData",1387],[13,"Internal",1506],[13,"Request",1506]],"b":[[107,"impl-Display-for-Error"],[108,"impl-Debug-for-Error"],[112,"impl-Debug-for-QueryError"],[113,"impl-Display-for-QueryError"],[114,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[115,"impl-From%3CError%3E-for-Error"],[117,"impl-From%3CError%3E-for-Error"],[536,"impl-Display-for-ResourceId%3CT%3E"],[537,"impl-Debug-for-ResourceId%3CT%3E"],[539,"impl-Display-for-InconsistentLeafError%3CTypes%3E"],[540,"impl-Debug-for-InconsistentLeafError%3CTypes%3E"],[555,"impl-Display-for-Error"],[556,"impl-Debug-for-Error"],[558,"impl-From%3Cusize%3E-for-ResourceId%3CT%3E"],[559,"impl-From%3CCommitment%3CT%3E%3E-for-ResourceId%3CT%3E"],[577,"impl-From%3CRequestError%3E-for-Error"],[578,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[1038,"impl-AsRef%3Cdyn+Error%3E-for-Error"],[1039,"impl-AsRef%3Cdyn+Error+%2B+Send+%2B+Sync%3E-for-Error"],[1099,"impl-Debug-for-Error"],[1100,"impl-Display-for-Error"],[1101,"impl-Display-for-Migration"],[1102,"impl-Debug-for-Migration"],[1291,"impl-Display-for-MetricsError"],[1292,"impl-Debug-for-MetricsError"],[1447,"impl-Debug-for-Error"],[1448,"impl-Display-for-Error"],[1451,"impl-From%3CRequestError%3E-for-Error"],[1453,"impl-From%3CString%3E-for-Error"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
